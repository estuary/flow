-- Valid resources.
INSERT INTO resources (content_type, content, is_processed)
VALUES ('application/vnd.estuary.dev-catalog-spec+yaml', 'catalog spec content', FALSE),
       ('application/vnd.estuary.dev-catalog-fixtures+yaml', 'catalog fixtures content', TRUE),
       ('application/schema+yaml', 'json-schema content', FALSE),
       ('application/schema+yaml', 'other schema', TRUE),
       ('application/schema+yaml', 'yet more schema content', FALSE),
       ('application/sql', 'bootstrap content', TRUE),
       ('application/sql', 'transform content', FALSE);
changes:   7   total_changes: XYZ

-- Invalid resource (unknown content type).
Error: near line (XYZ): CHECK constraint failed: Invalid resource content-type
INSERT INTO resources (content_type, content, is_processed)
VALUES ('application/unknown', 'unknown content', FALSE);

-- Valid imports, which form a directed acyclic graph.
INSERT INTO resource_imports (resource_id, import_id)
VALUES
    -- 1 => 2 => 3 => 4.
    (1, 2),
    (3, 4),
    (2, 3),
    -- Disconnected 5 => 6.
    (5, 6);
changes:   4   total_changes: XYZ

-- Verify transitive relationships (one row for each path).
SELECT *
FROM resource_transitive_imports;
resource_id|import_id
1|1
2|2
3|3
4|4
5|5
6|6
7|7
1|2
2|3
3|4
5|6
1|3
2|4
1|4
changes:   4   total_changes: XYZ

-- Invalid import (direct cycle).
Error: near line (XYZ): Import creates an cycle (imports must be acyclic)
INSERT INTO resource_imports (resource_id, import_id)
VALUES (4, 3);

-- Invalid import (indirect cycle).
Error: near line (XYZ): Import creates an cycle (imports must be acyclic)
INSERT INTO resource_imports (resource_id, import_id)
VALUES (4, 1);

-- Invalid import (implicit cycle).
Error: near line (XYZ): Import creates an cycle (imports must be acyclic)
INSERT INTO resource_imports (resource_id, import_id)
VALUES (6, 6);

-- Valid imports which include duplicates and alternate resource paths.
INSERT INTO resource_imports (resource_id, import_id)
VALUES (2, 3), -- Repeat.
       (1, 3), -- Alternate 1 => 3 => 4.
       (2, 4), -- Alternate 1 => 2 => 4.
       (5, 6)  -- Repeat.
ON CONFLICT DO NOTHING;
changes:   2   total_changes: XYZ

SELECT DISTINCT *
FROM resource_transitive_imports;
resource_id|import_id
1|1
2|2
3|3
4|4
5|5
6|6
7|7
1|2
1|3
2|3
2|4
3|4
5|6
1|4
changes:   2   total_changes: XYZ

-- Valid resource URLs.
INSERT INTO resource_urls (resource_id, url, is_primary)
VALUES (1, 'file:///path/to/spec.yaml', TRUE),
       (2, 'file:///path/to/some/fixtures.yaml', TRUE),
       (3, 'file:///path/to/a/schema.yaml', TRUE),
       (4, 'https://host/path/schema?query=val', TRUE),
       (5, 'file:///path/to/other/schema.yaml', TRUE),
       (6, 'file:///path/to/some/bootstrap.sql', TRUE),
       (7, 'file:///path/to/some/transform.sql', TRUE),
       -- Alternate resource URLs.
       -- Each resource may have multiple alternate URLs.
       (3, 'https://canonical/schema/uri', NULL),
       (4, 'https://redirect-1/schema', NULL),
       (4, 'https://redirect-2/schema', NULL),
       (4, 'https://redirect-3/schema', NULL);
changes:  11   total_changes: XYZ

-- Invalid URL (not a base URL).
Error: near line (XYZ): CHECK constraint failed: URL must be a valid, base (non-relative) URL
INSERT INTO resource_urls (resource_id, url)
VALUES (1, 'relative/url');

-- Invalid URL (cannot have a #fragment).
Error: near line (XYZ): CHECK constraint failed: URL cannot have a fragment component
INSERT INTO resource_urls (resource_id, url)
VALUES (1, 'https://host/path/with#fragment');

-- Invalid URL (duplicated URL).
Error: near line (XYZ): UNIQUE constraint failed: resource_urls.url
INSERT INTO resource_urls (resource_id, url)
VALUES (2, 'file:///path/to/spec.yaml');

-- Invalid URL (resource already has a primary URL).
Error: near line (XYZ): UNIQUE constraint failed: resource_urls.resource_id, resource_urls.is_primary
INSERT INTO resource_urls (resource_id, url, is_primary)
VALUES (1, 'file:///path/to/dup/primary/spec.yaml', TRUE);

-- Expect we can natural join resources to URLs.
SELECT *
FROM resources
         NATURAL JOIN resource_urls;
resource_id|content_type|content|is_processed|url|is_primary
1|application/vnd.estuary.dev-catalog-spec+yaml|catalog spec content|0|file:///path/to/spec.yaml|1
2|application/vnd.estuary.dev-catalog-fixtures+yaml|catalog fixtures content|1|file:///path/to/some/fixtures.yaml|1
3|application/schema+yaml|json-schema content|0|file:///path/to/a/schema.yaml|1
4|application/schema+yaml|other schema|1|https://host/path/schema?query=val|1
5|application/schema+yaml|yet more schema content|0|file:///path/to/other/schema.yaml|1
6|application/sql|bootstrap content|1|file:///path/to/some/bootstrap.sql|1
7|application/sql|transform content|0|file:///path/to/some/transform.sql|1
3|application/schema+yaml|json-schema content|0|https://canonical/schema/uri|
4|application/schema+yaml|other schema|1|https://redirect-1/schema|
4|application/schema+yaml|other schema|1|https://redirect-2/schema|
4|application/schema+yaml|other schema|1|https://redirect-3/schema|
changes:   0   total_changes: XYZ

-- View over all transitive JSON-Schemas.
SELECT * FROM resource_schemas;
resource_id|schema_uri|schema_content
1|file:///path/to/a/schema.yaml|json-schema content
1|https://host/path/schema?query=val|other schema
2|file:///path/to/a/schema.yaml|json-schema content
2|https://host/path/schema?query=val|other schema
3|file:///path/to/a/schema.yaml|json-schema content
3|https://host/path/schema?query=val|other schema
4|https://host/path/schema?query=val|other schema
5|file:///path/to/other/schema.yaml|yet more schema content
changes:   0   total_changes: XYZ

-- Valid lambdas.
INSERT INTO lambdas (runtime, inline, resource_id)
VALUES ('nodeJS', '(state) => { console.log(''hello''); }', NULL),
       ('nodeJS', '(doc, state) => {...doc, key: 1}', NULL),
       ('sqlite', 'SELECT 1;', NULL),
       ('sqliteFile', NULL, 6), -- Bootstrap.
       ('sqliteFile', NULL, 7), -- Transform.
       ('remote', 'https://remote/endpoint', NULL),
       ('nodeJS', '(doc, state) => {...doc, foo: true}', NULL);
changes:   7   total_changes: XYZ

-- Invalid lambda (unknown runtime).
Error: near line (XYZ): CHECK constraint failed: Unknown Lambda runtime
INSERT INTO lambdas (runtime, inline)
VALUES ('unknown', 'foobar');

-- Invalid lambda (nodeJS without inline expression).
Error: near line (XYZ): CHECK constraint failed: NodeJS lambda must provide an inline expression
INSERT INTO lambdas (runtime, resource_id)
VALUES ('nodeJS', 4);

-- Invalid lambda (sqlite without inline expression).
Error: near line (XYZ): CHECK constraint failed: SQLite lambda must provide an inline expression
INSERT INTO lambdas (runtime, resource_id)
VALUES ('sqlite', 6);

-- Invalid lambda (sqliteFile with inline expression).
Error: near line (XYZ): CHECK constraint failed: SQLiteFile lambda must provide a file resource
INSERT INTO lambdas (runtime, inline)
VALUES ('sqliteFile', 'SELECT 1;');

-- Invalid lambda (sqliteFile with non-existent resource).
Error: near line (XYZ): FOREIGN KEY constraint failed
INSERT INTO lambdas (runtime, resource_id)
VALUES ('sqliteFile', 42);

-- Invalid lambda (remote without a valid URL).
Error: near line (XYZ): CHECK constraint failed: Remote lambda must provide an HTTP endpoint URL
INSERT INTO lambdas (runtime, inline)
VALUES ('remote', 'not-a-URL');

-- Expect we can natural join lambdas => resources
SELECT *
FROM lambdas
         NATURAL LEFT JOIN resources;
lambda_id|runtime|inline|resource_id|content_type|content|is_processed
1|nodeJS|(state) => { console.log('hello'); }||||
2|nodeJS|(doc, state) => {...doc, key: 1}||||
3|sqlite|SELECT 1;||||
4|sqliteFile||6|application/sql|bootstrap content|1
5|sqliteFile||7|application/sql|transform content|0
6|remote|https://remote/endpoint||||
7|nodeJS|(doc, state) => {...doc, foo: true}||||
changes:   0   total_changes: XYZ

-- Valid collections.
INSERT INTO collections (collection_name, schema_uri, key_json, resource_id)
VALUES ('col/src', 'file:///path/to/a/schema.yaml#anchor', '["/key/0","/key/1"]', 3),
       ('col/derived', 'https://canonical/schema/uri#/$defs/path', '["/foo"]', 2),
       ('col/der.iv-e+d', 'https://canonical/schema/uri#/$defs/path', '["/foo"]', 1),
       ('col/other-src', 'file:///path/to/a/schema.yaml', '["/key"]', 6);
changes:   4   total_changes: XYZ

-- Invalid collection (schema is not a URI).
Error: near line (XYZ): CHECK constraint failed: Schema must be a valid base (non-relative) URI
INSERT INTO collections (collection_name, schema_uri, key_json, resource_id)
VALUES ('col/bad', 'not-a-uri', '["/key"]', 1);

-- Invalid collection (collection name doesn't match pattern).
Error: near line (XYZ): CHECK constraint failed: Collection name format isn't valid
INSERT INTO collections (collection_name, schema_uri, key_json, resource_id)
VALUES ('spaces not allowed', 'file:///path/to/a/schema.yaml', '["/key"]', 1);
Error: near line (XYZ): CHECK constraint failed: Collection name format isn't valid
INSERT INTO collections (collection_name, schema_uri, key_json, resource_id)
VALUES ('bad!', 'file:///path/to/a/schema.yaml', '["/key"]', 1);

-- Invalid collection (key is not non-empty [JSON-Pointer]).
Error: near line (XYZ): malformed JSON
INSERT INTO collections (collection_name, schema_uri, key_json, resource_id)
VALUES ('col/bad', 'file:///path/to/a/schema.yaml', '["malformed"', 1);
Error: near line (XYZ): CHECK constraint failed: Key must be non-empty JSON array of JSON-Pointers
INSERT INTO collections (collection_name, schema_uri, key_json, resource_id)
VALUES ('col/bad', 'file:///path/to/a/schema.yaml', '{"not":"array"}', 1);
Error: near line (XYZ): CHECK constraint failed: Key must be non-empty JSON array of JSON-Pointers
INSERT INTO collections (collection_name, schema_uri, key_json, resource_id)
VALUES ('col/bad', 'file:///path/to/a/schema.yaml', '[]', 1);

-- Invalid collection (resource doesn't exist).
Error: near line (XYZ): FOREIGN KEY constraint failed
INSERT INTO collections (collection_name, schema_uri, key_json, resource_id)
VALUES ('col/bad', 'file:///path/to/a/schema.yaml', '["/key"]', 42);

SELECT *
FROM collections;
collection_id|collection_name|schema_uri|key_json|resource_id
1|col/src|file:///path/to/a/schema.yaml#anchor|["/key/0","/key/1"]|3
2|col/derived|https://canonical/schema/uri#/$defs/path|["/foo"]|2
3|col/der.iv-e+d|https://canonical/schema/uri#/$defs/path|["/foo"]|1
4|col/other-src|file:///path/to/a/schema.yaml|["/key"]|6
changes:   0   total_changes: XYZ

-- Valid projections.
INSERT INTO projections (collection_id, field, location_ptr, user_provided)
VALUES (1, 'field_1', '/key/0', TRUE),
       (1, 'field_2', '/key/1', FALSE),
       (1, 'field_3', '/path/3', FALSE),
       (2, 'field_1', '', FALSE), -- Repeat field name with different collection.
       (2, 'field_a', '/a', TRUE);
changes:   5   total_changes: XYZ

-- Invalid projection (no such collection).
Error: near line (XYZ): FOREIGN KEY constraint failed
INSERT INTO projections (collection_id, field, location_ptr, user_provided)
VALUES (42, 'foo', '/bar', TRUE);

-- Invalid projection (invalid JSON-Pointer).
Error: near line (XYZ): CHECK constraint failed: Location must be a valid JSON-Pointer
INSERT INTO projections (collection_id, field, location_ptr, user_provided)
VALUES (1, 'foo', 'bar', TRUE);
Error: near line (XYZ): CHECK constraint failed: Location must be a valid JSON-Pointer
INSERT INTO projections (collection_id, field, location_ptr, user_provided)
VALUES (1, 'foo', '/bar/', TRUE);

-- Valid projections which are partitions.
INSERT INTO partitions (collection_id, field)
VALUES (1, 'field_2'),
       (2, 'field_a');
changes:   2   total_changes: XYZ
-- Invalid partitions (no such collection).
Error: near line (XYZ): FOREIGN KEY constraint failed
INSERT INTO partitions (collection_id, field)
VALUES (42, 'field_2');
-- Invalid partition (no such projection).
Error: near line (XYZ): FOREIGN KEY constraint failed
INSERT INTO partitions (collection_id, field)
VALUES (1, 'field_zzz');

-- Valid fixtures.
INSERT INTO fixtures (collection_id, resource_id)
VALUES (1, 2),
       (2, 2);
changes:   2   total_changes: XYZ

-- Invalid fixture (no such collection);
Error: near line (XYZ): FOREIGN KEY constraint failed
INSERT INTO fixtures (collection_id, resource_id)
VALUES (42, 2);

-- Invalid fixture (no such resource);
Error: near line (XYZ): FOREIGN KEY constraint failed
INSERT INTO fixtures (collection_id, resource_id)
VALUES (2, 42);

-- Valid derivations.
INSERT INTO derivations (collection_id, register_schema_uri, register_initial_json)
VALUES (2, "file:///path/to/a/schema.yaml#register", "{}"),
       (3, "file:///path/to/a/schema.yaml#other-register", "[]");
changes:   2   total_changes: XYZ

-- Register schema must not be NULL.
Error: near line (XYZ): NOT NULL constraint failed: derivations.register_schema_uri
UPDATE derivations
SET register_schema_uri = NULL;
-- Register initial JSON must not be NULL.
Error: near line (XYZ): NOT NULL constraint failed: derivations.register_initial_json
UPDATE derivations
SET register_initial_json = NULL;
-- Register initial JSON must be JSON.
Error: near line (XYZ): CHECK constraint failed: Initial Register must be valid JSON
UPDATE derivations
SET register_initial_json = "[";
-- Invalid derivation (collection must exist).
Error: near line (XYZ): FOREIGN KEY constraint failed
INSERT INTO derivations (collection_id, register_schema_uri, register_initial_json)
VALUES (42, "file:///path/to/a/schema.yaml#register", "1");
-- Invalid derivation (schema is not a URI).
Error: near line (XYZ): CHECK constraint failed: Register schema must be a valid base (non-relative) URI
INSERT INTO derivations (collection_id, register_schema_uri, register_initial_json)
VALUES (1, 'not-a-uri', "1");

-- Valid bootstrap.
INSERT INTO bootstraps (derivation_id, lambda_id)
VALUES (2, 1),
       (2, 4),
       (3, 1);
changes:   3   total_changes: XYZ

-- Invalid bootstrap (derivation must exist).
Error: near line (XYZ): FOREIGN KEY constraint failed
INSERT INTO bootstraps (derivation_id, lambda_id)
VALUES (42, 1);
-- Invalid bootstrap (collection_id = 1 is not a derivation).
Error: near line (XYZ): FOREIGN KEY constraint failed
INSERT INTO bootstraps (derivation_id, lambda_id)
VALUES (1, 1);
-- Invalid bootstrap (lambda must exist).
Error: near line (XYZ): FOREIGN KEY constraint failed
INSERT INTO bootstraps (derivation_id, lambda_id)
VALUES (2, 42);

-- Expect we can natural join from bootstraps => resources.
SELECT *
FROM bootstraps
         NATURAL LEFT JOIN lambdas
         NATURAL LEFT JOIN resources;
bootstrap_id|derivation_id|lambda_id|runtime|inline|resource_id|content_type|content|is_processed
1|2|1|nodeJS|(state) => { console.log('hello'); }||||
2|2|4|sqliteFile||6|application/sql|bootstrap content|1
3|3|1|nodeJS|(state) => { console.log('hello'); }||||
changes:   0   total_changes: XYZ

-- Valid transforms.
INSERT INTO transforms (
    transform_name,
    derivation_id,
    source_collection_id,
    update_id,
    publish_id,
    read_delay_seconds,
    source_schema_uri)
VALUES ("one", 2, 1, 2,    NULL, NULL, NULL),
       ("two", 2, 1, NULL, 3,    NULL, NULL),
       ("3re", 2, 1, NULL, 5,    60,   NULL),
       ("4or", 2, 1, 6,    NULL, 120,  NULL),
       ("one", 3, 1, 5,    7,    1,    'https://alt/source/schema#anchor')
;
changes:   5   total_changes: XYZ

-- Name must be set.
Error: near line (XYZ): NOT NULL constraint failed: transforms.transform_name
UPDATE transforms
SET transform_name = NULL
WHERE transform_id = 1;

-- And must be unique to the derivation.
Error: near line (XYZ): UNIQUE constraint failed: transforms.transform_name, transforms.derivation_id
UPDATE transforms
SET transform_name = "two"
WHERE transform_id = 1;

-- Invalid source-schema
Error: near line (XYZ): CHECK constraint failed: Source schema must be NULL or a valid base (non-relative) URI
UPDATE transforms
SET source_schema_uri = 'not-a-url'
WHERE transform_id = 1;

-- Invalid source schema is the same as the collection schema
Error: near line (XYZ): Transforms that specify a source schema may not use the same schema as the source collection
INSERT INTO transforms (derivation_id, source_collection_id, source_schema_uri)
VALUES (2, 1, 'file:///path/to/a/schema.yaml#anchor');

-- Shuffle-key must be array of JSON-pointers.
Error: near line (XYZ): malformed JSON
UPDATE transforms
SET shuffle_key_json = '["/malformed'
WHERE transform_id = 1;
Error: near line (XYZ): CHECK constraint failed: Shuffle key must be NULL or non-empty JSON array of JSON-Pointers
UPDATE transforms
SET shuffle_key_json = '{"not":"array"}'
WHERE transform_id = 1;
-- OK.
UPDATE transforms
SET shuffle_key_json = '["/key"]'
WHERE transform_id = 1;
changes:   1   total_changes: XYZ

-- Derivation must exist (not a collection).
Error: near line (XYZ): FOREIGN KEY constraint failed
UPDATE transforms
SET derivation_id = 42
WHERE transform_id = 1;
-- Derivation must exist (a collection, but not a derivation).
Error: near line (XYZ): FOREIGN KEY constraint failed
UPDATE transforms
SET derivation_id = 1
WHERE transform_id = 1;
-- Source collection must exist.
Error: near line (XYZ): FOREIGN KEY constraint failed
UPDATE transforms
SET source_collection_id = 42;

-- Update & publish lambdas must exist.
Error: near line (XYZ): FOREIGN KEY constraint failed
UPDATE transforms
SET publish_id = 42;
Error: near line (XYZ): FOREIGN KEY constraint failed
UPDATE transforms
SET update_id = 42;
-- At least one of update & publish must be set.
Error: near line (XYZ): CHECK constraint failed: Must set at least one of 'update' or 'publish' lambdas
UPDATE transforms
SET publish_id = NULL, update_id = NULL
WHERE transform_id = 1;

-- Read delay must be positive.
Error: near line (XYZ): CHECK constraint failed: transforms
UPDATE transforms
SET read_delay_seconds = 0;

-- The resource of the spec defining this transform must also import the
-- spec of the referenced source collection.
Error: near line (XYZ): Transform references a source collection which is not imported by this catalog spec
INSERT INTO transforms (transform_name, derivation_id, source_collection_id, publish_id)
VALUES ("fails", 2, 4, 2);

-- Transforms of a single derivation reading from the same source collection
-- must all use the same source schema URI.

-- Case: existing transform with same schema (success).
INSERT INTO transforms (transform_name, derivation_id, source_collection_id, publish_id, source_schema_uri)
VALUES ("works", 3, 1, 7, 'https://alt/source/schema#anchor');
changes:   1   total_changes: XYZ
-- Case: existing transform with explicit different schema (fails).
Error: near line (XYZ): Transforms of a derived collection which read from the same source collection must use the same source schema URI
INSERT INTO transforms (transform_name, derivation_id, source_collection_id, publish_id, source_schema_uri)
VALUES ("fails", 3, 1, 7, 'https://alt/source/schema#different-anchor');
-- Case: existing transform with null source-schema (fails).
Error: near line (XYZ): Transforms of a derived collection which read from the same source collection must use the same source schema URI
INSERT INTO transforms (transform_name, derivation_id, source_collection_id, publish_id, source_schema_uri)
VALUES ("fails", 2, 1, 2, 'https://alt/source/schema#anchor');

-- Valid transform source partitions.
INSERT INTO transform_source_partitions (
    transform_id,
    collection_id,
    field,
    value_json,
    is_exclude)
VALUES (2, 1, 'field_2', 'true', FALSE),
       (4, 1, 'field_2', '"456"', TRUE)
;
changes:   2   total_changes: XYZ
-- Case: invalid json.
Error: near line (XYZ): CHECK constraint failed: Value must be valid JSON
INSERT INTO transform_source_partitions (
    transform_id, collection_id, field, value_json, is_exclude)
VALUES (1, 1, 'field_2', '{"invalid":', FALSE);
-- Case: projection doesn't exist.
Error: near line (XYZ): FOREIGN KEY constraint failed
INSERT INTO transform_source_partitions (
    transform_id, collection_id, field, value_json, is_exclude)
VALUES (1, 1, 'field_zzz', 'true', FALSE);
-- Case: projection exists, but is not a logical partition.
Error: near line (XYZ): FOREIGN KEY constraint failed
INSERT INTO transform_source_partitions (
    transform_id, collection_id, field, value_json, is_exclude)
VALUES (1, 1, 'field_1', 'true', FALSE);
-- Case: projection is a logical partition of another collection (not this source).
Error: near line (XYZ): FOREIGN KEY constraint failed
INSERT INTO transform_source_partitions (
    transform_id, collection_id, field, value_json, is_exclude)
VALUES (1, 1, 'field_a', 'true', FALSE);

-- Transform details is a view which joins transforms with related resources
-- and emits a flattened representation with assumed default values.
SELECT * FROM transform_details;
transform_id|transform_name|register_schema_uri|source_collection_id|source_name|source_resource_id|source_schema_uri|source_partitions_json|is_alt_source_schema|shuffle_key_json|read_delay_seconds|derivation_id|derivation_name|derivation_resource_id|derivation_schema_uri|derivation_key_json|update_id|update_runtime|update_inline|update_resource_id|update_resource_content|publish_id|publish_runtime|publish_inline|publish_resource_id|publish_resource_content
1|one|file:///path/to/a/schema.yaml#register|1|col/src|3|file:///path/to/a/schema.yaml#anchor||0|["/key"]||2|col/derived|2|https://canonical/schema/uri#/$defs/path|["/foo"]|2|nodeJS|(doc, state) => {...doc, key: 1}|||||||
2|two|file:///path/to/a/schema.yaml#register|1|col/src|3|file:///path/to/a/schema.yaml#anchor|[{"field":"field_2","value":"true","exclude":0}]|0|["/key/0","/key/1"]||2|col/derived|2|https://canonical/schema/uri#/$defs/path|["/foo"]||||||3|sqlite|SELECT 1;||
3|3re|file:///path/to/a/schema.yaml#register|1|col/src|3|file:///path/to/a/schema.yaml#anchor||0|["/key/0","/key/1"]|60|2|col/derived|2|https://canonical/schema/uri#/$defs/path|["/foo"]||||||5|sqliteFile||7|transform content
4|4or|file:///path/to/a/schema.yaml#register|1|col/src|3|file:///path/to/a/schema.yaml#anchor|[{"field":"field_2","value":"\"456\"","exclude":1}]|0|["/key/0","/key/1"]|120|2|col/derived|2|https://canonical/schema/uri#/$defs/path|["/foo"]|6|remote|https://remote/endpoint|||||||
5|one|file:///path/to/a/schema.yaml#other-register|1|col/src|3|https://alt/source/schema#anchor||1|["/key/0","/key/1"]|1|3|col/der.iv-e+d|1|https://canonical/schema/uri#/$defs/path|["/foo"]|5|sqliteFile||7|transform content|7|nodeJS|(doc, state) => {...doc, foo: true}||
6|works|file:///path/to/a/schema.yaml#other-register|1|col/src|3|https://alt/source/schema#anchor||1|["/key/0","/key/1"]||3|col/der.iv-e+d|1|https://canonical/schema/uri#/$defs/path|["/foo"]||||||7|nodeJS|(doc, state) => {...doc, foo: true}||
changes:   0   total_changes: XYZ

-- View of collection schemas which unions collection schemas with
-- any alternate schemas used by transforms reading the collection.
SELECT * FROM collection_schemas;
collection_id|collection_name|schema_uri|is_alternate
1|col/src|file:///path/to/a/schema.yaml#anchor|0
1|col/src|https://alt/source/schema#anchor|1
2|col/derived|https://canonical/schema/uri#/$defs/path|0
3|col/der.iv-e+d|https://canonical/schema/uri#/$defs/path|0
4|col/other-src|file:///path/to/a/schema.yaml|0
changes:   0   total_changes: XYZ

-- Detail view of collections joined with projections, partitions,
-- and alternate source schemas.
SELECT * FROM collection_details;
collection_id|collection_name|schema_uri|key_json|resource_id|partitions_json|projections_json|alt_schemas_json|is_derivation|register_schema_uri|register_initial_json
1|col/src|file:///path/to/a/schema.yaml#anchor|["/key/0","/key/1"]|3|[{"field":"field_2","ptr":"/key/1"}]|[{"field":"field_1","ptr":"/key/0"},{"field":"field_2","ptr":"/key/1"},{"field":"field_3","ptr":"/path/3"}]|["https://alt/source/schema#anchor"]|0||
2|col/derived|https://canonical/schema/uri#/$defs/path|["/foo"]|2|[{"field":"field_a","ptr":"/a"}]|[{"field":"field_1","ptr":""},{"field":"field_a","ptr":"/a"}]|[]|1|file:///path/to/a/schema.yaml#register|{}
3|col/der.iv-e+d|https://canonical/schema/uri#/$defs/path|["/foo"]|1|[]|[]|[]|1|file:///path/to/a/schema.yaml#other-register|[]
4|col/other-src|file:///path/to/a/schema.yaml|["/key"]|6|[]|[]|[]|0||
changes:   0   total_changes: XYZ

-- View of schema URIs and all fields which are extracted from them,
-- with context as to usage (primary key, shuffle key, or projection).
SELECT * FROM schema_extracted_fields;
changes:   0   total_changes: XYZ

-- Valid packages.
INSERT INTO nodejs_dependencies (package, version)
VALUES ('a-package', '^1.2.3'),
       -- Different packages and versions: OK.
       ('other-package', '^4.5.6'),
       ('yet-another-package', '=1.2'),
       -- Repeat of package at same version: silently ignored.
       ('a-package', '^1.2.3');
changes:   3   total_changes: XYZ

-- Invalid indexed package at a different version.
Error: near line (XYZ): A dependency on this nodeJS package at a different package version already exists
INSERT INTO nodejs_dependencies (package, version)
VALUES ('a-package', '^4.5.6');

-- Valid inferences
INSERT INTO inferences (
    collection_id,
    location_ptr,
    types_json,
    must_exist,
    string_content_type,
    string_content_encoding_is_base64,
    string_max_length
)
VALUES
    (1, '/key/0', '["string"]', TRUE, 'text/plain', false, 97),
    (1, '/key/1', '["string", "null"]', TRUE, 'text/plain', false, 97),
    (1, '/path/3', '["string", "null"]', TRUE, 'text/plain', false, 97);
changes:   3   total_changes: XYZ


Error: near line (XYZ): 4 values for 3 columns

-- Invalid inference (types are not valid json)
Error: near line (XYZ): malformed JSON
INSERT INTO inferences (collection_id, location_ptr, types_json, must_exist)
VALUES (1, '/field_2', '} not json {', FALSE);

-- Invalid inference (types are null)
Error: near line (XYZ): NOT NULL constraint failed: inferences.types_json
INSERT INTO inferences (collection_id, location_ptr, types_json, must_exist)
VALUES (1, '/field_2', NULL, FALSE);

-- Invalid inference (types are not an array)
Error: near line (XYZ): CHECK constraint failed: inferences
INSERT INTO inferences (collection_id, location_ptr, types_json, must_exist)
VALUES (1, '/field_2', '{"not": "an array"}', TRUE);

-- Invalid inference (string_content_encoding_is_base64 is not a boolean)
Error: near line (XYZ): table inferences has no column named field

-- View of schema URIs and all fields which are extracted from them,
-- with context as to usage (primary key, shuffle key, or projection).
SELECT * FROM schema_extracted_fields;
collection_id|schema_uri|collection_name|field|location_ptr|user_provided|types_json|must_exist|string_content_type|string_content_encoding_is_base64|string_max_length|is_partition_key|is_primary_key
1|file:///path/to/a/schema.yaml#anchor|col/src|field_1|/key/0|1|["string"]|1|text/plain|0|97|0|1
1|file:///path/to/a/schema.yaml#anchor|col/src|field_2|/key/1|0|["string", "null"]|1|text/plain|0|97|1|1
1|file:///path/to/a/schema.yaml#anchor|col/src|field_3|/path/3|0|["string", "null"]|1|text/plain|0|97|0|0
changes:   0   total_changes: XYZ
