collections:
  ops.us-central1.v1/failure-notifications/v1:
    derive:
      using:
        sqlite:
          migrations:
            - |
              CREATE TABLE failures (
                shard TEXT,
                ts TEXT,
                PRIMARY KEY (shard, ts)
              );
              CREATE TABLE failure_notifications (
                shard TEXT,
                ts TEXT,
                PRIMARY KEY (shard,ts)
              );
            - |
              CREATE TABLE related_log_lines (
                shard TEXT,
                ts TEXT,
                level TEXT,
                message TEXT,
                PRIMARY KEY (shard,ts)
                UNIQUE(message)
              );
            - |
              -- SQLite doesn't support dropping constraints lol
              CREATE TABLE related_log_lines_2 (
                shard TEXT,
                ts TEXT,
                level TEXT,
                message TEXT,
                PRIMARY KEY (shard,ts)
                UNIQUE (shard,message)
              );
              INSERT INTO related_log_lines_2 SELECT * from related_log_lines;
              DROP TABLE related_log_lines;
              ALTER TABLE related_log_lines_2 RENAME TO related_log_lines;
            - |
              -- Remove unique constraint on shard+message
              CREATE TABLE related_log_lines_2 (
                shard TEXT,
                ts TEXT,
                level TEXT,
                message TEXT,
                PRIMARY KEY (shard,ts)
              );
              INSERT INTO related_log_lines_2 SELECT * from related_log_lines;
              DROP TABLE related_log_lines;
              ALTER TABLE related_log_lines_2 RENAME TO related_log_lines;

      transforms:
        - name: notifyAboutTaskFailures
          shuffle:
            key: [/shard/name]
          source: ops.us-central1.v1/logs
          lambda: notify-failure-logs.sql
        - name: cleanUp
          shuffle:
            key: [/shard/name]
          source: ops.us-central1.v1/logs
          readDelay: 48h
          lambda: DELETE FROM failures WHERE shard = $name AND ts=$ts; DELETE FROM failure_notifications WHERE shard = $name AND ts=$ts;
      shards:
        minTxnDuration: 10s
    projections:
      ts: /ts
      task_name: /task_name
      text: /slack_text
      blocks: /slack_blocks
    key: [/ts, /task_name]
    schema:
      type: object
      required:
        - task_name
        - ts
      properties:
        message:
          type: string
          description: The message indicating failure.
        reason:
          type: string
          description: The reason for the task failure
        ts:
          description: The timestamp at which the task failure was reported
          format: date-time
          type: string
        task_name:
          type: string
          description: The full name of the task
        sub_name:
          type: string
          description: The name of the task without tenant
        task_kind:
          description: The kind of the task
          enum:
            - capture
            - derivation
            - materialization
        tenant_name:
          type: string
          description: The name of the tenant that owns the task
        log_lines:
          type: array
          items:
            type: object
        slack_text:
          type: string
        slack_blocks:
          type: array
          items:
            type: object
