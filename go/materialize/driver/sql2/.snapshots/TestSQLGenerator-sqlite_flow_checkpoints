-- This table holds Flow processing checkpoints used for exactly-once processing of materializations
CREATE TABLE IF NOT EXISTS flow_checkpoints (
	-- The name of the materialization.
	materialization TEXT NOT NULL,
	-- The inclusive lower-bound key hash covered by this checkpoint.
	key_begin INTEGER NOT NULL,
	-- The inclusive upper-bound key hash covered by this checkpoint.
	key_end INTEGER NOT NULL,
	-- This nonce is used to uniquely identify unique process assignments of a shard and prevent them from conflicting.
	fence INTEGER NOT NULL,
	-- Checkpoint of the Flow consumer shard, encoded as base64 protobuf.
	checkpoint TEXT,

	PRIMARY KEY(materialization, key_begin, key_end)
);

SELECT fence, checkpoint FROM flow_checkpoints WHERE materialization = ? AND key_begin = ? AND key_end = ?;

INSERT INTO flow_checkpoints (materialization, key_begin, key_end, fence, checkpoint) VALUES (?, ?, ?, ?, ?);

UPDATE flow_checkpoints SET fence = ?, checkpoint = ? WHERE materialization = ? AND key_begin = ? AND key_end = ?;
