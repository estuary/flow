([]materialize.TransactionRequest) (len=10) {
  (materialize.TransactionRequest) open:<materialization:<materialization:"test/sqlite" endpoint_type:SQLITE endpoint_spec_json:"{\"path\":\":memory:\"}" bindings:<resource_spec_json:"{\"table\":\"keys_value\"}" resource_path:"keys_value" collection:<collection:"keys/value" write_schema_uri:"file:///home/johnny/estuary/flow/go/protocols/materialize/testdata/flow.yaml?ptr=/collections/keys~1value/schema" write_schema_json:"{\"$id\":\"file:///home/johnny/estuary/flow/go/protocols/materialize/testdata/flow.yaml?ptr=/collections/keys~1value/schema\",\"properties\":{\"key1\":{\"type\":\"integer\"},\"key2\":{\"type\":\"boolean\"},\"value\":{\"type\":\"string\"}},\"required\":[\"key1\",\"key2\"],\"type\":\"object\"}" key_ptrs:"/key1" key_ptrs:"/key2" uuid_ptr:"/_meta/uuid" projections:<field:"flow_document" explicit:true inference:<types:"object" exists:MUST > > projections:<ptr:"/key1" field:"key1" is_primary_key:true inference:<types:"integer" exists:MUST > > projections:<ptr:"/key2" field:"key2" is_primary_key:true inference:<types:"boolean" exists:MUST > > projections:<ptr:"/value" field:"value" inference:<types:"string" string:<> exists:MAY > > ack_json_template:"{\"_meta\":{\"ack\":true,\"uuid\":\"DocUUIDPlaceholder-329Bb50aa48EAa9ef\"}}" partition_template:<name:"keys/value" replication:3 labels:<labels:<name:"app.gazette.dev/managed-by" value:"estuary.dev/flow" > labels:<name:"content-type" value:"application/x-ndjson" > labels:<name:"estuary.dev/build" value:"temp.db" > labels:<name:"estuary.dev/collection" value:"keys/value" > > fragment:<length:536870912 compression_codec:GZIP stores:"s3://a-bucket/" refresh_interval:<seconds:300 > path_postfix_template:"utc_date={{.Spool.FirstAppendTime.Format \"2006-01-02\"}}/utc_hour={{.Spool.FirstAppendTime.Format \"15\"}}" > flags:4 max_append_rate:4194304 > > field_selection:<keys:"key1" keys:"key2" values:"value" document:"flow_document" > shuffle:<group_name:"materialize/test/sqlite/keys_value" source_collection:"keys/value" source_partitions:<include:<labels:<name:"estuary.dev/collection" value:"keys/value" > > exclude:<> > source_uuid_ptr:"/_meta/uuid" shuffle_key_ptrs:"/key1" shuffle_key_ptrs:"/key2" uses_source_key:true 8:"file:///home/johnny/estuary/flow/go/protocols/materialize/testdata/flow.yaml?ptr=/collections/keys~1value/schema" 9:1 > > bindings:<resource_spec_json:"{\"table\":\"messages\"}" resource_path:"messages" collection:<collection:"messages" write_schema_uri:"file:///home/johnny/estuary/flow/go/protocols/materialize/testdata/flow.yaml?ptr=/collections/messages/schema" write_schema_json:"{\"$id\":\"file:///home/johnny/estuary/flow/go/protocols/materialize/testdata/flow.yaml?ptr=/collections/messages/schema\",\"properties\":{\"message\":{\"type\":\"string\"}},\"required\":[\"message\"],\"type\":\"object\"}" key_ptrs:"/message" uuid_ptr:"/_meta/uuid" projections:<field:"flow_document" explicit:true inference:<types:"object" exists:MUST > > projections:<ptr:"/message" field:"message" is_primary_key:true inference:<types:"string" string:<> exists:MUST > > ack_json_template:"{\"_meta\":{\"ack\":true,\"uuid\":\"DocUUIDPlaceholder-329Bb50aa48EAa9ef\"}}" partition_template:<name:"messages" replication:3 labels:<labels:<name:"app.gazette.dev/managed-by" value:"estuary.dev/flow" > labels:<name:"content-type" value:"application/x-ndjson" > labels:<name:"estuary.dev/build" value:"temp.db" > labels:<name:"estuary.dev/collection" value:"messages" > > fragment:<length:536870912 compression_codec:GZIP stores:"s3://a-bucket/" refresh_interval:<seconds:300 > path_postfix_template:"utc_date={{.Spool.FirstAppendTime.Format \"2006-01-02\"}}/utc_hour={{.Spool.FirstAppendTime.Format \"15\"}}" > flags:4 max_append_rate:4194304 > > field_selection:<keys:"message" document:"flow_document" > shuffle:<group_name:"materialize/test/sqlite/messages" source_collection:"messages" source_partitions:<include:<labels:<name:"estuary.dev/collection" value:"messages" > > exclude:<> > source_uuid_ptr:"/_meta/uuid" shuffle_key_ptrs:"/message" uses_source_key:true 8:"file:///home/johnny/estuary/flow/go/protocols/materialize/testdata/flow.yaml?ptr=/collections/messages/schema" 9:1 > > shard_template:<id:"materialize/test/sqlite" recovery_log_prefix:"recovery" hint_prefix:"/estuary/flow/hints" hint_backups:2 max_txn_duration:<seconds:1 > labels:<labels:<name:"app.gazette.dev/managed-by" value:"estuary.dev/flow" > labels:<name:"estuary.dev/build" value:"temp.db" > labels:<name:"estuary.dev/log-level" value:"info" > labels:<name:"estuary.dev/task-name" value:"test/sqlite" > labels:<name:"estuary.dev/task-type" value:"materialization" > > ring_buffer_size:65536 read_channel_size:131072 > recovery_log_template:<name:"recovery/materialize/test/sqlite" replication:3 labels:<labels:<name:"app.gazette.dev/managed-by" value:"estuary.dev/flow" > labels:<name:"content-type" value:"application/x-gazette-recoverylog" > labels:<name:"estuary.dev/build" value:"temp.db" > labels:<name:"estuary.dev/task-name" value:"test/sqlite" > labels:<name:"estuary.dev/task-type" value:"materialization" > > fragment:<length:268435456 compression_codec:SNAPPY stores:"s3://a-bucket/" refresh_interval:<seconds:300 > > flags:4 max_append_rate:4194304 > > version:"someVersion" > ,
  (materialize.TransactionRequest) acknowledge:<> ,
  (materialize.TransactionRequest) load:<arena:"\002key-1\000" packed_keys:<end:7 > > ,
  (materialize.TransactionRequest) load:<binding:1 arena:"\025\002\023\374\002four\000" packed_keys:<end:2 > packed_keys:<begin:2 end:4 > packed_keys:<begin:4 end:10 > > ,
  (materialize.TransactionRequest) load:<arena:"\001five\000" packed_keys:<end:6 > > ,
  (materialize.TransactionRequest) flush:<> ,
  (materialize.TransactionRequest) store:<arena:"\002key-1\000&doc-1\002key\000\025\002\002two\000doc-2" packed_keys:<end:7 > packed_keys:<begin:13 end:20 > packed_values:<begin:7 end:8 > packed_values:<begin:20 end:25 > docs_json:<begin:8 end:13 > docs_json:<begin:25 end:30 > exists:true exists:false > ,
  (materialize.TransactionRequest) store:<binding:1 arena:"\002three\000'doc-3" packed_keys:<end:7 > packed_values:<begin:7 end:8 > docs_json:<begin:8 end:13 > exists:true > ,
  (materialize.TransactionRequest) start_commit:<runtime_checkpoint:"\022\016\n\014a-checkpoint" > ,
  (materialize.TransactionRequest) acknowledge:<> 
}
([]materialize.TransactionResponse) (len=7) {
  (materialize.TransactionResponse) opened:<runtime_checkpoint:"recovered-runtime-checkpoint" > ,
  (materialize.TransactionResponse) acknowledged:<> ,
  (materialize.TransactionResponse) loaded:<arena:"loaded-1loaded-2" docs_json:<end:8 > docs_json:<begin:8 end:16 > > ,
  (materialize.TransactionResponse) loaded:<binding:2 arena:"loaded-3" docs_json:<end:8 > > ,
  (materialize.TransactionResponse) flushed:<> ,
  (materialize.TransactionResponse) started_commit:<driver_checkpoint:<driver_checkpoint_json:"checkpoint" > > ,
  (materialize.TransactionResponse) acknowledged:<> 
}
