(map[flow.Collection]*flow.CollectionSpec) (len=6) {
  (flow.Collection) (len=23) soak/set-ops/operations: (*flow.CollectionSpec)(collection:"soak/set-ops/operations" schema_uri:"/examples/soak-tests/set-ops/schema.yaml#/$defs/operation" key_ptrs:"/Author" key_ptrs:"/ID" key_ptrs:"/Op" uuid_ptr:"/_meta/uuid" partition_fields:"Ones" projections:<ptr:"/Author" field:"Author" is_primary_key:true inference:<types:"integer" must_exist:true > > projections:<ptr:"/ID" field:"ID" is_primary_key:true inference:<types:"integer" must_exist:true > > projections:<ptr:"/Ones" field:"Ones" user_provided:true is_partition_key:true inference:<types:"integer" must_exist:true > > projections:<ptr:"/Op" field:"Op" is_primary_key:true inference:<types:"integer" must_exist:true > > projections:<ptr:"/Type" field:"Type" inference:<types:"string" must_exist:true string:<> > > projections:<ptr:"/Values" field:"Values" inference:<types:"object" must_exist:true > > projections:<field:"flow_document" inference:<types:"object" must_exist:true description:"Union type over MutateOp and VerifyOp" > > ack_json_template:"{\"_meta\":{\"ack\":true,\"uuid\":\"DocUUIDPlaceholder-329Bb50aa48EAa9ef\"}}" ),
  (flow.Collection) (len=11) stock/ticks: (*flow.CollectionSpec)(collection:"stock/ticks" schema_uri:"/examples/stock-stats/schemas/L1-tick.schema.yaml" key_ptrs:"/security" key_ptrs:"/time" uuid_ptr:"/_meta/uuid" partition_fields:"exchange" projections:<ptr:"/_meta" field:"_meta" inference:<types:"object" > > projections:<ptr:"/ask" field:"ask" inference:<types:"object" description:"Lowest current offer to sell security." > > projections:<ptr:"/ask/price" field:"ask/price" inference:<types:"number" description:"Dollar price." > > projections:<ptr:"/ask/size" field:"ask/size" inference:<types:"integer" description:"Number of shares." > > projections:<ptr:"/bid" field:"bid" inference:<types:"object" description:"Highest current offer to buy security." > > projections:<ptr:"/bid/price" field:"bid/price" inference:<types:"number" description:"Dollar price." > > projections:<ptr:"/bid/size" field:"bid/size" inference:<types:"integer" description:"Number of shares." > > projections:<ptr:"/exchange" field:"exchange" user_provided:true is_partition_key:true inference:<types:"string" must_exist:true string:<> description:"Enum of market exchange codes." > > projections:<field:"flow_document" inference:<types:"object" must_exist:true description:"Level-one market tick of a security." > > projections:<ptr:"/last" field:"last" inference:<types:"object" description:"Completed transaction which generated this tick." > > projections:<ptr:"/last/price" field:"last/price" inference:<types:"number" description:"Dollar price." > > projections:<ptr:"/last/size" field:"last/size" inference:<types:"integer" description:"Number of shares." > > projections:<ptr:"/security" field:"security" is_primary_key:true inference:<types:"string" must_exist:true string:<max_length:10 > description:"Market security ticker name." > > projections:<ptr:"/bid/price" field:"the_bid_price" user_provided:true inference:<types:"number" description:"Dollar price." > > projections:<ptr:"/time" field:"time" is_primary_key:true inference:<types:"string" must_exist:true string:<format:"date-time" > > > ack_json_template:"{\"_meta\":{\"ack\":true,\"uuid\":\"DocUUIDPlaceholder-329Bb50aa48EAa9ef\"}}" ),
  (flow.Collection) (len=18) testing/int-string: (*flow.CollectionSpec)(collection:"testing/int-string" schema_uri:"/examples/int-string.flow.yaml?ptr=/collections/testing~1int-string/schema" key_ptrs:"/i" uuid_ptr:"/_meta/uuid" projections:<field:"flow_document" inference:<types:"object" must_exist:true > > projections:<ptr:"/i" field:"i" is_primary_key:true inference:<types:"integer" must_exist:true > > projections:<ptr:"/s" field:"s" inference:<types:"string" must_exist:true string:<max_length:128 > > > ack_json_template:"{\"_meta\":{\"ack\":true,\"uuid\":\"DocUUIDPlaceholder-329Bb50aa48EAa9ef\"}}" ),
  (flow.Collection) (len=32) weird-types/optional-multi-types: (*flow.CollectionSpec)(collection:"weird-types/optional-multi-types" schema_uri:"/examples/weird-types.flow.yaml?ptr=/collections/weird-types~1optional-multi-types/schema" key_ptrs:"/theKey" uuid_ptr:"/_meta/uuid" projections:<ptr:"/any" field:"any" user_provided:true inference:<types:"array" types:"boolean" types:"null" types:"number" types:"object" types:"string" string:<> > > projections:<ptr:"/boolOrArrayOrNull" field:"boolOrArrayOrNull" user_provided:true inference:<types:"array" types:"boolean" types:"null" > > projections:<ptr:"/boolOrString" field:"boolOrString" user_provided:true inference:<types:"boolean" types:"string" string:<> > > projections:<field:"flow_document" inference:<types:"object" must_exist:true > > projections:<ptr:"/intDifferentRanges" field:"intDifferentRanges" user_provided:true inference:<types:"integer" > > projections:<ptr:"/intOrNum" field:"intOrNum" user_provided:true inference:<types:"number" > > projections:<ptr:"/intOrNumOrNull" field:"intOrNumOrNull" user_provided:true inference:<types:"null" types:"number" > > projections:<ptr:"/intOrNumOverlappingRanges" field:"intOrNumOverlappingRanges" user_provided:true inference:<types:"number" > > projections:<ptr:"/intOrObjectOrNull" field:"intOrObjectOrNull" user_provided:true inference:<types:"integer" types:"null" types:"object" > > projections:<ptr:"/stringOrInt" field:"stringOrInt" user_provided:true inference:<types:"integer" types:"string" string:<> > > projections:<ptr:"/theKey" field:"theKey" is_primary_key:true inference:<types:"string" must_exist:true string:<> > > ack_json_template:"{\"_meta\":{\"ack\":true,\"uuid\":\"DocUUIDPlaceholder-329Bb50aa48EAa9ef\"}}" ),
  (flow.Collection) (len=21) weird-types/optionals: (*flow.CollectionSpec)(collection:"weird-types/optionals" schema_uri:"/examples/weird-types.flow.yaml?ptr=/collections/weird-types~1optionals/schema" key_ptrs:"/theKey" uuid_ptr:"/_meta/uuid" projections:<ptr:"/array" field:"array" inference:<types:"array" > > projections:<ptr:"/bool" field:"bool" inference:<types:"boolean" > > projections:<field:"flow_document" inference:<types:"object" must_exist:true > > projections:<ptr:"/int" field:"int" inference:<types:"integer" > > projections:<ptr:"/number" field:"number" inference:<types:"number" > > projections:<ptr:"/object" field:"object" inference:<types:"object" > > projections:<ptr:"/string" field:"string" inference:<types:"string" string:<> > > projections:<ptr:"/theKey" field:"theKey" is_primary_key:true inference:<types:"string" must_exist:true string:<> > > ack_json_template:"{\"_meta\":{\"ack\":true,\"uuid\":\"DocUUIDPlaceholder-329Bb50aa48EAa9ef\"}}" ),
  (flow.Collection) (len=29) weird-types/required-nullable: (*flow.CollectionSpec)(collection:"weird-types/required-nullable" schema_uri:"/examples/weird-types.flow.yaml?ptr=/collections/weird-types~1required-nullable/schema" key_ptrs:"/theKey" uuid_ptr:"/_meta/uuid" projections:<ptr:"/array" field:"array" user_provided:true inference:<types:"array" types:"null" must_exist:true > > projections:<ptr:"/boolean" field:"boolean" inference:<types:"boolean" types:"null" must_exist:true > > projections:<field:"flow_document" inference:<types:"object" must_exist:true > > projections:<ptr:"/integer" field:"integer" inference:<types:"integer" types:"null" must_exist:true > > projections:<ptr:"/null" field:"null" user_provided:true inference:<types:"null" must_exist:true > > projections:<ptr:"/number" field:"number" inference:<types:"null" types:"number" must_exist:true > > projections:<ptr:"/object" field:"object" user_provided:true inference:<types:"null" types:"object" must_exist:true > > projections:<ptr:"/string" field:"string" inference:<types:"null" types:"string" must_exist:true string:<> > > projections:<ptr:"/theKey" field:"theKey" is_primary_key:true inference:<types:"string" must_exist:true string:<> > > ack_json_template:"{\"_meta\":{\"ack\":true,\"uuid\":\"DocUUIDPlaceholder-329Bb50aa48EAa9ef\"}}" )
}
