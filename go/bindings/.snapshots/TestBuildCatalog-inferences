([]catalog.SchemaLocation) (len=42) {
  (catalog.SchemaLocation) {
    Schema: (string) (len=34) "builtin://flow/ops-log-schema.json",
    Location: (string) "",
    Spec: (flow.Inference) types:"object" must_exist:true title:"Flow task logs" description:"Logs related to the processing of a Flow capture, derivation, or materialization" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=34) "builtin://flow/ops-log-schema.json",
    Location: (string) (len=7) "/fields",
    Spec: (flow.Inference) types:"object" description:"Map of keys and values that are associated with this log entry." 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=34) "builtin://flow/ops-log-schema.json",
    Location: (string) (len=6) "/level",
    Spec: (flow.Inference) types:"string" must_exist:true string:<> 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=34) "builtin://flow/ops-log-schema.json",
    Location: (string) (len=8) "/message",
    Spec: (flow.Inference) types:"string" must_exist:true string:<> 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=34) "builtin://flow/ops-log-schema.json",
    Location: (string) (len=6) "/shard",
    Spec: (flow.Inference) types:"object" must_exist:true title:"Flow shard id" description:"Identifies a specific shard of a task, which may be the source of a log message or metrics" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=34) "builtin://flow/ops-log-schema.json",
    Location: (string) (len=15) "/shard/keyBegin",
    Spec: (flow.Inference) types:"string" must_exist:true string:<> description:"The inclusive beginning of the shard's assigned key range" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=34) "builtin://flow/ops-log-schema.json",
    Location: (string) (len=11) "/shard/kind",
    Spec: (flow.Inference) types:"string" must_exist:true string:<> description:"The type of the catalog task" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=34) "builtin://flow/ops-log-schema.json",
    Location: (string) (len=11) "/shard/name",
    Spec: (flow.Inference) types:"string" must_exist:true string:<> description:"The name of the catalog task (without the task type prefix)" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=34) "builtin://flow/ops-log-schema.json",
    Location: (string) (len=18) "/shard/rClockBegin",
    Spec: (flow.Inference) types:"string" must_exist:true string:<> description:"The inclusive beginning of the shard's assigned rClock range" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=34) "builtin://flow/ops-log-schema.json",
    Location: (string) (len=3) "/ts",
    Spec: (flow.Inference) types:"string" must_exist:true string:<format:"date-time" > description:"Timestamp corresponding to the start of the transaction" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=36) "builtin://flow/ops-stats-schema.json",
    Location: (string) "",
    Spec: (flow.Inference) types:"object" must_exist:true title:"Flow task stats" description:"Statistics related to the processing of a Flow capture, derivation, or materialization" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=36) "builtin://flow/ops-stats-schema.json",
    Location: (string) (len=8) "/combine",
    Spec: (flow.Inference) types:"object" must_exist:true 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=36) "builtin://flow/ops-stats-schema.json",
    Location: (string) (len=13) "/combine/left",
    Spec: (flow.Inference) types:"object" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=36) "builtin://flow/ops-stats-schema.json",
    Location: (string) (len=25) "/combine/left/bytes_total",
    Spec: (flow.Inference) types:"integer" description:"The number of bytes processed from or into the given collection capture or materialization. Note that for \ncaptures and materializations this relates to the size of Flow JSON documents not the representation used by the external system.\n" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=36) "builtin://flow/ops-stats-schema.json",
    Location: (string) (len=24) "/combine/left/docs_total",
    Spec: (flow.Inference) types:"integer" description:"The number of documents processed from or into the given collection capture or materialization" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=36) "builtin://flow/ops-stats-schema.json",
    Location: (string) (len=12) "/combine/out",
    Spec: (flow.Inference) types:"object" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=36) "builtin://flow/ops-stats-schema.json",
    Location: (string) (len=24) "/combine/out/bytes_total",
    Spec: (flow.Inference) types:"integer" description:"The number of bytes processed from or into the given collection capture or materialization. Note that for \ncaptures and materializations this relates to the size of Flow JSON documents not the representation used by the external system.\n" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=36) "builtin://flow/ops-stats-schema.json",
    Location: (string) (len=23) "/combine/out/docs_total",
    Spec: (flow.Inference) types:"integer" description:"The number of documents processed from or into the given collection capture or materialization" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=36) "builtin://flow/ops-stats-schema.json",
    Location: (string) (len=14) "/combine/right",
    Spec: (flow.Inference) types:"object" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=36) "builtin://flow/ops-stats-schema.json",
    Location: (string) (len=26) "/combine/right/bytes_total",
    Spec: (flow.Inference) types:"integer" description:"The number of bytes processed from or into the given collection capture or materialization. Note that for \ncaptures and materializations this relates to the size of Flow JSON documents not the representation used by the external system.\n" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=36) "builtin://flow/ops-stats-schema.json",
    Location: (string) (len=25) "/combine/right/docs_total",
    Spec: (flow.Inference) types:"integer" description:"The number of documents processed from or into the given collection capture or materialization" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=36) "builtin://flow/ops-stats-schema.json",
    Location: (string) (len=10) "/connector",
    Spec: (flow.Inference) types:"object" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=36) "builtin://flow/ops-stats-schema.json",
    Location: (string) (len=16) "/connector/start",
    Spec: (flow.Inference) types:"integer" description:"Counter of connector invocations" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=36) "builtin://flow/ops-stats-schema.json",
    Location: (string) (len=7) "/lambda",
    Spec: (flow.Inference) types:"object" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=36) "builtin://flow/ops-stats-schema.json",
    Location: (string) (len=15) "/lambda/publish",
    Spec: (flow.Inference) types:"object" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=36) "builtin://flow/ops-stats-schema.json",
    Location: (string) (len=32) "/lambda/publish/duration_seconds",
    Spec: (flow.Inference) types:"number" description:"The total number of seconds elapsed for all invocations." 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=36) "builtin://flow/ops-stats-schema.json",
    Location: (string) (len=33) "/lambda/publish/invocations_total",
    Spec: (flow.Inference) types:"integer" description:"The number of invocations during this transaction" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=36) "builtin://flow/ops-stats-schema.json",
    Location: (string) (len=14) "/lambda/update",
    Spec: (flow.Inference) types:"object" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=36) "builtin://flow/ops-stats-schema.json",
    Location: (string) (len=31) "/lambda/update/duration_seconds",
    Spec: (flow.Inference) types:"number" description:"The total number of seconds elapsed for all invocations." 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=36) "builtin://flow/ops-stats-schema.json",
    Location: (string) (len=32) "/lambda/update/invocations_total",
    Spec: (flow.Inference) types:"integer" description:"The number of invocations during this transaction" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=36) "builtin://flow/ops-stats-schema.json",
    Location: (string) (len=6) "/shard",
    Spec: (flow.Inference) types:"object" must_exist:true title:"Flow shard id" description:"Identifies a specific shard of a task, which may be the source of a log message or metrics" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=36) "builtin://flow/ops-stats-schema.json",
    Location: (string) (len=15) "/shard/keyBegin",
    Spec: (flow.Inference) types:"string" must_exist:true string:<> description:"The inclusive beginning of the shard's assigned key range" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=36) "builtin://flow/ops-stats-schema.json",
    Location: (string) (len=11) "/shard/kind",
    Spec: (flow.Inference) types:"string" must_exist:true string:<> description:"The type of the catalog task" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=36) "builtin://flow/ops-stats-schema.json",
    Location: (string) (len=11) "/shard/name",
    Spec: (flow.Inference) types:"string" must_exist:true string:<> description:"The name of the catalog task (without the task type prefix)" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=36) "builtin://flow/ops-stats-schema.json",
    Location: (string) (len=18) "/shard/rClockBegin",
    Spec: (flow.Inference) types:"string" must_exist:true string:<> description:"The inclusive beginning of the shard's assigned rClock range" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=36) "builtin://flow/ops-stats-schema.json",
    Location: (string) (len=3) "/ts",
    Spec: (flow.Inference) types:"string" must_exist:true string:<format:"date-time" > description:"Timestamp corresponding to the start of the transaction" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=61) "file:///build.flow.yaml?ptr=/collections/a~1collection/schema",
    Location: (string) "",
    Spec: (flow.Inference) types:"object" must_exist:true 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=61) "file:///build.flow.yaml?ptr=/collections/a~1collection/schema",
    Location: (string) (len=6) "/a_key",
    Spec: (flow.Inference) types:"string" must_exist:true string:<> 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=61) "file:///build.flow.yaml?ptr=/collections/a~1collection/schema",
    Location: (string) (len=6) "/a_val",
    Spec: (flow.Inference) types:"integer" 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=81) "file:///build.flow.yaml?ptr=/collections/a~1derivation/derivation/register/schema",
    Location: (string) "",
    Spec: (flow.Inference) types:"array" types:"boolean" types:"null" types:"number" types:"object" types:"string" must_exist:true string:<> 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=61) "file:///build.flow.yaml?ptr=/collections/a~1derivation/schema",
    Location: (string) "",
    Spec: (flow.Inference) types:"object" must_exist:true 
  },
  (catalog.SchemaLocation) {
    Schema: (string) (len=61) "file:///build.flow.yaml?ptr=/collections/a~1derivation/schema",
    Location: (string) (len=6) "/a_key",
    Spec: (flow.Inference) types:"string" must_exist:true string:<> 
  }
}
