(*bindings.BuiltCatalog)({
  Config: (flow.BuildAPI_Config) directory:"testdata" source:"file:///build.flow.yaml" catalog_path:"/stable/path" extra_journal_rules:<rules:<rule:"demonstrate pass through" selector:<include:<> exclude:<> > template:<replication:867 labels:<> fragment:<> > > > extra_shard_rules:<rules:<rule:"here too" selector:<include:<> exclude:<> > template:<hot_standbys:5309 labels:<> > > > ,
  Errors: ([]bindings.BuildError) <nil>,
  Captures: ([]flow.CaptureSpec) (len=1) {
    (flow.CaptureSpec) capture:"my/s3/placeholder/a/collection" collection:<collection:"a/collection" schema_uri:"file:///build.flow.yaml?ptr=/collections/a~1collection/schema" key_ptrs:"/a_key" uuid_ptr:"/_meta/uuid" projections:<ptr:"/a_key" field:"a_key" is_primary_key:true inference:<types:"string" must_exist:true string:<> > > projections:<ptr:"/a_val" field:"a_val" inference:<types:"integer" > > projections:<field:"flow_document" inference:<types:"object" must_exist:true > > ack_json_template:"{\"_meta\":{\"ack\":true,\"uuid\":\"DocUUIDPlaceholder-329Bb50aa48EAa9ef\"}}" > endpoint_name:"my/s3" endpoint_type:AIRBYTE_SOURCE endpoint_spec_json:"{\"config\":{\"bucket\":\"bucket\",\"prefix\":\"prefix\"},\"image\":\"estuary/s3\",\"namespace\":\"\",\"stream\":\"\"}" endpoint_resource_path:"placeholder" endpoint_resource_path:"a/collection" 
  },
  Collections: ([]flow.CollectionSpec) (len=2) {
    (flow.CollectionSpec) collection:"a/collection" schema_uri:"file:///build.flow.yaml?ptr=/collections/a~1collection/schema" key_ptrs:"/a_key" uuid_ptr:"/_meta/uuid" projections:<ptr:"/a_key" field:"a_key" is_primary_key:true inference:<types:"string" must_exist:true string:<> > > projections:<ptr:"/a_val" field:"a_val" inference:<types:"integer" > > projections:<field:"flow_document" inference:<types:"object" must_exist:true > > ack_json_template:"{\"_meta\":{\"ack\":true,\"uuid\":\"DocUUIDPlaceholder-329Bb50aa48EAa9ef\"}}" ,
    (flow.CollectionSpec) collection:"a/derivation" schema_uri:"file:///build.flow.yaml?ptr=/collections/a~1derivation/schema" key_ptrs:"/a_key" uuid_ptr:"/_meta/uuid" projections:<ptr:"/a_key" field:"a_key" is_primary_key:true inference:<types:"string" must_exist:true string:<> > > projections:<field:"flow_document" inference:<types:"object" must_exist:true > > ack_json_template:"{\"_meta\":{\"ack\":true,\"uuid\":\"DocUUIDPlaceholder-329Bb50aa48EAa9ef\"}}" 
  },
  Derivations: ([]flow.DerivationSpec) (len=1) {
    (flow.DerivationSpec) collection:<collection:"a/derivation" schema_uri:"file:///build.flow.yaml?ptr=/collections/a~1derivation/schema" key_ptrs:"/a_key" uuid_ptr:"/_meta/uuid" projections:<ptr:"/a_key" field:"a_key" is_primary_key:true inference:<types:"string" must_exist:true string:<> > > projections:<field:"flow_document" inference:<types:"object" must_exist:true > > ack_json_template:"{\"_meta\":{\"ack\":true,\"uuid\":\"DocUUIDPlaceholder-329Bb50aa48EAa9ef\"}}" > register_schema_uri:"file:///build.flow.yaml?ptr=/collections/a~1derivation/derivation/register/schema" register_initial_json:"null" transforms:<derivation:"a/derivation" transform:"fromCollection" shuffle:<group_name:"derive/a/derivation/fromCollection" source_collection:"a/collection" source_partitions:<include:<labels:<name:"estuary.dev/collection" value:"a/collection" > > exclude:<> > source_uuid_ptr:"/_meta/uuid" shuffle_key_ptr:"/a_key" uses_source_key:true source_schema_uri:"file:///build.flow.yaml?ptr=/collections/a~1collection/schema" uses_source_schema:true validate_schema_at_read:true filter_r_clocks:true > publish_lambda:<typescript:"/derive/a/derivation/fromCollection/Publish" > > 
  },
  JournalRules: (flow.JournalRules) rules:<rule:"demonstrate pass through" selector:<include:<> exclude:<> > template:<replication:867 labels:<> fragment:<> > > ,
  Locations: ([]bindings.SchemaLocation) (len=6) {
    (bindings.SchemaLocation) {
      Schema: (string) (len=61) "file:///build.flow.yaml?ptr=/collections/a~1collection/schema",
      Location: (string) "",
      Spec: (flow.Inference) types:"object" must_exist:true 
    },
    (bindings.SchemaLocation) {
      Schema: (string) (len=61) "file:///build.flow.yaml?ptr=/collections/a~1collection/schema",
      Location: (string) (len=6) "/a_key",
      Spec: (flow.Inference) types:"string" must_exist:true string:<> 
    },
    (bindings.SchemaLocation) {
      Schema: (string) (len=61) "file:///build.flow.yaml?ptr=/collections/a~1collection/schema",
      Location: (string) (len=6) "/a_val",
      Spec: (flow.Inference) types:"integer" 
    },
    (bindings.SchemaLocation) {
      Schema: (string) (len=81) "file:///build.flow.yaml?ptr=/collections/a~1derivation/derivation/register/schema",
      Location: (string) "",
      Spec: (flow.Inference) types:"array" types:"boolean" types:"null" types:"number" types:"object" types:"string" must_exist:true string:<> 
    },
    (bindings.SchemaLocation) {
      Schema: (string) (len=61) "file:///build.flow.yaml?ptr=/collections/a~1derivation/schema",
      Location: (string) "",
      Spec: (flow.Inference) types:"object" must_exist:true 
    },
    (bindings.SchemaLocation) {
      Schema: (string) (len=61) "file:///build.flow.yaml?ptr=/collections/a~1derivation/schema",
      Location: (string) (len=6) "/a_key",
      Spec: (flow.Inference) types:"string" must_exist:true string:<> 
    }
  },
  Materializations: ([]flow.MaterializationSpec) (len=1) {
    (flow.MaterializationSpec) materialization:"my/db/a_table" collection:<collection:"a/derivation" schema_uri:"file:///build.flow.yaml?ptr=/collections/a~1derivation/schema" key_ptrs:"/a_key" uuid_ptr:"/_meta/uuid" projections:<ptr:"/a_key" field:"a_key" is_primary_key:true inference:<types:"string" must_exist:true string:<> > > projections:<field:"flow_document" inference:<types:"object" must_exist:true > > ack_json_template:"{\"_meta\":{\"ack\":true,\"uuid\":\"DocUUIDPlaceholder-329Bb50aa48EAa9ef\"}}" > endpoint_name:"my/db" endpoint_type:SQLITE endpoint_spec_json:"{\"path\":\":memory:\",\"table\":\"a_table\"}" endpoint_resource_path:"a_table" field_selection:<keys:"a_key" document:"flow_document" > shuffle:<group_name:"materialize/my/db/a_table" source_collection:"a/derivation" source_partitions:<include:<labels:<name:"estuary.dev/collection" value:"a/derivation" > > exclude:<> > source_uuid_ptr:"/_meta/uuid" shuffle_key_ptr:"/a_key" uses_source_key:true source_schema_uri:"file:///build.flow.yaml?ptr=/collections/a~1derivation/schema" uses_source_schema:true > 
  },
  NPMPackage: ([]uint8) <nil>,
  Schemas: (flow.SchemaBundle) bundle:<key:"file:///build.flow.yaml?ptr=/collections/a~1collection/schema" value:"{\"properties\":{\"a_key\":{\"type\":\"string\"},\"a_val\":{\"type\":\"integer\"}},\"required\":[\"a_key\"],\"type\":\"object\"}" > bundle:<key:"file:///build.flow.yaml?ptr=/collections/a~1derivation/derivation/register/schema" value:"true" > bundle:<key:"file:///build.flow.yaml?ptr=/collections/a~1derivation/schema" value:"{\"properties\":{\"a_key\":{\"type\":\"string\"}},\"required\":[\"a_key\"],\"type\":\"object\"}" > ,
  ShardRules: (flow.ShardRules) rules:<rule:"here too" selector:<include:<> exclude:<> > template:<hot_standbys:5309 labels:<> > > ,
  Tests: ([]flow.TestSpec) (len=1) {
    (flow.TestSpec) test:"Example of a test" steps:<step_scope:"file:///build.flow.yaml#/tests/Example%20of%20a%20test/0" collection:"a/collection" collection_schema_uri:"file:///build.flow.yaml?ptr=/collections/a~1collection/schema" collection_key_ptr:"/a_key" collection_uuid_ptr:"/_meta/uuid" docs_json_lines:"{\"a_key\":\"one\",\"a_val\":2}\n{\"a_key\":\"three\",\"a_val\":4}" partitions:<include:<labels:<name:"estuary.dev/collection" value:"a/collection" > > exclude:<> > > steps:<step_type:VERIFY step_index:1 step_scope:"file:///build.flow.yaml#/tests/Example%20of%20a%20test/1" collection:"a/derivation" collection_schema_uri:"file:///build.flow.yaml?ptr=/collections/a~1derivation/schema" collection_key_ptr:"/a_key" collection_uuid_ptr:"/_meta/uuid" docs_json_lines:"{\"a_key\":\"one\"}\n{\"a_key\":\"three\"}" partitions:<include:<labels:<name:"estuary.dev/collection" value:"a/derivation" > > exclude:<> > > 
  }
})
