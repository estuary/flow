collections:
  a/collection:
    schema:
      type: object
      properties:
        a_key: { type: string }
        a_val: { type: integer }
      required: [a_key]
    key: [/a_key]

  a/derivation:
    schema:
      type: object
      properties:
        a_key: { type: string }
      required: [a_key]
    key: [/a_key]

    derivation:
      transform:
        fromCollection:
          source:
            name: a/collection
          publish:
            lambda: typescript

captures:
  example/capture:
    endpoint:
      airbyteSource:
        image: ghcr.io/estuary/source-hello-world:293ed5c
        config:
          greetings: 1000
    bindings:
      - resource:
          stream: greetings
          syncMode: incremental
        target: a/collection

materializations:
  example/materialization:
    endpoint:
      sqlite:
        path: ":memory:"
    bindings:
      - source: a/derivation
        resource: { table: a_table }

tests:
  "Example of a test":
    - ingest:
        collection: a/collection
        documents:
          - { a_key: one, a_val: 2 }
          - { a_key: three, a_val: 4 }
    - verify:
        collection: a/derivation
        documents:
          - { a_key: one }
          - { a_key: three }

storageMappings:
  "": { stores: [{ provider: S3, bucket: a-bucket }] }
