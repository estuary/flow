import:
  - inputs.flow.yaml

collections:
  patterns/one-sided-join:
    schema:
      $ref: schema.yaml#Join
      reduce: { strategy: lastWriteWins }
      required: [Key]
    key: [/Key]

    derive:
      using:
        sqlite:
          migrations:
            - |
              create table join_state (
                key text not null primary key,
                -- Stores the left hand side of the join
                lhs integer,
                -- Stores the right hand side of the join, using a JSON array
                -- since this is a one-to-many join
                rhs json
              );
      transforms:
        - name: fromInts
          source: patterns/ints
          shuffle: { key: [/Key] }
          lambda: |
            insert into join_state (key, lhs) values ($Key, $Int)
            on conflict (key) do update set lhs = $Int;
            -- now emit the joined result
            SELECT JSON_OBJECT(
              'Key', $Key,
              'LHS', lhs,
              'RHS', JSON(COALESCE(rhs, '[]'))
            )
            FROM join_state
            WHERE key = $Key;

        - name: fromStrings
          source: patterns/strings
          shuffle: { key: [/Key] }
          lambda: |
            INSERT INTO join_state (key, rhs) VALUES ($Key, JSON_ARRAY($String))
            ON CONFLICT (key) DO UPDATE SET rhs = JSON_INSERT(COALESCE(rhs, '[]'), '$[#]', $String);

tests:
  patterns/test/one-sided-join:
    - ingest:
        collection: patterns/ints
        documents: [{ Key: key, Int: 5 }]
    - verify:
        collection: patterns/one-sided-join
        documents: [{ Key: key, LHS: 5, RHS: [] }]
    - ingest:
        collection: patterns/strings
        documents: [{ Key: key, String: hello }]
    - verify:
        description: The prior document isn't updated, as the join reacts only to events of the LHS.
        collection: patterns/one-sided-join
        documents: [{ Key: key, LHS: 5, RHS: [] }]
    - ingest:
        collection: patterns/strings
        documents: [{ Key: key, String: goodbye }]
    - ingest:
        collection: patterns/ints
        documents: [{ Key: key, Int: 7 }]
    - verify:
        description: Expect a left join of the current LHS with the accumulated RHS
        collection: patterns/one-sided-join
        documents: [{ Key: key, LHS: 7, RHS: [hello, goodbye] }]
