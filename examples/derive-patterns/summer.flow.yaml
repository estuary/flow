import:
  - inputs.flow.yaml

collections:
  patterns/sums-reductions:
    schema: &schema
      type: object
      properties:
        Key: { type: string }
        Sum:
          type: integer
          reduce: { strategy: sum }
      required: [Key]
      reduce: { strategy: merge }
    key: [/Key]


    derive:
      using:
        typescript: { module: summer.flow.ts }
      transforms:
        - name: fromInts
          source: { name: patterns/ints }
          shuffle: { key: [/Key] }

  patterns/sums-stateful:
    schema:
      # Unlike the sums-reductions schema, we don't use any reduce annotations
      type: object
      properties:
        Key: { type: string }
        Sum:
          type: integer
      required: [Key]
    key: [/Key]


    derive:
      using:
        sqlite:
          migrations:
            - |
              create table sum_state (
                key text not null primary key,
                sum integer not null
              );
      transforms:
        - name: fromInts
          source: { name: patterns/ints }
          shuffle: { key: [/Key] }
          lambda: |
            INSERT INTO sum_state (key, sum) VALUES ($Key, $Int)
            ON CONFLICT DO UPDATE SET sum = sum + $Int;
            SELECT JSON_OBJECT(
              'Key', key,
              'Sum', sum
            )
            FROM sum_state
            WHERE key = $Key;
tests:
  patterns/test/sums:
    - ingest:
        collection: patterns/ints
        documents:
          - { Key: key, Int: -3 }
          - { Key: key, Int: 5 }
    - ingest:
        collection: patterns/ints
        documents: [{ Key: key, Int: 10 }]
    - verify:
        # "verify" steps fully reduce documents of the collection.
        # Under the hood, these are multiple delta updates.
        description: Expect we can do sums during materialization
        collection: patterns/sums-reductions
        documents: [{ Key: key, Sum: 12 }]
    - verify:
        # These are multiple snapshots, of which "verify" takes the last.
        description: Expect we can do sums within registers
        collection: patterns/sums-stateful
        documents: [{ Key: key, Sum: 12 }]
