# To run the set-ops soak test:
# First get Flow up and running a catalog that includes this file:
# - For a local environment: flowctl develop --source local-dev.flow.yaml
# - If running in a local k8s like minikube: flowctl apply --source local-k8s.flow.yaml
#
# Then start the test running:
# - For local dev: go test ./examples/soak-test/set-ops -ops-per-second 500 -streams 20
# - For kubernetes: ./examples/soak-test/set-ops/run-k8s.sh
#   This will create a kubernetes Job that runs the tests within the cluster.
#
# In any
collections:
  soak/set-ops/operations:
    schema: schema.yaml#/$defs/operation
    key: [/author, /id, /op]
    projections:
      # Partition on /Ones, which is the number of set bits in /ID.
      # This is simply to exercise the regular creation of new partitions.
      ones:
        location: /ones
        partition: true

  soak/set-ops/sets:
    schema: schema.yaml#/$defs/outputWithReductions
    key: [/author, /id]
    projections:
      # Project some non-scalar types that we want to materialize.
      appliedOps: /appliedOps
      derivedValues: /derived/add
      expectValues: /expectValues

    derivation:
      transform:
        onOperation:
          source: { name: soak/set-ops/operations }
          shuffle:
            key: [/author, /id]
          publish: { lambda: typescript }
      typescript:
        module: sets.ts

  soak/set-ops/sets-register:
    schema: schema.yaml#/$defs/output
    key: [/author, /id]

    projections:
      # Project the same non-scalar types as above, for materialization.
      appliedOps: /appliedOps
      derivedValues: /derived/add
      expectValues: /expectValues

    derivation:
      # Unlike "soak/set-ops/sets" above, we do all reduction within the
      # derivation register and only output the final value on a "verify" type.
      register:
        schema: schema.yaml#/$defs/outputWithReductions
        initial: { author: 0, id: 0 }

      transform:
        onOperation:
          source: { name: soak/set-ops/operations }
          shuffle:
            key: [/author, /id]
          update: { lambda: typescript }
          publish: { lambda: typescript }
      typescript:
        module: sets-register.ts

tests:
  soak/set-ops/test/update-and-verify:
    - ingest:
        collection: soak/set-ops/operations
        documents:
          - {
              "author": 17369,
              "id": 0,
              "ones": 0,
              "timestamp": "2021-04-19T09:00:50Z",
              "op": 1,
              "type": "remove",
              "values": { "k": 1, "s": 1 },
              "expectValues": {},
            }
          - {
              "author": 17369,
              "id": 1,
              "ones": 1,
              "timestamp": "2021-04-19T09:00:51Z",
              "op": 1,
              "type": "add",
              "values": { "h": 1, "k": 1, "m": 1, "q": 1, "u": 1, "v": 1 },
              "expectValues":
                { "h": 1, "k": 1, "m": 1, "q": 1, "u": 1, "v": 1 },
            }
          - {
              "author": 17369,
              "id": 1,
              "timestamp": "2021-04-19T09:00:52Z",
              "ones": 1,
              "op": 2,
              "type": "add",
              "values": { "a": 1, "c": 1, "f": 1, "l": 1, "u": 1 },
              "expectValues":
                {
                  "a": 1,
                  "c": 1,
                  "f": 1,
                  "l": 1,
                  "h": 1,
                  "k": 1,
                  "m": 1,
                  "q": 1,
                  "u": 2,
                  "v": 1,
                },
            }
          - {
              "author": 17369,
              "id": 0,
              "ones": 0,
              "op": 2,
              "timestamp": "2021-04-19T09:00:59Z",
              "type": "add",
              "values": { "j": 1, "w": 1 },
              "expectValues": { "j": 1, "w": 1 },
            }
          - {
              "author": 17369,
              "timestamp": "2021-04-19T09:01:01Z",
              "id": 2,
              "ones": 1,
              "op": 1,
              "type": "add",
              "values": { "k": 1, "t": 1 },
              "expectValues": { "k": 1, "t": 1 },
            }
          - {
              "author": 17369,
              "id": 2,
              "ones": 1,
              "op": 2,
              "timestamp": "2021-04-19T09:01:02Z",
              "type": "remove",
              "values":
                { "a": 1, "d": 1, "f": 1, "h": 1, "k": 1, "o": 1, "p": 1 },
              "expectValues": { "t": 1 },
            }

    - verify:
        collection: soak/set-ops/sets
        documents: &expected
          - {
              "author": 17369,
              "id": 0,
              "appliedAdd": 1,
              "appliedOps": 2,
              "appliedRemove": 1,
              "derived": { "add": { "j": 1, "w": 1 } },
              "timestamp": "2021-04-19T09:00:59Z",
              "expectValues": { "j": 1, "w": 1 },
            }
          - {
              "author": 17369,
              "id": 1,
              "timestamp": "2021-04-19T09:00:52Z",
              "appliedAdd": 2,
              "appliedOps": 2,
              "derived":
                {
                  "add":
                    {
                      "a": 1,
                      "c": 1,
                      "f": 1,
                      "h": 1,
                      "k": 1,
                      "l": 1,
                      "m": 1,
                      "q": 1,
                      "u": 2,
                      "v": 1,
                    },
                },
              "expectValues":
                {
                  "a": 1,
                  "c": 1,
                  "f": 1,
                  "h": 1,
                  "k": 1,
                  "l": 1,
                  "m": 1,
                  "q": 1,
                  "u": 2,
                  "v": 1,
                },
            }
          - {
              "author": 17369,
              "id": 2,
              "timestamp": "2021-04-19T09:01:02Z",
              "appliedAdd": 1,
              "appliedOps": 2,
              "appliedRemove": 1,
              "derived": { "add": { "t": 1 } },
              "expectValues": { "t": 1 },
            }

    - verify:
        collection: soak/set-ops/sets-register
        documents: *expected

materializations:
  soak/set-ops/views:
    endpoint:
      sqlite: { path: ../../examples.db?_journal=WAL }
    bindings:
      - source: soak/set-ops/sets
        resource: { table: sets }
        fields:
          recommended: true
          include:
            derivedValues: {}
            expectValues: {}

      - source: soak/set-ops/sets-register
        resource: { table: sets_register }
        fields:
          recommended: true
          include:
            derivedValues: {}
            expectValues: {}
