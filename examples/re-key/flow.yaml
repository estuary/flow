# This example models a problem that's common to customer registration or login
# workflows, where an application may have interactions with a user that occur
# *before* the user completes a registration / login.
#
# Here, we capture events with on anonymous IDs (e.x. a session cookie),
# and join through a mapping of anonymous <=> stable IDs. As new anonymous IDs
# are used, events are collected within a register and then published once an
# associated stable ID is learned. Thereafter, further anonymous events are
# immediately mapped and published.

collections:
  # A collection of some interesting events, having (only) anonymous IDs.
  examples/re-key/anonymous_events:
    schema: schema.yaml#/$defs/anonymous_event
    key: [/event_id]

  # Learned mappings of anonymous ID <=> stable ID,
  # e.x. from a login or registration workflow.
  examples/re-key/mappings:
    schema: schema.yaml#/$defs/id_mapping
    key: [/anonymous_id, /stable_id]

  # Derivation of interesting events, now enriched with stable IDs.
  examples/re-key/stable_events:
    schema: schema.yaml#/$defs/stable_event
    key: [/event_id]

    derivation:
      register:
        schema: schema.yaml#/$defs/join_register
        initial: { events: [] }

      transform:
        fromAnonymousEvents:
          source: { name: examples/re-key/anonymous_events }
          shuffle: { key: [/anonymous_id] }
          update: { lambda: typescript }
          publish: { lambda: typescript }

        fromIdMappings:
          source: { name: examples/re-key/mappings }
          shuffle:
            key: [/anonymous_id]
          update: { lambda: typescript }
          publish: { lambda: typescript }

tests:
  "Expect we join anonymous events through stable ID mappings":
    # Events which are recorded before a mapping is available.
    - ingest:
        collection: examples/re-key/anonymous_events
        documents:
          - { anonymous_id: "anon-one", event_id: "ev-1" }
          - { anonymous_id: "anon-two", event_id: "ev-2" }
          - { anonymous_id: "anon-one", event_id: "ev-3" }
    # Learn an "anon-one" => "stable-one" mapping.
    - ingest:
        collection: examples/re-key/mappings
        documents:
          - { anonymous_id: "anon-one", stable_id: "stable-one" }
    # More events are recorded.
    - ingest:
        collection: examples/re-key/anonymous_events
        documents:
          - { anonymous_id: "anon-two", event_id: "ev-4" }
          - { anonymous_id: "anon-one", event_id: "ev-5" }
    # Verify we derive all "stable-one" events (and only these events),
    # from before and after its ID mapping was learned.
    - verify:
        collection: examples/re-key/stable_events
        documents:
          - { stable_id: "stable-one", event_id: "ev-1" }
          - { stable_id: "stable-one", event_id: "ev-3" }
          - { stable_id: "stable-one", event_id: "ev-5" }
    # We duplicate the stable-one mapping (this is a no-op),
    # and learn a new mapping for anon-two.
    - ingest:
        collection: examples/re-key/mappings
        documents:
          - { anonymous_id: "anon-one", stable_id: "stable-one" }
          - { anonymous_id: "anon-two", stable_id: "stable-two" }
    # Now the derivation contains all events, with stable IDs.
    - verify:
        collection: examples/re-key/stable_events
        documents:
          - { stable_id: "stable-one", event_id: "ev-1" }
          - { stable_id: "stable-two", event_id: "ev-2" }
          - { stable_id: "stable-one", event_id: "ev-3" }
          - { stable_id: "stable-two", event_id: "ev-4" }
          - { stable_id: "stable-one", event_id: "ev-5" }
