collections:
  examples/source-schema/permissive:
    schema:
      type: object
      description: "Allows any JSON object, as long as it has a string id field"
      properties:
        id: { type: string }
      required: [id]
    key: [/id]

  examples/source-schema/restrictive:
    schema:
      type: object
      properties:
        id: { type: string }
        a: { type: integer }
        b: { type: boolean }
        c: { type: number }
      required: [id, a, b, c]
    key: [/id]
    derivation:
      transform:
        fromPermissive:
          source:
            name: examples/source-schema/permissive
            schema:
              type: object
              description: "Require that the documents from permissive all have these fields"
              properties:
                id: { type: string }
                a: { type: integer }
                b: { type: boolean }
                c: { type: number }
              required: [id, a, b, c]
          publish: { lambda: typescript }
      typescript:
        module: flow.ts

tests:
  examples/source-schema/test/passed-through:
    - ingest:
        collection: examples/source-schema/permissive
        documents:
          - { id: "one", a: 5, b: true, c: 7.65 }
    - verify:
        collection: examples/source-schema/restrictive
        documents:
          - { id: "one", a: 5, b: true, c: 7.65 }
