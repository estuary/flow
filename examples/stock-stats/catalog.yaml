nodeDependencies:
  moment: "^2.24"

collections:
  - name: stock/ticks
    schema: schemas/L1-tick.yaml
    key: [/security, /time]

    projections:
      exchange:
        location: /exchange
        partition: true
      the_bid_price: /bid/price

  - name: stock/daily-stats
    schema: schemas/daily-stat.yaml
    key: [/security, /date]

    projections:
      my_special_column: /bid
      exchange:
        location: /exchange
        partition: true

    derivation:
      bootstrap:
        - nodeJS: console.error("example of a bootstrap!");
      transform:
        fromTicks:
          source:
            name: stock/ticks
            schema: "schemas/L1-tick.yaml#/$defs/withRequired"
            partitions: { include: { exchange: [NYSE, NASDAQ] } }

          # readDelay that's temporarily set on this transform just to have one,
          # awaiting a more wholesale refactoring of `examples` into
          # a proper integration test suite.
          readDelay: 24h
          publish:
            nodeJS: |
              // Alias "source" document to "tick".
              let tick = source;
              // Current bid/ask price spread of the tick.
              let spread = tick.ask.price - tick.bid.price;
              // Truncate full UTC timestamp to current date.
              let date = moment.utc(tick.time).format("YYYY-MM-DD");

              return [{
                  exchange: tick.exchange,
                  security: tick.security,
                  date:     date,
                  // Price stat uses a by-volume weighted average of trades.
                  price: {
                      low:  tick.last.price,
                      high: tick.last.price,
                      avgN: tick.last.price * tick.last.size,
                      avgD: tick.last.size,
                  },
                  // Bid, ask, and spread stats use equal weighting of observed prices across ticks.
                  bid: {
                      low:  tick.bid.price,
                      high: tick.bid.price,
                      avgN: tick.bid.price,
                      avgD: 1,
                  },
                  ask: {
                      low:  tick.ask.price,
                      high: tick.ask.price,
                      avgN: tick.ask.price,
                      avgD: 1,
                  },
                  spread: {low: spread, high: spread, avgN: spread, avgD: 1},
                  volume: tick.last.size,
                  first:  tick.last,
                  last:   tick.last,
              }];

materializations:
  dailyStatsPostgres:
    collection: stock/daily-stats
    postgres:
      uri: postgresql://postgres:postgres@localhost:5432/postgres?sslmode=disable
      table: daily_stats

tests:
  # TODO this is a pretty silly test, and is the result of my messing around
  # to exercise various code paths. This should be removed and covered by novel tests
  # each focused on reductions, partitioning, partition selectors during verification, etc.
  "stock/daily-stats rolls up from stock/ticks":
    - ingest:
        collection: stock/ticks
        documents: &ingest1
          - exchange: NYSE
            security: APPL
            time: "2019-01-16T12:34:56Z"
            bid: { "price": 321.09, "size": 100 }
            ask: { "price": 321.45, "size": 200 }
            last: { "price": 321.12, "size": 50 }
    - ingest:
        collection: stock/ticks
        documents: &ingest2
          - exchange: NYSE
            security: APPL
            time: "2019-01-16T12:34:58Z"
            bid: { "price": 321.10, "size": 150 }
            ask: { "price": 321.44, "size": 100 }
            last: { "price": 321.15, "size": 75 }
          - exchange: NYSE
            security: GOOG
            time: "2019-01-17T12:05:27Z"
            bid: { "price": 101.10, "size": 37 }
            ask: { "price": 202.44, "size": 3 }
            last: { "price": 150.07, "size": 76 }
    - ingest:
        collection: stock/ticks
        documents: *ingest1
    - ingest:
        collection: stock/ticks
        documents:
          - exchange: NASDAQ
            security: Foob
            time: "2019-01-17T12:34:58Z"
            bid: { "price": 321.10, "size": 150 }
            ask: { "price": 321.44, "size": 100 }
            last: { "price": 321.15, "size": 75 }
    - ingest:
        collection: stock/ticks
        documents: *ingest2
    - verify:
        collection: stock/daily-stats
        partitions: { include: { exchange: [NYSE] } }
        documents:
          - "ask": { "avgD": 4, "avgN": 1285.78, "high": 321.45, "low": 321.44 }
            "bid": { "avgD": 4, "avgN": 1284.38, "high": 321.1, "low": 321.09 }
            "date": "2019-01-16"
            "exchange": "NYSE"
            "first": { "price": 321.12, "size": 50 }
            "last": { "price": 321.15, "size": 75 }
            "price":
              { "avgD": 250, "avgN": 80284.5, "high": 321.15, "low": 321.12 }
            "security": "APPL"
            "spread":
              {
                "avgD": 4,
                "avgN": 1.3999999999999773,
                "high": 0.36000000000001364,
                "low": 0.339999999999975,
              }
            "volume": 250
          - security: GOOG
            first: { price: 150.07 }
    - verify:
        collection: stock/daily-stats
        partitions: { include: { exchange: [NASDAQ] } }
        documents:
          - security: Foob
            first: { price: 321.15 }
