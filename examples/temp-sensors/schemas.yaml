$defs:
  sensor:
    description: "A sensor that produces temperature readings"
    type: object
    properties:
      id:
        type: integer
        description: "The unique id of this sensor"
      locationName:
        type: string
        description: "Human readable name of the sensor location"
        examples: ["Behind the couch"]
      location:
        $ref: https://geojson.org/schema/Point.json
        description: "The precise geographic location of the sensor"
    required: [id]

  reading:
    description: "A reading of a temperature from a sensor"
    type: object
    properties:
      sensorId:
        type: integer
        description: "The id of the sensor that produced the reading"
      timestamp:
        type: string
        format: date-time
        description: "An RFC-3339 formatted string holding the time of the reading"
      tempC:
        type: number
        description: "The temperature in degrees celsius"
    required: [sensorId, timestamp, tempC]

  average:
    description: "Average temperature information for a particular sensor"
    type: object
    properties:
      sensor:
        $ref: "#/$defs/sensor"
        # Deeply merge partial updates of the nested sensor definition.
        reduce: { strategy: merge }

      # locationName may be null if we've received readings before the corresponding sensor
      # documents. That's OK because we'll later update the locationName once it becomes known.
      numReadings:
        type: integer
        reduce: { strategy: sum }
      totalC:
        type: number
        reduce: { strategy: sum }
      minTempC:
        type: number
        reduce: { strategy: minimize }
      maxTempC:
        type: number
        reduce: { strategy: maximize }
      lastReading:
        type: string
        format: date-time
        description: "Timestamp of the most recent reading for this named location"
        # Since our timestamps are in RFC 3339 format, the lexicographic comparison done by
        # maximize will pick the most recent time.
        reduce: { strategy: maximize }

    reduce: { strategy: merge }
    required: [sensor]
