collections:
  # A temperature sensor, which may produce many temperature readings
  temperature/sensors:
    schema: schemas.yaml#/$defs/sensor
    key: [/id]

  # Stream of readings that come from temperature sensors.
  temperature/readings:
    schema: schemas.yaml#/$defs/reading
    key: [/sensorId, /timestamp]

  # Aggregate of temperature readings by sensor, enriched with sensor metadata.
  temperature/averages:
    schema: schemas.yaml#/$defs/average
    key: [/sensor/id]
    derivation:
      transform:
        fromSensors:
          source: { name: temperature/sensors }
          publish: { lambda: typescript }
        fromReadings:
          shuffle:
            key: [/sensorId]
          source: { name: temperature/readings }
          publish: { lambda: typescript }
      typescript:
        module: flow.ts

materializations:
  temperature/views:
    endpoint:
      connector:
        image: ghcr.io/estuary/materialize-sqlite:dev
        config: {}
    bindings:
      - source: temperature/averages
        resource: { table: temperatures }

tests:
  temperature/test/average-update:
    - ingest: &readings
        collection: temperature/readings
        documents:
          - { sensorId: 1, timestamp: "2020-08-26T06:30:31Z", tempC: 18.9 }
          - { sensorId: 1, timestamp: "2020-08-26T11:39:57Z", tempC: 21.1 }
          - { sensorId: 2, timestamp: "2020-08-26T13:32:44Z", tempC: 23.2 }
          - { sensorId: 1, timestamp: "2020-08-26T17:19:00Z", tempC: 21.0 }
          - { sensorId: 2, timestamp: "2020-08-26T19:26:53Z", tempC: 20.9 }

    - verify: &expected
        collection: temperature/averages
        documents:
          - sensor: { id: 1 }
            numReadings: 3
            totalC: 61
            minTempC: 18.9
            maxTempC: 21.1
            lastReading: "2020-08-26T17:19:00Z"

          - sensor: { id: 2 }
            numReadings: 2
            totalC: 44.1
            minTempC: 20.9
            maxTempC: 23.2
            lastReading: "2020-08-26T19:26:53Z"

  temperature/test/location-update:
    - ingest: &sensors
        collection: temperature/sensors
        documents:
          - { id: 1, locationName: Office }
          - { id: 2, locationName: Workshop }
    - ingest: *readings

    - verify: &expected1
        collection: temperature/averages
        documents:
          - sensor:
              id: 1
              locationName: Office
            numReadings: 3
            totalC: 61
            minTempC: 18.9
            maxTempC: 21.1
            lastReading: "2020-08-26T17:19:00Z"

          - sensor:
              id: 2
              locationName: Workshop
            numReadings: 2
            totalC: 44.1
            minTempC: 20.9
            maxTempC: 23.2
            lastReading: "2020-08-26T19:26:53Z"
