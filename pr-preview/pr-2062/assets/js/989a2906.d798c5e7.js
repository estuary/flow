"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[5423],{1323:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var r=t(74848),s=t(28453);const i={},o="StarTree",a={id:"reference/Connectors/materialization-connectors/Dekaf/startree",title:"StarTree",description:"This connector materializes Flow collections as Kafka-compatible messages that a StarTree Kafka consumer can read. StarTree is a real-time analytics platform built on Apache Pinot, designed for performing fast,",source:"@site/docs/reference/Connectors/materialization-connectors/Dekaf/startree.md",sourceDirName:"reference/Connectors/materialization-connectors/Dekaf",slug:"/reference/Connectors/materialization-connectors/Dekaf/startree",permalink:"/pr-preview/pr-2062/reference/Connectors/materialization-connectors/Dekaf/startree",draft:!1,unlisted:!1,editUrl:"https://github.com/estuary/flow/edit/master/site/docs/reference/Connectors/materialization-connectors/Dekaf/startree.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SingleStore",permalink:"/pr-preview/pr-2062/reference/Connectors/materialization-connectors/Dekaf/singlestore"},next:{title:"Tinybird",permalink:"/pr-preview/pr-2062/reference/Connectors/materialization-connectors/Dekaf/tinybird"}},c={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Variants",id:"variants",level:2},{value:"Setup",id:"setup",level:2},{value:"Connecting Estuary Flow to StarTree",id:"connecting-estuary-flow-to-startree",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Properties",id:"properties",level:3},{value:"Endpoint",id:"endpoint",level:4},{value:"Bindings",id:"bindings",level:4},{value:"Sample",id:"sample",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"startree",children:"StarTree"}),"\n",(0,r.jsxs)(n.p,{children:["This connector materializes Flow collections as Kafka-compatible messages that a StarTree Kafka consumer can read. ",(0,r.jsx)(n.a,{href:"https://startree.ai/",children:"StarTree"})," is a real-time analytics platform built on Apache Pinot, designed for performing fast,\nlow-latency analytics on large-scale data."]}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsx)(n.p,{children:"To use this connector, you'll need:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"At least one Flow collection"}),"\n",(0,r.jsx)(n.li,{children:"A StarTree account"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"variants",children:"Variants"}),"\n",(0,r.jsxs)(n.p,{children:["This connector is a variant of the default Dekaf connector. For other integration options, see the main ",(0,r.jsx)(n.a,{href:"/pr-preview/pr-2062/reference/Connectors/materialization-connectors/Dekaf/",children:"Dekaf"})," page."]}),"\n",(0,r.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,r.jsx)(n.p,{children:"Provide an auth token when setting up the Dekaf connector. This can be a password of your choosing and will be used to authenticate consumers to your Kafka topics."}),"\n",(0,r.jsxs)(n.p,{children:["Once the connector is created, note the full materialization name, such as ",(0,r.jsx)(n.code,{children:"YOUR-ORG/YOUR-PREFIX/YOUR-MATERIALIZATION"}),". You will use this as the username."]}),"\n",(0,r.jsx)(n.h2,{id:"connecting-estuary-flow-to-startree",children:"Connecting Estuary Flow to StarTree"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["In the StarTree UI, navigate to the ",(0,r.jsx)(n.strong,{children:"Data Sources"})," section and choose ",(0,r.jsx)(n.strong,{children:"Add New Data Source"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Select ",(0,r.jsx)(n.strong,{children:"Kafka"})," as your data source type."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Enter the following connection details:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Bootstrap Servers"}),": ",(0,r.jsx)(n.code,{children:"dekaf.estuary-data.com"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Security Protocol"}),": ",(0,r.jsx)(n.code,{children:"SASL_SSL"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SASL Mechanism"}),": ",(0,r.jsx)(n.code,{children:"PLAIN"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SASL Username"}),": Your materialization's full name, such as ",(0,r.jsx)(n.code,{children:"YOUR-ORG/YOUR-PREFIX/YOUR-MATERIALIZATION"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SASL Password"}),": Your materialization's auth token"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Configure Schema Registry"}),": To decode Avro messages, enable schema registry settings:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Schema Registry URL"}),": ",(0,r.jsx)(n.code,{children:"https://dekaf.estuary-data.com"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Schema Registry Username"}),": Same as the SASL username"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Schema Registry Password"}),": Same as the SASL password"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Click ",(0,r.jsx)(n.strong,{children:"Create Connection"})," to proceed."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(n.p,{children:"To use this connector, begin with data in one or more Flow collections.\nUse the below properties to configure a Dekaf materialization, which will direct one or more of your Flow collections to your desired topics."}),"\n",(0,r.jsx)(n.h3,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(n.h4,{id:"endpoint",children:"Endpoint"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Property"}),(0,r.jsx)(n.th,{children:"Title"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Required/Default"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"/token"})}),(0,r.jsx)(n.td,{children:"Auth Token"}),(0,r.jsx)(n.td,{children:"The password that Kafka consumers can use to authenticate to this task."}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Required"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"/strict_topic_names"})}),(0,r.jsx)(n.td,{children:"Strict Topic Names"}),(0,r.jsx)(n.td,{children:"Whether or not to expose topic names in a strictly Kafka-compliant format."}),(0,r.jsx)(n.td,{children:"boolean"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"/deletions"})}),(0,r.jsx)(n.td,{children:"Deletion Mode"}),(0,r.jsxs)(n.td,{children:["Can choose between ",(0,r.jsx)(n.code,{children:"kafka"})," or ",(0,r.jsx)(n.code,{children:"cdc"})," deletion modes."]}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"kafka"})})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"bindings",children:"Bindings"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Property"}),(0,r.jsx)(n.th,{children:"Title"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Required/Default"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"/topic_name"})}),(0,r.jsx)(n.td,{children:"Topic Name"}),(0,r.jsx)(n.td,{children:"Kafka topic name that Dekaf will publish under."}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Required"})]})})]}),"\n",(0,r.jsx)(n.h3,{id:"sample",children:"Sample"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"materializations:\n  ${PREFIX}/${mat_name}:\n    endpoint:\n      dekaf:\n        config:\n          token: <auth-token>\n          strict_topic_names: false\n          deletions: kafka\n        variant: startree\n    bindings:\n      - resource:\n          topic_name: ${COLLECTION_NAME}\n        source: ${PREFIX}/${COLLECTION_NAME}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(96540);const s={},i=r.createContext(s);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);