"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[5109],{77175:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var n=i(74848),r=i(28453);const s={description:"This connector materializes delta updates of Flow collections into files in a GCS bucket per the CSV format described in RFC-4180"},c="CSV Files in Google GCS",l={id:"reference/Connectors/materialization-connectors/google-gcs-csv",title:"CSV Files in Google GCS",description:"This connector materializes delta updates of Flow collections into files in a GCS bucket per the CSV format described in RFC-4180",source:"@site/docs/reference/Connectors/materialization-connectors/google-gcs-csv.md",sourceDirName:"reference/Connectors/materialization-connectors",slug:"/reference/Connectors/materialization-connectors/google-gcs-csv",permalink:"/pr-preview/pr-1772/reference/Connectors/materialization-connectors/google-gcs-csv",draft:!1,unlisted:!1,editUrl:"https://github.com/estuary/flow/edit/master/site/docs/reference/Connectors/materialization-connectors/google-gcs-csv.md",tags:[],version:"current",frontMatter:{description:"This connector materializes delta updates of Flow collections into files in a GCS bucket per the CSV format described in RFC-4180"},sidebar:"tutorialSidebar",previous:{title:"Firebolt",permalink:"/pr-preview/pr-1772/reference/Connectors/materialization-connectors/Firebolt"},next:{title:"Apache Parquet Files in Google GCS",permalink:"/pr-preview/pr-1772/reference/Connectors/materialization-connectors/google-gcs-parquet"}},o={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Properties",id:"properties",level:3},{value:"Endpoint",id:"endpoint",level:4},{value:"Bindings",id:"bindings",level:4},{value:"Sample",id:"sample",level:3},{value:"File Names",id:"file-names",level:2},{value:"Eventual Consistency",id:"eventual-consistency",level:2}];function a(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"csv-files-in-google-gcs",children:"CSV Files in Google GCS"}),"\n",(0,n.jsxs)(t.p,{children:["This connector materializes ",(0,n.jsx)(t.a,{href:"/pr-preview/pr-1772/concepts/materialization#delta-updates",children:"delta updates"})," of\nFlow collections into files in a GCS bucket per the CSV format described in\n",(0,n.jsx)(t.a,{href:"https://www.rfc-editor.org/rfc/rfc4180.html",children:"RFC-4180"}),". The CSV files are compressed using Gzip\ncompression."]}),"\n",(0,n.jsx)(t.p,{children:"The delta updates are batched within Flow, converted to CSV files, and then pushed to the S3 bucket\nat a time interval that you set. Files are limited to a configurable maximum size. Each materialized\nFlow collection will produce many separate files."}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"https://ghcr.io/estuary/materialize-gcs-csv:dev",children:(0,n.jsx)(t.code,{children:"ghcr.io/estuary/materialize-gcs-csv:dev"})}),"\nprovides the latest connector image. You can also follow the link in your browser to see past image\nversions."]}),"\n",(0,n.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,n.jsx)(t.p,{children:"To use this connector, you'll need:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["A GCS bucket to write files to. See ",(0,n.jsx)(t.a,{href:"https://cloud.google.com/storage/docs/creating-buckets",children:"this\nguide"})," for instructions on setting up a\nnew GCS bucket."]}),"\n",(0,n.jsxs)(t.li,{children:["A Google Cloud ",(0,n.jsx)(t.a,{href:"https://cloud.google.com/docs/authentication/getting-started",children:"service account"}),"\nwith ",(0,n.jsx)(t.a,{href:"https://cloud.google.com/storage/docs/access-control/iam-roles#standard-roles",children:(0,n.jsx)(t.code,{children:"roles/storage.objectCreator"})}),"\nfor the GCS bucket created above."]}),"\n",(0,n.jsx)(t.li,{children:"A key file for the service account."}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,n.jsx)(t.p,{children:"Use the below properties to configure the materialization, which will direct one or more of your\nFlow collections to your bucket."}),"\n",(0,n.jsx)(t.h3,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(t.h4,{id:"endpoint",children:"Endpoint"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Property"}),(0,n.jsx)(t.th,{children:"Title"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Required/Default"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"/bucket"})})}),(0,n.jsx)(t.td,{children:"Bucket"}),(0,n.jsx)(t.td,{children:"Bucket to store materialized objects."}),(0,n.jsx)(t.td,{children:"string"}),(0,n.jsx)(t.td,{children:"Required"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"/credentialsJson"})})}),(0,n.jsx)(t.td,{children:"Service Account JSON"}),(0,n.jsx)(t.td,{children:"The JSON credentials of the service account to use for authorization."}),(0,n.jsx)(t.td,{children:"string"}),(0,n.jsx)(t.td,{children:"Required"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"/uploadInterval"})})}),(0,n.jsx)(t.td,{children:"Upload Interval"}),(0,n.jsx)(t.td,{children:"Frequency at which files will be uploaded."}),(0,n.jsx)(t.td,{children:"string"}),(0,n.jsx)(t.td,{children:"5m"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"/prefix"})}),(0,n.jsx)(t.td,{children:"Prefix"}),(0,n.jsx)(t.td,{children:"Optional prefix that will be used to store objects."}),(0,n.jsx)(t.td,{children:"string"}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"/fileSizeLimit"})}),(0,n.jsx)(t.td,{children:"File Size Limit"}),(0,n.jsx)(t.td,{children:"Approximate maximum size of materialized files in bytes. Defaults to 10737418240 (10 GiB) if blank."}),(0,n.jsx)(t.td,{children:"integer"}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"/csvConfig/delimiter"})}),(0,n.jsx)(t.td,{children:"Delimiter"}),(0,n.jsx)(t.td,{children:"Character to separate columns within a row. Defaults to a comma if blank. Must be a single character with a byte length of 1."}),(0,n.jsx)(t.td,{children:"integer"}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"/csvConfig/nullString"})}),(0,n.jsx)(t.td,{children:"Null String"}),(0,n.jsx)(t.td,{children:"String to use to represent NULL values. Defaults to an empty string if blank."}),(0,n.jsx)(t.td,{children:"integer"}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"/csvConfig/skipHeaders"})}),(0,n.jsx)(t.td,{children:"Skip Headers"}),(0,n.jsx)(t.td,{children:"Do not write headers to files."}),(0,n.jsx)(t.td,{children:"integer"}),(0,n.jsx)(t.td,{})]})]})]}),"\n",(0,n.jsx)(t.h4,{id:"bindings",children:"Bindings"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Property"}),(0,n.jsx)(t.th,{children:"Title"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Required/Default"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"/path"})})}),(0,n.jsx)(t.td,{children:"Path"}),(0,n.jsx)(t.td,{children:"The path that objects will be materialized to."}),(0,n.jsx)(t.td,{children:"string"}),(0,n.jsx)(t.td,{children:"Required"})]})})]}),"\n",(0,n.jsx)(t.h3,{id:"sample",children:"Sample"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",children:'materializations:\n  ${PREFIX}/${mat_name}:\n    endpoint:\n      connector:\n        image: "ghcr.io/estuary/materialize-gcs-csv:dev"\n        config:\n          bucket: bucket\n          credentialsJson: <credentialsJson>\n          uploadInterval: 5m\n    bindings:\n      - resource:\n          path: ${COLLECTION_NAME}\n        source: ${PREFIX}/${COLLECTION_NAME}\n'})}),"\n",(0,n.jsx)(t.h2,{id:"file-names",children:"File Names"}),"\n",(0,n.jsx)(t.p,{children:"Materialized files are named with monotonically increasing integer values, padded with leading 0's\nso they remain lexically sortable. For example, a set of files may be materialized like this for a\ngiven collection:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"bucket/prefix/path/v0000000000/00000000000000000000.csv\nbucket/prefix/path/v0000000000/00000000000000000001.csv\nbucket/prefix/path/v0000000000/00000000000000000002.csv\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Here the values for ",(0,n.jsx)(t.strong,{children:"bucket"})," and ",(0,n.jsx)(t.strong,{children:"prefix"})," are from your endpoint configuration. The ",(0,n.jsx)(t.strong,{children:"path"})," is\nspecific to the binding configuration. ",(0,n.jsx)(t.strong,{children:"v0000000000"})," represents the current ",(0,n.jsx)(t.strong,{children:"backfill counter"}),"\nfor binding and will be increased if the binding is re-backfilled, along with the file names\nstarting back over from 0."]}),"\n",(0,n.jsx)(t.h2,{id:"eventual-consistency",children:"Eventual Consistency"}),"\n",(0,n.jsx)(t.p,{children:"In rare circumstances, recently materialized files may be re-written by files with the same name if\nthe materialization shard is interrupted in the middle of processing a Flow transaction and the\ntransaction must be re-started. Files that were committed as part of a completed transaction will\nnever be re-written. In this way, eventually all collection data will be written to files\neffectively-once, although inconsistencies are possible when accessing the most recently written\ndata."})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>c,x:()=>l});var n=i(96540);const r={},s=n.createContext(r);function c(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);