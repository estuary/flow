"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[4409],{81997:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>d,frontMatter:()=>c,metadata:()=>i,toc:()=>l});var r=n(74848),o=n(28453);const c={},s="SingleStore Batch Query Connector",i={id:"reference/Connectors/capture-connectors/MySQL/singlestore-batch",title:"SingleStore Batch Query Connector",description:"This connector captures data from SingleStore into Flow collections by periodically executing queries and translating",source:"@site/docs/reference/Connectors/capture-connectors/MySQL/singlestore-batch.md",sourceDirName:"reference/Connectors/capture-connectors/MySQL",slug:"/reference/Connectors/capture-connectors/MySQL/singlestore-batch",permalink:"/pr-preview/pr-1624/reference/Connectors/capture-connectors/MySQL/singlestore-batch",draft:!1,unlisted:!1,editUrl:"https://github.com/estuary/flow/edit/master/site/docs/reference/Connectors/capture-connectors/MySQL/singlestore-batch.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"MySQL Batch Query Connector",permalink:"/pr-preview/pr-1624/reference/Connectors/capture-connectors/MySQL/mysql-batch"},next:{title:"NetSuite SuiteAnalytics Connect",permalink:"/pr-preview/pr-1624/reference/Connectors/capture-connectors/netsuite-suiteanalytics"}},a={},l=[];function u(e){const t={code:"code",h1:"h1",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"singlestore-batch-query-connector",children:"SingleStore Batch Query Connector"}),"\n",(0,r.jsx)(t.p,{children:"This connector captures data from SingleStore into Flow collections by periodically executing queries and translating\nthe results into JSON documents. It leverages SingleStore's MySQL wire compatibility to interact with the database."}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"This connector periodically re-executes the query"}),". The default polling interval is set\nto 24 hours to minimize this behavior's impact, but depending on table size, it may lead to duplicated data being\nprocessed."]}),"\n",(0,r.jsxs)(t.p,{children:["If the dataset has a natural cursor that can identify only new or updated rows, it should be specified by editing the\n",(0,r.jsx)(t.code,{children:"Cursor"})," property of the binding. Common examples of suitable cursors include:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Update timestamps, which are typically the best choice since they can capture all changed rows, not just new rows."}),"\n",(0,r.jsx)(t.li,{children:"Creation timestamps, which work for identifying newly added rows in append-only datasets but won\u2019t capture updates."}),"\n",(0,r.jsx)(t.li,{children:"Serially increasing IDs, which can be used to track newly added rows."}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>i});var r=n(96540);const o={},c=r.createContext(o);function s(e){const t=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(c.Provider,{value:t},e.children)}}}]);