"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[7746],{60961:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var t=r(74848),s=r(28453);const i={},o="Tinybird",a={id:"reference/Connectors/dekaf/dekaf-tinybird",title:"Tinybird",description:"In this guide, you'll learn how to use Estuary Flow to push data streams to Tinybird.",source:"@site/docs/reference/Connectors/dekaf/dekaf-tinybird.md",sourceDirName:"reference/Connectors/dekaf",slug:"/reference/Connectors/dekaf/dekaf-tinybird",permalink:"/pr-preview/pr-1581/reference/Connectors/dekaf/dekaf-tinybird",draft:!1,unlisted:!1,editUrl:"https://github.com/estuary/flow/edit/master/site/docs/reference/Connectors/dekaf/dekaf-tinybird.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"StarTree",permalink:"/pr-preview/pr-1581/reference/Connectors/dekaf/dekaf-startree"},next:{title:"Materialization connectors",permalink:"/pr-preview/pr-1581/reference/Connectors/materialization-connectors/"}},c={},d=[{value:"Prerequisites",id:"prerequisites",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"tinybird",children:"Tinybird"}),"\n",(0,t.jsx)(n.p,{children:"In this guide, you'll learn how to use Estuary Flow to push data streams to Tinybird."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://www.tinybird.co/",children:"Tinybird"})," is a data platform for user-facing analytics."]}),"\n",(0,t.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"An Estuary account & collection"}),"\n",(0,t.jsx)(n.li,{children:"A Tinybird account & Workspace"}),"\n"]}),"\n",(0,t.jsx)(n.h1,{id:"connecting-estuary-flow-to-tinybird",children:"Connecting Estuary Flow to Tinybird"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Create a new access token to use for the Tinybird connection. You can do this from the Estuary Admin Dashboard.\n",(0,t.jsx)(n.img,{src:"https://storage.googleapis.com/estuary-marketing-strapi-uploads/uploads//Group_22_95a85083d4/Group_22_95a85083d4.png",alt:"Export Dekaf Access Token"})]}),"\n",(0,t.jsxs)(n.li,{children:["In your Tinybird Workspace, create a new Data Source and use the Kafka Connector.\n",(0,t.jsx)(n.img,{src:"https://storage.googleapis.com/estuary-marketing-strapi-uploads/uploads//Screenshot_2024_08_23_at_15_16_39_35b06dad77/Screenshot_2024_08_23_at_15_16_39_35b06dad77.png",alt:"Configure Estuary Flow Data Source"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"To configure the connection details, use the following settings."}),"\n",(0,t.jsxs)(n.p,{children:["Bootstrap servers: ",(0,t.jsx)(n.code,{children:"dekaf.estuary.dev"}),"\nSASL Mechanism: ",(0,t.jsx)(n.code,{children:"PLAIN"}),"\nSASL Username: ",(0,t.jsx)(n.code,{children:"{}"}),"\nSASL Password: ",(0,t.jsx)(n.code,{children:"Estuary Refresh Token"})," (Generate your token in the Estuary Admin Dashboard)"]}),"\n",(0,t.jsx)(n.p,{children:"Tick the Decode Avro messages with Schema Register box, and use the following settings:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["URL: ",(0,t.jsx)(n.code,{children:"https://dekaf.estuary.dev"})]}),"\n",(0,t.jsxs)(n.li,{children:["Username: ",(0,t.jsx)(n.code,{children:"{}"})]}),"\n",(0,t.jsxs)(n.li,{children:["Password: ",(0,t.jsx)(n.code,{children:"The same Estuary Refresh Token as above"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://storage.googleapis.com/estuary-marketing-strapi-uploads/uploads//Screenshot_2024_08_23_at_15_16_46_374f7f8a12/Screenshot_2024_08_23_at_15_16_46_374f7f8a12.png",alt:"Configure Estuary Flow Schema Registry"})}),"\n",(0,t.jsx)(n.p,{children:"Click Next and you will see a list of topics. These topics are the collections you have in Estuary.\nSelect the collection you want to ingest into Tinybird, and click Next."}),"\n",(0,t.jsx)(n.p,{children:"Configure your consumer group as needed."}),"\n",(0,t.jsx)(n.p,{children:"Finally, you will see a preview of the Data Source schema. Feel free to make any modifications as required, then click\nCreate Data Source."}),"\n",(0,t.jsx)(n.p,{children:"This will complete the connection with Tinybird, and new data from the Estuary Flow collection will arrive in your\nTinybird Data Source in real-time."})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var t=r(96540);const s={},i=t.createContext(s);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);