"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[9729],{65949:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var a=s(74848),t=s(28453);const r={},o="Connecting to Estuary Flow from Kafka using Dekaf",i={id:"guides/dekaf_reading_collections_from_kafka",title:"Connecting to Estuary Flow from Kafka using Dekaf",description:"Reporting is not yet supported for Dekaf, but is coming.",source:"@site/docs/guides/dekaf_reading_collections_from_kafka.md",sourceDirName:"guides",slug:"/guides/dekaf_reading_collections_from_kafka",permalink:"/pr-preview/pr-1872/guides/dekaf_reading_collections_from_kafka",draft:!1,unlisted:!1,editUrl:"https://github.com/estuary/flow/edit/master/site/docs/guides/dekaf_reading_collections_from_kafka.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Customize materialized fields",permalink:"/pr-preview/pr-1872/guides/customize-materialization-fields"},next:{title:"How to transform data using SQL",permalink:"/pr-preview/pr-1872/guides/derivation_tutorial_sql"}},l={},c=[{value:"Overview",id:"overview",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Connection Details",id:"connection-details",level:2},{value:"How to Connect to Dekaf",id:"how-to-connect-to-dekaf",level:2},{value:"1. Generate an Estuary Flow refresh token",id:"1-generate-an-estuary-flow-refresh-token",level:3},{value:"2. Set Up Your Kafka Client",id:"2-set-up-your-kafka-client",level:3},{value:"Example Kafka Client Configuration",id:"example-kafka-client-configuration",level:4}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"connecting-to-estuary-flow-from-kafka-using-dekaf",children:"Connecting to Estuary Flow from Kafka using Dekaf"}),"\n",(0,a.jsxs)(n.admonition,{title:"Dekaf is currently in beta.",type:"note",children:[(0,a.jsx)(n.p,{children:"Reporting is not yet supported for Dekaf, but is coming."}),(0,a.jsx)(n.p,{children:"We're currently not charging for use of Dekaf, but will eventually charge under our standard data movement pricing"}),(0,a.jsx)(n.p,{children:"We appreciate your feedback as we continue to refine and enhance this feature."})]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Dekaf"})," is Estuary Flow's Kafka API compatibility layer, allowing consumers to read data from Estuary Flow collections\nas if they were Kafka topics. Additionally, Dekaf provides a schema registry API for managing schemas. This guide will\nwalk you through the steps to connect to Estuary Flow using Dekaf and its schema registry."]}),"\n",(0,a.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Collections"})," represent datasets within Estuary Flow. All captured documents are written to a collection, and all\nmaterialized documents are read from a collection."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Dekaf"})," enables you to interact with these collections as though they were Kafka topics, providing seamless\nintegration with existing Kafka-based tools and workflows."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Kafka Topic Emulation"}),": Access Estuary Flow collections as if they were Kafka topics."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Schema Registry Emulation"}),": Manage and retrieve schemas assigned to Estuary Flow collections, emulating Confluent's\nSchema Registry."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"connection-details",children:"Connection Details"}),"\n",(0,a.jsx)(n.p,{children:"To connect to Estuary Flow via Dekaf, you need the following connection details:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Broker Address"}),": ",(0,a.jsx)(n.code,{children:"dekaf.estuary-data.com"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Schema Registry Address"}),": ",(0,a.jsx)(n.code,{children:"https://dekaf.estuary-data.com"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Security Protocol"}),": ",(0,a.jsx)(n.code,{children:"SASL_SSL"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"SASL Mechanism"}),": ",(0,a.jsx)(n.code,{children:"PLAIN"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"SASL Username"}),": ",(0,a.jsx)(n.code,{children:"{}"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"SASL Password"}),": Estuary Refresh Token (",(0,a.jsx)(n.a,{href:"/guides/how_to_generate_refresh_token",children:"Generate a refresh token"})," in\nthe dashboard)"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Schema Registry Username"}),": ",(0,a.jsx)(n.code,{children:"{}"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Schema Registry Password"}),": The same Estuary Refresh Token as above"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"how-to-connect-to-dekaf",children:"How to Connect to Dekaf"}),"\n",(0,a.jsxs)(n.h3,{id:"1-generate-an-estuary-flow-refresh-token",children:["1. ",(0,a.jsx)(n.a,{href:"/guides/how_to_generate_refresh_token",children:"Generate an Estuary Flow refresh token"})]}),"\n",(0,a.jsx)(n.h3,{id:"2-set-up-your-kafka-client",children:"2. Set Up Your Kafka Client"}),"\n",(0,a.jsx)(n.p,{children:"Configure your Kafka client using the connection details provided."}),"\n",(0,a.jsx)(n.h4,{id:"example-kafka-client-configuration",children:"Example Kafka Client Configuration"}),"\n",(0,a.jsxs)(n.p,{children:["Below is an example configuration for a Kafka client using Python\u2019s ",(0,a.jsx)(n.code,{children:"kafka-python"})," library:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"from kafka import KafkaConsumer\n\n# Configuration details\nconf = {\n    'bootstrap_servers': 'dekaf.estuary-data.com:9092',\n    'security_protocol': 'SASL_SSL',\n    'sasl_mechanism': 'PLAIN',\n    'sasl_plain_username': '{}',\n    'sasl_plain_password': 'Your_Estuary_Refresh_Token',\n    'group_id': 'your_group_id',\n    'auto_offset_reset': 'earliest'\n}\n\n# Create Consumer instance\nconsumer = KafkaConsumer(\n    'your_topic_name',\n    bootstrap_servers=conf['bootstrap_servers'],\n    security_protocol=conf['security_protocol'],\n    sasl_mechanism=conf['sasl_mechanism'],\n    sasl_plain_username=conf['sasl_plain_username'],\n    sasl_plain_password=conf['sasl_plain_password'],\n    group_id=conf['group_id'],\n    auto_offset_reset=conf['auto_offset_reset'],\n    enable_auto_commit=True,\n    value_deserializer=lambda x: x.decode('utf-8')\n)\n\n# Poll for messages\ntry:\n    for msg in consumer:\n        print(f\"Received message: {msg.value}\")\nexcept KeyboardInterrupt:\n    pass\nfinally:\n    consumer.close()\n"})}),"\n",(0,a.jsxs)(n.p,{children:["You can also use ",(0,a.jsx)(n.a,{href:"https://github.com/edenhill/kcat",children:"kcat"})," (formerly known as kafkacat) to test reading messages from an\nEstuary Flow collection as if it were a Kafka topic."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'kcat -C \\\n    -X broker.address.family=v4 \\\n    -X security.protocol=SASL_SSL \\\n    -X sasl.mechanism=PLAIN \\\n    -X sasl.username="{}" \\\n    -X sasl.password="Your_Estuary_Refresh_Token" \\\n    -b dekaf.estuary-data.com:9092 \\\n    -t "full/nameof/estuarycolletion" \\\n    -p 0 \\\n    -o beginning \\\n    -s avro \\\n    -r https://{}:{Your_Estuary_Refresh_Token}@dekaf.estuary-data.com\n'})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>i});var a=s(96540);const t={},r=a.createContext(t);function o(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);