import:
  - transfers.flow.yaml

collections:
  examples/acmeBank/flagged-transfers:
    schema:
      # Extend transfer schema with `balance` and `overdrawn` fields.
      $ref: transfers.schema.yaml
      required: [balance, overdrawn]
      properties:
        balance: { type: number }
        overdrawn: { type: boolean }
    key: [/id]

    projections:
      # Logically partition on transfers which are flagged as overdrawn.
      overdrawn:
        location: /overdrawn
        partition: true

    derivation:
      # Registers track the current balance of each account.
      register:
        schema:
          type: number
          reduce: { strategy: sum }
        initial: 0

      typescript:
        module: flagged-transfers.ts

      transform:
        fromTransferSender:
          source: { name: examples/acmeBank/transfers }
          shuffle: { key: [/sender] }
          # Debit the sender's register balance.
          update: { lambda: typescript }
          # Publish transfer enriched with current sender balance.
          publish: { lambda: typescript }

        fromTransferRecipient:
          source: { name: examples/acmeBank/transfers }
          shuffle: { key: [/recipient] }
          # Credit the recipient's register balance.
          update: { lambda: typescript }
