$schema: "https://json-schema.org/draft/2020-12/schema"
$defs:
  OCIImage:
    type: string
    enum:
      - "quay.io/coreos/etcd:v3.5"
      - "ghcr.io/estuary/flow:v2.3.4"
      - "ghcr.io/gazette/broker:v1.2.3"
      - "ghcr.io/gazette/broker:v5.6.7"

  AWSAssumeRole:
    type: object
    properties:
      role_arn:
        type: string
      external_id:
        type: string
    required:
      - role_arn
      - external_id

  Deployment:
    type: object
    properties:
      role:
        type: string
        enum:
          - etcd
          - reactor
          - gazette
          - dekaf
          - bastion
      current:
        type: integer
      desired:
        type: integer
      template:
        type: object
        properties:
          zone:
            type: string
          region:
            type: string
          provider:
            type: string
          ami_image_id:
            # AWS machine images
            type: string
          image_name:
            # GCP machine images
            type: string
            enum:
              - "ubuntu-os-cloud/ubuntu-2404-lts-amd64"
              - "ubuntu-os-cloud/ubuntu-2404-lts-arm64"
          instance_type:
            type: string
          location:
            type: string
          vm_size:
            type: string
          os_image:
            # Azure machine images
            type: string
            enum:
              - "ubuntu-2404"
        required:
          - provider
      oci_image:
          $ref: "#/$defs/OCIImage"
      oci_image_override:
          $ref: "#/$defs/OCIImage"
    required:
      - role
      - current
      - desired
      - template
      - oci_image
  DataPlane:
    type: object
    properties:
      fqdn:
        type: string
      name:
        type: string
      builds_root:
        type: string
        const: "gs://estuary-control/builds/"
      deployments:
        type: array
        items:
          $ref: "#/$defs/Deployment"
      gcp_project:
        type: string
        const: "some-gcp-project"
      ssh_subnets:
        type: array
        items:
          type: string
          enum:
            - "12.34.56.78/32"
            - "2600:1234:5000:6000::/128"
      data_buckets:
        type: array
        items:
          type: string
          const: "gs://example-bucket"
      aws_assume_role:
        $ref: "#/$defs/AWSAssumeRole"
      builds_kms_keys:
        type: array
        items:
          type: string
          const: "projects/example/key"
      control_plane_api:
        type: string
        const: "https://example.api/"
    required:
      - fqdn
      - name
      - builds_root
      - deployments
      - gcp_project
      - ssh_subnets
      - data_buckets
      - builds_kms_keys
      - control_plane_api

type: object
properties:
  stack:
    type: object
    properties:
      config:
        type: object
        properties:
          "est-dry-dock:model":
            $ref: "#/$defs/DataPlane"
        required:
          - "est-dry-dock:model"
      encryptedkey:
        type: string
      secretsprovider:
        type: string
        enum:
          - "testing"
          - "passphrase"
    required:
      - config
      - secretsprovider
  status:
    type: string
    enum:
      - Idle
      - SetEncryption
      - PulumiPreview
      - PulumiRefresh
      - PulumiUp1
      - AwaitDNS1
      - Ansible
      - PulumiUp2
      - AwaitDNS2
  logs_token:
    type: string
  stack_name:
    type: string
  last_refresh:
    type: string
  data_plane_id:
    type: string
  deploy_branch:
    type: string
    enum:
      - main
  last_pulumi_up:
    type: string
  private_links:
    type: array
required:
  - stack
  - status
  - logs_token
  - stack_name
  - last_refresh
  - data_plane_id
  - deploy_branch
  - last_pulumi_up
