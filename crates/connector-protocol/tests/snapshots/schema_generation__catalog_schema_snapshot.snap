---
source: crates/connector-protocol/tests/schema_generation.rs
expression: "&generator.root_schema_for::<capture::Request>()"
---
{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "title": "Request",
  "description": "Request is a message written into a capture connector by the Flow runtime.",
  "oneOf": [
    {
      "description": "Spec requests the specification definition of this connector. Notably this includes its endpoint and resource configuration JSON schema.",
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "spec": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Discover returns the set of resources available from this Driver.",
      "type": "object",
      "required": [
        "discover"
      ],
      "properties": {
        "discover": {
          "type": "object",
          "required": [
            "config"
          ],
          "properties": {
            "config": {
              "title": "Connector endpoint configuration."
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Validate a connector configuration and proposed bindings.",
      "type": "object",
      "required": [
        "validate"
      ],
      "properties": {
        "validate": {
          "type": "object",
          "required": [
            "bindings",
            "config",
            "name"
          ],
          "properties": {
            "bindings": {
              "title": "Proposed bindings of the validated capture.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValidateBinding"
              }
            },
            "config": {
              "title": "Connector endpoint configuration."
            },
            "name": {
              "title": "Name of the capture being validated.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Apply a connector configuration and binding specifications.",
      "type": "object",
      "required": [
        "apply"
      ],
      "properties": {
        "apply": {
          "type": "object",
          "required": [
            "bindings",
            "config",
            "dryRun",
            "name",
            "version"
          ],
          "properties": {
            "bindings": {
              "title": "Binding specifications of the applied capture.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApplyBinding"
              }
            },
            "config": {
              "title": "Connector endpoint configuration."
            },
            "dryRun": {
              "title": "Is this application a dry run?",
              "description": "Dry-run applications take no action.",
              "type": "boolean"
            },
            "name": {
              "title": "Name of the capture being applied.",
              "type": "string"
            },
            "version": {
              "title": "Opaque, unique version of this capture application.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Open a capture connector for reading documents from the endpoint. Unless the connector requests explicit acknowledgements, Open is the last message which will be sent to the connector's stdin.",
      "type": "object",
      "required": [
        "open"
      ],
      "properties": {
        "open": {
          "type": "object",
          "required": [
            "bindings",
            "config",
            "driverCheckpoint",
            "intervalSeconds",
            "keyBegin",
            "keyEnd",
            "name",
            "version"
          ],
          "properties": {
            "bindings": {
              "title": "Binding specifications of the opened capture.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApplyBinding"
              }
            },
            "config": {
              "title": "Connector endpoint configuration."
            },
            "driverCheckpoint": {
              "title": "Last-persisted driver checkpoint from a previous capture invocation.",
              "description": "Or empty, if the driver has cleared or never set its checkpoint. Each key-range of the capture has its own durable checkpoint, which is managed by the Flow runtime."
            },
            "intervalSeconds": {
              "title": "Frequency of connector restarts.",
              "description": "Restart intervals are applicable only for captures which poll ready documents from their endpoint and then exit. Unbounded, streaming connectors are restarted only when necessary.",
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "keyBegin": {
              "title": "Beginning key-range which this connector invocation must capture.",
              "description": "[keyBegin, keyEnd] are the inclusive range of keys processed by this connector invocation. Ranges reflect the disjoint chunks of ownership specific to each instance of a scale-out capture.\n\nThe meaning of a \"key\" in this range is up to the connector. For example, captures of a partitioned system (like Kafka or Kinesis) might hash dynamically listed partitions into a 32-bit unsigned integer, and then capture only those which fall within its opened key range.",
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "keyEnd": {
              "title": "Ending key-range which this connector invocation must capture.",
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "name": {
              "title": "Name of the capture being opened.",
              "type": "string"
            },
            "version": {
              "title": "Opaque, unique version of this capture.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Acknowledge to the connector that its checkpoint has committed to the Flow runtime recovery log. Acknowledgments are sent only if requested by the connector in its Opened response, and one Acknowledge is sent for each preceding Checkpoint response of the connector.",
      "type": "object",
      "required": [
        "acknowledge"
      ],
      "properties": {
        "acknowledge": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "ApplyBinding": {
      "description": "A binding specification of the capture.",
      "type": "object",
      "required": [
        "collection",
        "resourceConfig",
        "resourcePath"
      ],
      "properties": {
        "collection": {
          "title": "Collection of this binding.",
          "$ref": "#/definitions/CollectionSpec"
        },
        "resourceConfig": {
          "title": "Resource configuration of this binding."
        },
        "resourcePath": {
          "title": "Resource path which fully qualifies the endpoint resource identified by this binding.",
          "description": "For an RDBMS, this might be [\"my-schema\", \"my-table\"]. For Kafka, this might be [\"my-topic-name\"]. For Redis or DynamoDB, this might be [\"/my/key/prefix\"].",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "CollectionSpec": {
      "description": "Specification of a Flow collection.",
      "type": "object",
      "required": [
        "key",
        "name",
        "partitionFields",
        "projections"
      ],
      "properties": {
        "key": {
          "title": "Composite key of the collection.",
          "description": "Keys are specified as an ordered sequence of JSON-Pointers.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "title": "Name of this collection.",
          "type": "string"
        },
        "partitionFields": {
          "title": "Logically-partitioned fields of this collection.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "projections": {
          "title": "Projections of this collection.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Projection"
          }
        },
        "readSchema": {
          "title": "JSON Schema against which read collection documents are validated.",
          "description": "If set, then writeSchema is also and schema is not."
        },
        "schema": {
          "title": "JSON Schema against which collection documents are validated.",
          "description": "If set, then writeSchema and readSchema are not."
        },
        "writeSchema": {
          "title": "JSON Schema against which written collection documents are validated.",
          "description": "If set, then readSchema is also and schema is not."
        }
      },
      "additionalProperties": false
    },
    "Exists": {
      "description": "Enumeration which describes what's known about a location's existence documents of the schema.",
      "type": "string",
      "enum": [
        "Must",
        "May",
        "Implicit",
        "Cannot"
      ]
    },
    "Inference": {
      "description": "Static inference over this document location, extracted from a JSON Schema.",
      "type": "object",
      "required": [
        "default",
        "description",
        "exists",
        "secret",
        "title",
        "types"
      ],
      "properties": {
        "default": {
          "description": "The default value from the schema, or \"null\" if there is no default."
        },
        "description": {
          "description": "The description from the schema, if provided.",
          "type": "string"
        },
        "exists": {
          "description": "Existence of this document location.",
          "$ref": "#/definitions/Exists"
        },
        "secret": {
          "description": "Whether this location is marked as a secret, like a credential or password.",
          "type": "boolean"
        },
        "string": {
          "description": "String type-specific inferences, or null iff types doesn't include \"string\".",
          "$ref": "#/definitions/StringInference"
        },
        "title": {
          "description": "The title from the schema, if provided.",
          "type": "string"
        },
        "types": {
          "description": "The possible types for this location. Subset of: [\"null\", \"boolean\", \"object\", \"array\", \"integer\", \"numeric\", \"string\"].",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "Projection": {
      "description": "Projections are named locations within a collection document which may be used for logical partitioning, or may be mapped into a tabular representation such as a SQL database table.",
      "type": "object",
      "required": [
        "explicit",
        "field",
        "inference",
        "isPartitionKey",
        "isPrimaryKey",
        "ptr"
      ],
      "properties": {
        "explicit": {
          "title": "Was this projection explicitly provided ?",
          "description": "(As opposed to implicitly created through static analysis of the schema).",
          "type": "boolean"
        },
        "field": {
          "title": "Flattened, tabular alias of this projection.",
          "description": "A field may correspond to a SQL table column, for example.",
          "type": "string"
        },
        "inference": {
          "title": "Inference of this projection.",
          "$ref": "#/definitions/Inference"
        },
        "isPartitionKey": {
          "title": "Does this projection constitute a logical partitioning of the collection?",
          "type": "boolean"
        },
        "isPrimaryKey": {
          "title": "Does this location form (part of) the collection key?",
          "type": "boolean"
        },
        "ptr": {
          "title": "Document location of this projection, as a JSON-Pointer.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "StringInference": {
      "description": "Static inference over a document location of type \"string\", extracted from a JSON schema.",
      "type": "object",
      "required": [
        "contentEncoding",
        "contentType",
        "format",
        "isBase64",
        "maxLength"
      ],
      "properties": {
        "contentEncoding": {
          "title": "Annotated Content-Encoding when the projection is of \"string\" type.",
          "type": "string"
        },
        "contentType": {
          "title": "Annotated Content-Type when the projection is of \"string\" type.",
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "isBase64": {
          "title": "Is the Content-Encoding \"base64\" (case-invariant)?",
          "type": "boolean"
        },
        "maxLength": {
          "title": "Maximum length when the projection is of \"string\" type.",
          "description": "Zero for no limit.",
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        }
      },
      "additionalProperties": false
    },
    "ValidateBinding": {
      "description": "A proposed binding of the capture to validate.",
      "type": "object",
      "required": [
        "collection",
        "resourceConfig"
      ],
      "properties": {
        "collection": {
          "title": "Collection of the proposed binding.",
          "$ref": "#/definitions/CollectionSpec"
        },
        "resourceConfig": {
          "title": "Resource configuration of the proposed binding."
        }
      },
      "additionalProperties": false
    }
  }
}
