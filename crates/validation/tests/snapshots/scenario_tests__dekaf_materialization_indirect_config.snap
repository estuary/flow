---
source: crates/validation/tests/scenario_tests.rs
assertion_line: 68
expression: outcome
---
Outcome {
    built_captures: [],
    built_collections: [],
    built_materializations: [
        BuiltMaterialization {
            materialization: good,
            scope: test://example/catalog.yaml#/materializations/good,
            control_id: "0000000000000000",
            data_plane_id: "1d1d1d1d1d1d1d1d",
            expect_pub_id: "0000000000000000",
            expect_build_id: "0000000000000000",
            model: {
              "endpoint": {
                "dekaf": {
                  "variant": "foo",
                  "config": {"strict_topic_names":false}
                }
              },
              "bindings": []
            },
            validated: Validated {
                bindings: [],
            },
            spec: MaterializationSpec {
                name: "good",
                connector_type: Dekaf,
                config_json: "{\"variant\":\"foo\",\"config\":{\"strict_topic_names\":false}}",
                bindings: [],
                shard_template: Some(
                    ShardSpec {
                        id: "materialize/good/2020202020202020",
                        sources: [],
                        recovery_log_prefix: "recovery",
                        hint_prefix: "/estuary/flow/hints",
                        hint_backups: 2,
                        max_txn_duration: Some(
                            Duration {
                                seconds: 300,
                                nanos: 0,
                            },
                        ),
                        min_txn_duration: Some(
                            Duration {
                                seconds: 0,
                                nanos: 0,
                            },
                        ),
                        disable: false,
                        hot_standbys: 0,
                        labels: Some(
                            LabelSet {
                                labels: [
                                    Label {
                                        name: "app.gazette.dev/managed-by",
                                        value: "estuary.dev/flow",
                                        prefix: false,
                                    },
                                    Label {
                                        name: "estuary.dev/build",
                                        value: "2121212121212121",
                                        prefix: false,
                                    },
                                    Label {
                                        name: "estuary.dev/log-level",
                                        value: "info",
                                        prefix: false,
                                    },
                                    Label {
                                        name: "estuary.dev/task-name",
                                        value: "good",
                                        prefix: false,
                                    },
                                    Label {
                                        name: "estuary.dev/task-type",
                                        value: "materialization",
                                        prefix: false,
                                    },
                                ],
                            },
                        ),
                        disable_wait_for_ack: false,
                        ring_buffer_size: 65536,
                        read_channel_size: 4096,
                    },
                ),
                recovery_log_template: Some(
                    JournalSpec {
                        name: "recovery/materialize/good/2020202020202020",
                        replication: 3,
                        labels: Some(
                            LabelSet {
                                labels: [
                                    Label {
                                        name: "app.gazette.dev/managed-by",
                                        value: "estuary.dev/flow",
                                        prefix: false,
                                    },
                                    Label {
                                        name: "content-type",
                                        value: "application/x-gazette-recoverylog",
                                        prefix: false,
                                    },
                                    Label {
                                        name: "estuary.dev/build",
                                        value: "2121212121212121",
                                        prefix: false,
                                    },
                                    Label {
                                        name: "estuary.dev/task-name",
                                        value: "good",
                                        prefix: false,
                                    },
                                    Label {
                                        name: "estuary.dev/task-type",
                                        value: "materialization",
                                        prefix: false,
                                    },
                                ],
                            },
                        ),
                        fragment: Some(
                            Fragment {
                                length: 268435456,
                                compression_codec: Snappy,
                                stores: [
                                    "s3://a-bucket/",
                                ],
                                refresh_interval: Some(
                                    Duration {
                                        seconds: 300,
                                        nanos: 0,
                                    },
                                ),
                                retention: None,
                                flush_interval: None,
                                path_postfix_template: "",
                            },
                        ),
                        flags: 4,
                        max_append_rate: 4194304,
                    },
                ),
                network_ports: [],
            },
            previous_spec: NULL,
            is_touch: 0,
            dependency_hash: NULL,
        },
    ],
    built_tests: [],
    captures: [],
    collections: [],
    errors: [],
    errors_draft: [],
    fetches: [
        Fetch {
            depth: 1,
            resource: test://example/catalog.yaml,
        },
        Fetch {
            depth: 2,
            resource: test://example/dekaf.yaml,
        },
    ],
    imports: [],
    materializations: [
        DraftMaterialization {
            materialization: good,
            scope: test://example/catalog.yaml#/materializations/good,
            expect_pub_id: NULL,
            model: {
              "endpoint": {
                "dekaf": {
                  "variant": "foo",
                  "config": {"strict_topic_names":false}
                }
              },
              "bindings": []
            },
            is_touch: 0,
        },
    ],
    resources: [
        Resource {
            resource: test://example/catalog.yaml,
            content_type: "CATALOG",
            content: ".. binary ..",
            content_dom: {"materializations":{"good":{"bindings":[],"endpoint":{"dekaf":{"config":"test://example/dekaf.yaml","variant":"foo"}}}}},
        },
        Resource {
            resource: test://example/dekaf.yaml,
            content_type: "CONFIG",
            content: ".. binary ..",
            content_dom: {"strict_topic_names":false},
        },
    ],
    storage_mappings: [
        StorageMapping {
            catalog_prefix: ,
            control_id: "0000000000000000",
            stores: [
              {
                "provider": "S3",
                "bucket": "a-bucket",
                "prefix": null,
                "region": null
              }
            ],
        },
    ],
    tests: [],
}
