---
source: crates/validation/tests/scenario_tests.rs
assertion_line: 125
expression: outcome
---
Outcome {
    built_captures: [],
    built_collections: [],
    built_materializations: [],
    built_tests: [],
    captures: [],
    collections: [],
    errors: [
        Error {
            scope: test://example/catalog.yaml#/materializations/bad,
            error: driver fixture not found: bad,
        },
    ],
    errors_draft: [
        Error {
            scope: test://example/catalog.yaml#/materializations/bad/endpoint/dekaf/config,
            error: failed to fetch resource test://example/foo/bar: fixture not found,
        },
    ],
    fetches: [
        Fetch {
            depth: 1,
            resource: test://example/catalog.yaml,
        },
        Fetch {
            depth: 2,
            resource: test://example/foo/bar,
        },
    ],
    imports: [
        Import {
            scope: test://example/catalog.yaml#/materializations/bad/endpoint/dekaf/config,
            to_resource: test://example/foo/bar,
        },
    ],
    materializations: [
        DraftMaterialization {
            materialization: bad,
            scope: test://example/catalog.yaml#/materializations/bad,
            expect_pub_id: NULL,
            model: {
              "endpoint": {
                "dekaf": {
                  "variant": "bar",
                  "config": "test://example/foo/bar"
                }
              },
              "bindings": []
            },
            is_touch: 0,
        },
    ],
    resources: [
        Resource {
            resource: test://example/catalog.yaml,
            content_type: "CATALOG",
            content: ".. binary ..",
            content_dom: {"materializations":{"bad":{"bindings":[],"endpoint":{"dekaf":{"config":"foo/bar","variant":"bar"}}}}},
        },
    ],
    storage_mappings: [
        StorageMapping {
            catalog_prefix: ,
            control_id: "0000000000000000",
            stores: [
              {
                "provider": "S3",
                "bucket": "a-bucket",
                "prefix": null,
                "region": null
              }
            ],
        },
    ],
    tests: [],
}
