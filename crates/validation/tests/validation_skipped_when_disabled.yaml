test://example/catalog.yaml:
  collections:
    acmeCo/foo:
      schema:
        type: object
        properties:
          id: {type: integer}
          val: {type: string}
        required: [id, val]
      key: [/id]
  captures:
    acmeCo/testCapture:
      shards:
        disable: true
      endpoint:
        connector:
          image: someSourceImage
          config:
            any: thing
      bindings:
        - resource: { whatever: 'and ever' }
          target: acmeCo/foo
  materializations:
    acmeCo/testMaterialization:
      shards:
        disable: true
      endpoint:
        connector:
          image: someMaterializationImage
          config:
            any: thing
      bindings:
        - resource: { whatever: 'and ever' }
          source: acmeCo/foo
  storageMappings:
    acmeCo/:
      stores: [{ provider: S3, bucket: data-bucket }]
    recovery/acmeCo/:
      stores: [{ provider: S3, bucket: data-bucket }]

driver:
  materializations:
    acmeCo/testMaterialization:
      endpoint: FLOW_SINK
      spec:
        image: someMaterializationImage
        config: { any: thing }
      deltaUpdates: true
      error: Validate should never be called
      bindings:
        - constraints:
            id: {type: 0, reason: 'field required'}
            val: {type: 0, reason: 'field required'}
          resourcePath: [mockPath]

  captures:
    acmeCo/testCapture:
      endpoint: AIRBYTE_SOURCE
      error: Validate should never be called
      spec:
        image: someCaptureImage
        config: { any: thing }
      bindings:
        - resourcePath: [mockPath]
