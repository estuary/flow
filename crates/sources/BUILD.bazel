load("@rules_rust//rust:defs.bzl", "rust_library", "rust_test")

rust_library(
    name = "sources",
    srcs = glob(
        include = ["src/**/*.rs"],
        exclude = [],
    ),
    compile_data = glob(["src/**/*.yaml", "src/**/*.snap"]),
    crate_root = "src/lib.rs",
    edition = "2024",
    visibility = ["//visibility:public"],
    deps = [
        "//crates/doc",
        "//crates/json",
        "//crates/models",
        "//crates/proto-flow",
        "//crates/tables",
        "@crates_io//:anyhow",
        "@crates_io//:bytes",
        "@crates_io//:futures",
        "@crates_io//:md5",
        "@crates_io//:schemars",
        "@crates_io//:serde",
        "@crates_io//:serde-transcode",
        "@crates_io//:serde_json",
        "@crates_io//:serde_yaml",
        "@crates_io//:superslice",
        "@crates_io//:thiserror",
        "@crates_io//:tracing",
        "@crates_io//:url",
        "@crates_io//:yaml-merge-keys",
    ],
)

rust_test(
    name = "sources_lib_test",
    crate = ":sources",
    edition = "2024",
    data = glob(["src/**/snapshots/*.snap", "tests/**/snapshots/*.snap"]),
    env = {
        "INSTA_WORKSPACE_ROOT": ".",
    },
    deps = [
        "@crates_io//:insta",
    ],
)
