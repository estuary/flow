---
source: crates/sources/src/bundle_schema.rs
expression: "serde_json::json!(bundle_docs)"
---
testing/five:
  $defs:
    __flowInline1:
      $defs:
        nested:
          properties:
            something:
              const: something
      $id: "test://example/schema.B"
      allOf:
        - $ref: "test://example/schema.A"
        - $ref: "#/$defs/nested"
    __flowInline2:
      $id: "test://example/schema.A"
      properties:
        foo:
          $ref: "test://external/Canonical"
        int:
          type: integer
      required:
        - int
      type: object
    __flowInline3:
      $defs:
        inner:
          $anchor: Anchor
          format: email
          type: string
      $id: "test://external/Canonical"
      $ref: "Canonical#Anchor"
    expect-this-is-merged: true
  $id: "test://example/catalog.yaml?ptr=/collections/testing~1five/schema"
  $ref: schema.B
  description: hello!
testing/four:
  $id: "test://example/catalog.yaml?ptr=/collections/testing~1four/schema"
  properties:
    str:
      type: string
  required:
    - str
  type: object
testing/one:
  $defs:
    __flowInline1:
      $defs:
        inner:
          $anchor: Anchor
          format: email
          type: string
      $id: "test://external/Canonical"
      $ref: "Canonical#Anchor"
  $id: "test://example/schema.A"
  properties:
    foo:
      $ref: "test://external/Canonical"
    int:
      type: integer
  required:
    - int
  type: object
testing/six:
  $id: "test://external/ActualCanonicalURI"
  properties:
    some:
      const: stuff
  type: object
testing/three:
  $defs:
    __flowInline1:
      $defs:
        nested:
          properties:
            something:
              const: something
      $id: "test://example/schema.B"
      allOf:
        - $ref: "test://example/schema.A"
        - $ref: "#/$defs/nested"
    __flowInline2:
      $id: "test://example/schema.A"
      properties:
        foo:
          $ref: "test://external/Canonical"
        int:
          type: integer
      required:
        - int
      type: object
    __flowInline3:
      $defs:
        inner:
          $anchor: Anchor
          format: email
          type: string
      $id: "test://external/Canonical"
      $ref: "Canonical#Anchor"
  $id: "test://example/catalog.yaml?ptr=/collections/testing~1three/schema"
  $ref: "schema.B#/allOf/0"
testing/two:
  $defs:
    __flowInline1:
      $id: "test://example/schema.A"
      properties:
        foo:
          $ref: "test://external/Canonical"
        int:
          type: integer
      required:
        - int
      type: object
    __flowInline2:
      $defs:
        inner:
          $anchor: Anchor
          format: email
          type: string
      $id: "test://external/Canonical"
      $ref: "Canonical#Anchor"
    nested:
      properties:
        something:
          const: something
  $id: "test://example/schema.B"
  allOf:
    - $ref: "test://example/schema.A"
    - $ref: "#/$defs/nested"

