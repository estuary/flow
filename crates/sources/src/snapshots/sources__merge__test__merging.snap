---
source: crates/sources/src/merge.rs
expression: target
---
DraftCatalog {
    captures: [
        DraftCapture {
            capture: acmeCo/captures/exists,
            scope: test://example/catalog.yaml#/captures/acmeCo~1captures~1exists,
            expect_pub_id: "88:66:77:55:33:00:99:00",
            model: {
              "endpoint": {
                "connector": {
                  "image": "an/image",
                  "config": ["updated"]
                }
              },
              "bindings": []
            },
        },
        DraftCapture {
            capture: acmeCo/one/new,
            scope: test://example/acmeCo/one/flow.yaml#/captures/acmeCo~1one~1new,
            expect_pub_id: NULL,
            model: {
              "endpoint": {
                "connector": {
                  "image": "other/image",
                  "config": 42
                }
              },
              "bindings": []
            },
        },
    ],
    collections: [
        DraftCollection {
            collection: acmeCo/collections/exists,
            scope: test://example/catalog.yaml#/collections/acmeCo~1collections~1exists,
            expect_pub_id: "11:00:22:00:33:00:44:00",
            model: {
              "schema": {"const":["updated-value"]},
              "key": [
                "/int"
              ]
            },
        },
        DraftCollection {
            collection: acmeCo/one/new,
            scope: test://example/acmeCo/one/flow.yaml#/collections/acmeCo~1one~1new,
            expect_pub_id: NULL,
            model: {
              "schema": true,
              "key": [
                "/int"
              ]
            },
        },
    ],
    errors: [],
    fetches: [
        Fetch {
            depth: 1,
            resource: test://example/catalog.yaml,
        },
        Fetch {
            depth: 2,
            resource: test://example/acmeCo/flow.yaml,
        },
    ],
    imports: [
        Import {
            scope: test://example/acmeCo/flow.yaml#/import/-,
            to_resource: test://example/acmeCo/one/flow.yaml,
        },
        Import {
            scope: test://example/acmeCo/flow.yaml#/import/-,
            to_resource: test://example/acmeCo/two/flow.yaml,
        },
        Import {
            scope: test://example/catalog.yaml#/import/-,
            to_resource: test://example/acmeCo/flow.yaml,
        },
        Import {
            scope: test://example/catalog.yaml#/import/0,
            to_resource: test://example/acmeCo/flow.yaml,
        },
    ],
    materializations: [
        DraftMaterialization {
            materialization: acmeCo/materializations/exists,
            scope: test://example/catalog.yaml#/materializations/acmeCo~1materializations~1exists,
            expect_pub_id: NULL,
            model: {
              "endpoint": {
                "connector": {
                  "image": "an/image",
                  "config": ["also-updated"]
                }
              },
              "bindings": []
            },
        },
        DraftMaterialization {
            materialization: acmeCo/two/new,
            scope: test://example/acmeCo/two/flow.yaml#/materializations/acmeCo~1two~1new,
            expect_pub_id: NULL,
            model: {
              "endpoint": {
                "connector": {
                  "image": "an/image",
                  "config": 42
                }
              },
              "bindings": []
            },
        },
    ],
    resources: [
        Resource {
            resource: test://example/acmeCo/flow.yaml,
            content_type: "CATALOG",
            content: ".. binary ..",
            content_dom: {"import":["one/flow.yaml","two/flow.yaml"]},
        },
        Resource {
            resource: test://example/acmeCo/one/flow.yaml,
            content_type: "CATALOG",
            content: ".. binary ..",
            content_dom: {"captures":{"acmeCo/one/new":{"endpoint":{"connector":{"image":"other/image","config":42}},"bindings":[]}},"collections":{"acmeCo/one/new":{"schema":true,"key":["/int"]}}},
        },
        Resource {
            resource: test://example/acmeCo/two/flow.yaml,
            content_type: "CATALOG",
            content: ".. binary ..",
            content_dom: {"materializations":{"acmeCo/two/new":{"endpoint":{"connector":{"image":"an/image","config":42}},"bindings":[]}},"tests":{"acmeCo/two/new":{"steps":[],"expectPubId":"00:00:11:00:22:00:00:33"}}},
        },
        Resource {
            resource: test://example/catalog.yaml,
            content_type: "CATALOG",
            content: ".. binary ..",
            content_dom: {"import":["acmeCo/flow.yaml"],"captures":{"acmeCo/captures/exists":{"endpoint":{"connector":{"image":"an/image","config":["updated"]}},"bindings":[],"expectPubId":"88:66:77:55:33:00:99:00"}},"collections":{"acmeCo/collections/exists":{"schema":{"const":["updated-value"]},"key":["/int"],"expectPubId":"11:00:22:00:33:00:44:00"}},"materializations":{"acmeCo/materializations/exists":{"endpoint":{"connector":{"image":"an/image","config":["also-updated"]}},"bindings":[]}},"tests":{"acmeCo/tests/exists":{"steps":[]}}},
        },
    ],
    tests: [
        DraftTest {
            test: acmeCo/tests/exists,
            scope: test://example/catalog.yaml#/tests/acmeCo~1tests~1exists,
            expect_pub_id: NULL,
            model: {
              "steps": []
            },
        },
        DraftTest {
            test: acmeCo/two/new,
            scope: test://example/acmeCo/two/flow.yaml#/tests/acmeCo~1two~1new,
            expect_pub_id: "00:00:11:00:22:00:00:33",
            model: {
              "steps": []
            },
        },
    ],
}
