test://example/catalog.yaml:
  captures:
    first/capture:
      endpoint:
        connector:
          image: an/image
          config:
            bucket: foobar
            prefix: path/prefix
      # Use default interval.
      bindings:
        - target: a/collection
          resource: { stream: "contents" }
        - target: other/collection
          resource: { extra: "stuff" }

    capture/second:
      endpoint:
        connector:
          image: another/image
          config: referenced/config.yaml
      interval: 3m
      bindings:
        - target: third/collection
          resource: referenced/resource.yaml
      shards:
        maxTxnDuration: 30s
        logLevel: debug

    capture/config-missing:
      endpoint:
        connector:
          image: another/image
          config: config/not/found.yaml
      bindings:
        - target: some/collection
          resource: resource/not/found.yaml

    capture/config-raw:
      endpoint:
        connector:
          image: another/image
          config: raw-config.foo
      bindings: []

    capture/local:
      endpoint:
        local:
          command: [do-the-thing, --arg=one, --arg, two]
          config:
            some: local config
      bindings: []

  materializations:
    a/materialization:
      sourceCapture: a/capture
      endpoint:
        connector:
          image: materialization/image
          config:
            its: config
      bindings:
        # No partition selector and default fields behavior.
        - source: source/collection
          resource: { table: "table_one" }
        # Explicit selector and fields.
        - source:
            name: other/source/collection
            partitions:
              include: { "a_field": ["some-val"] }
              exclude: { "other": [42] }
          resource: { table: "table_two" }
          fields:
            include:
              add: {}
            exclude: [del]
            recommended: true

    materialization/with-config:
      endpoint:
        connector:
          image: materialization/another:image
          config: referenced/config.yaml
      bindings:
        - source: some/source/collection
          resource: referenced/resource.yaml

    materialization/with-config-fragment:
      endpoint:
        connector:
          image: materialization/another:image
          config: referenced/config.yaml#/bad/fragment
      bindings: []

    materialization/missing-config:
      endpoint:
        connector:
          image: materialization/image
          config: config/not/found.yaml
      bindings:
        - source: other/source/collection
          resource: referenced/not/found.yaml

    materialization/local:
      endpoint:
        local:
          command: [do-the-thing, --arg=one, --arg, two]
          config:
            some: local config
      bindings:
        - source: final/source/collection
          resource: { table: "table_three" }
      shards:
        ringBufferSize: 12345

test://example/referenced/config.yaml:
  referenced: config that's fairly long and does not inline

test://example/referenced/resource.yaml:
  referenced: resource that's fairly long and does not inline

test://example/raw-config.foo: |
  fn main() {
    do_the_thing();
    do_another_really_long_thing_that_does_stuff_boy_this_is_running_on_huh()?;
  }
