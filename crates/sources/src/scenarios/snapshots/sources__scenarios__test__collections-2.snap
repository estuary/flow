---
source: crates/sources/src/scenarios/mod.rs
expression: tables
---
DraftCatalog {
    collections: [
        DraftCollection {
            collection: test/collection,
            scope: test://example/catalog.yaml#/collections/test~1collection,
            expect_pub_id: "0011223344556677",
            model: {
              "schema": {"$anchor":"foobar","$id":"test://example/schema.json","properties":{"a":{"properties":{"a":{"type":"string"}},"type":"object"},"b":{"properties":{"b":{"type":"string"}},"type":"object"},"key":{"items":{"type":"string"},"minItems":2,"type":"array"}},"type":"object"},
              "key": [
                "/key/1",
                "/key/0"
              ],
              "projections": {
                "field_a": {
                  "location": "/a/a",
                  "partition": true
                },
                "field_b": {
                  "location": "/b/b",
                  "partition": false
                }
              }
            },
            is_touch: 0,
        },
        DraftCollection {
            collection: test/collection-no-schema,
            scope: test://example/catalog.yaml#/collections/test~1collection-no-schema,
            expect_pub_id: NULL,
            model: {
              "key": [
                "/key"
              ]
            },
            is_touch: 0,
        },
        DraftCollection {
            collection: test/collection-with-write-and-inferred-read,
            scope: test://example/catalog.yaml#/collections/test~1collection-with-write-and-inferred-read,
            expect_pub_id: NULL,
            model: {
              "writeSchema": {"$anchor":"foobar","$id":"test://example/schema.json","properties":{"a":{"properties":{"a":{"type":"string"}},"type":"object"},"b":{"properties":{"b":{"type":"string"}},"type":"object"},"key":{"items":{"type":"string"},"minItems":2,"type":"array"}},"type":"object"},
              "readSchema": {"$id":"test://example/catalog.yaml?ptr=/collections/test~1collection-with-write-and-inferred-read/readSchema","allOf":[{"$ref":"flow://write-schema"},{"$ref":"flow://inferred-schema"}]},
              "key": [
                "/key/1",
                "/key/0"
              ]
            },
            is_touch: 0,
        },
        DraftCollection {
            collection: test/collection-with-write-and-read,
            scope: test://example/catalog.yaml#/collections/test~1collection-with-write-and-read,
            expect_pub_id: NULL,
            model: {
              "writeSchema": {"$anchor":"foobar","$id":"test://example/schema.json","properties":{"a":{"properties":{"a":{"type":"string"}},"type":"object"},"b":{"properties":{"b":{"type":"string"}},"type":"object"},"key":{"items":{"type":"string"},"minItems":2,"type":"array"}},"type":"object"},
              "readSchema": {"$defs":{"__flowInline1":{"$anchor":"foobar","$id":"test://example/schema.json","properties":{"a":{"properties":{"a":{"type":"string"}},"type":"object"},"b":{"properties":{"b":{"type":"string"}},"type":"object"},"key":{"items":{"type":"string"},"minItems":2,"type":"array"}},"type":"object"}},"$id":"test://example/catalog.yaml?ptr=/collections/test~1collection-with-write-and-read/readSchema","$ref":"schema.json#/properties/a"},
              "key": [
                "/key/1",
                "/key/0"
              ]
            },
            is_touch: 0,
        },
        DraftCollection {
            collection: test/collection/with-journals,
            scope: test://example/catalog.yaml#/collections/test~1collection~1with-journals,
            expect_pub_id: NULL,
            model: {
              "schema": {"$defs":{"__flowInline1":{"$anchor":"foobar","$id":"test://example/schema.json","properties":{"a":{"properties":{"a":{"type":"string"}},"type":"object"},"b":{"properties":{"b":{"type":"string"}},"type":"object"},"key":{"items":{"type":"string"},"minItems":2,"type":"array"}},"type":"object"}},"$id":"test://example/catalog.yaml?ptr=/collections/test~1collection~1with-journals/schema","$ref":"schema.json#foobar"},
              "key": [
                "/a/key"
              ],
              "journals": {
                "fragments": {
                  "length": 12345,
                  "compressionCodec": "GZIP_OFFLOAD_DECOMPRESSION",
                  "retention": "13days 8h",
                  "flushInterval": "15m"
                }
              }
            },
            is_touch: 0,
        },
    ],
}
