---
source: crates/sources/src/scenarios/mod.rs
expression: tables
---
Sources {
    captures: [],
    collections: [
        Collection {
            scope: test://example/catalog.yaml#/collections/a~1collection,
            collection: a/collection,
            spec: {
              "schema": "test://example/schema",
              "key": [
                "/key"
              ],
              "projections": {
                "baz": {
                  "location": "/bing",
                  "partition": true
                },
                "foo": "/bar"
              }
            },
        },
    ],
    errors: [
        Error {
            scope: test://example/catalog.yaml#/import/1,
            error: failed to fetch resource test://example/sibling#/bad/fragment
            
            Caused by:
                resources cannot have fragments,
        },
        Error {
            scope: test://example/catalog.yaml#/import/2,
            error: failed to fetch resource test://not/found
            
            Caused by:
                fixture not found,
        },
    ],
    fetches: [
        Fetch {
            depth: 1,
            resource: test://example/catalog.yaml,
        },
        Fetch {
            depth: 2,
            resource: test://example/schema,
        },
        Fetch {
            depth: 2,
            resource: test://example/sibling,
        },
        Fetch {
            depth: 2,
            resource: test://not/found,
        },
    ],
    imports: [
        Import {
            scope: test://example/catalog.yaml#/collections/a~1collection/schema,
            to_resource: test://example/schema,
        },
        Import {
            scope: test://example/catalog.yaml#/import/0,
            to_resource: test://example/sibling,
        },
        Import {
            scope: test://example/catalog.yaml#/import/1,
            to_resource: test://example/sibling#/bad/fragment,
        },
        Import {
            scope: test://example/catalog.yaml#/import/2,
            to_resource: test://not/found,
        },
    ],
    materializations: [],
    resources: [
        Resource {
            resource: test://example/catalog.yaml,
            content_type: "CATALOG",
            content: ".. binary ..",
            content_dom: {"collections":{"a/collection":{"key":["/key"],"projections":{"baz":{"location":"/bing","partition":true},"foo":"/bar"},"schema":"test://example/schema"}},"import":["sibling","sibling#/bad/fragment","test://not/found"]},
        },
        Resource {
            resource: test://example/schema,
            content_type: "JSON_SCHEMA",
            content: ".. binary ..",
            content_dom: true,
        },
        Resource {
            resource: test://example/sibling,
            content_type: "CATALOG",
            content: ".. binary ..",
            content_dom: {},
        },
    ],
    storage_mappings: [],
    tests: [],
}
