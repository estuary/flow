---
source: crates/sources/src/scenarios/mod.rs
expression: tables
---
DraftCatalog {
    captures: [
        DraftCapture {
            capture: capture/config-missing,
            scope: test://example/catalog.yaml#/captures/capture~1config-missing,
            expect_pub_id: NULL,
            model: {
              "endpoint": {
                "connector": {
                  "image": "another/image",
                  "config": "test://example/config/not/found.yaml"
                }
              },
              "bindings": [
                {
                  "resource": "test://example/resource/not/found.yaml",
                  "target": "some/collection",
                  "backfill": 2
                }
              ]
            },
            is_touch: 0,
        },
        DraftCapture {
            capture: capture/config-raw,
            scope: test://example/catalog.yaml#/captures/capture~1config-raw,
            expect_pub_id: NULL,
            model: {
              "endpoint": {
                "connector": {
                  "image": "another/image",
                  "config": "fn main() {\n  do_the_thing();\n  do_another_really_long_thing_that_does_stuff_boy_this_is_running_on_huh()?;\n}\n"
                }
              },
              "bindings": []
            },
            is_touch: 0,
        },
        DraftCapture {
            capture: capture/local,
            scope: test://example/catalog.yaml#/captures/capture~1local,
            expect_pub_id: NULL,
            model: {
              "endpoint": {
                "local": {
                  "command": [
                    "do-the-thing",
                    "--arg=one",
                    "--arg",
                    "two"
                  ],
                  "config": {"some":"local config"}
                }
              },
              "bindings": []
            },
            is_touch: 0,
        },
        DraftCapture {
            capture: capture/second,
            scope: test://example/catalog.yaml#/captures/capture~1second,
            expect_pub_id: "0011223344556677",
            model: {
              "endpoint": {
                "connector": {
                  "image": "another/image",
                  "config": {"referenced":"config that's fairly long and does not inline"}
                }
              },
              "bindings": [
                {
                  "resource": {"referenced":"resource that's fairly long and does not inline"},
                  "target": "third/collection"
                }
              ],
              "interval": "3m",
              "shards": {
                "maxTxnDuration": "30s",
                "logLevel": "debug"
              }
            },
            is_touch: 0,
        },
        DraftCapture {
            capture: first/capture,
            scope: test://example/catalog.yaml#/captures/first~1capture,
            expect_pub_id: NULL,
            model: {
              "endpoint": {
                "connector": {
                  "image": "an/image",
                  "config": {"bucket":"foobar","prefix":"path/prefix"}
                }
              },
              "bindings": [
                {
                  "resource": {"stream":"contents"},
                  "target": "a/collection"
                },
                {
                  "resource": {"extra":"stuff"},
                  "target": "other/collection",
                  "backfill": 1
                }
              ]
            },
            is_touch: 0,
        },
    ],
    materializations: [
        DraftMaterialization {
            materialization: a/materialization,
            scope: test://example/catalog.yaml#/materializations/a~1materialization,
            expect_pub_id: "0011223344556677",
            model: {
              "source": "a/capture",
              "endpoint": {
                "connector": {
                  "image": "materialization/image",
                  "config": {"its":"config"}
                }
              },
              "bindings": [
                {
                  "resource": {"table":"table_one"},
                  "source": "source/collection",
                  "fields": {
                    "recommended": true
                  }
                },
                {
                  "resource": {"table":"table_two"},
                  "source": {
                    "name": "other/source/collection",
                    "partitions": {
                      "include": {
                        "a_field": [
                          "some-val"
                        ]
                      },
                      "exclude": {
                        "other": [
                          42
                        ]
                      }
                    }
                  },
                  "fields": {
                    "require": {
                      "add": {}
                    },
                    "exclude": [
                      "del"
                    ],
                    "recommended": true
                  }
                }
              ]
            },
            is_touch: 0,
        },
        DraftMaterialization {
            materialization: materialization/local,
            scope: test://example/catalog.yaml#/materializations/materialization~1local,
            expect_pub_id: NULL,
            model: {
              "endpoint": {
                "local": {
                  "command": [
                    "do-the-thing",
                    "--arg=one",
                    "--arg",
                    "two"
                  ],
                  "config": {"some":"local config"}
                }
              },
              "bindings": [
                {
                  "resource": {"table":"table_three"},
                  "source": "final/source/collection",
                  "fields": {
                    "recommended": true
                  }
                }
              ],
              "shards": {
                "ringBufferSize": 12345
              }
            },
            is_touch: 0,
        },
        DraftMaterialization {
            materialization: materialization/missing-config,
            scope: test://example/catalog.yaml#/materializations/materialization~1missing-config,
            expect_pub_id: NULL,
            model: {
              "endpoint": {
                "connector": {
                  "image": "materialization/image",
                  "config": "test://example/config/not/found.yaml"
                }
              },
              "bindings": [
                {
                  "resource": "test://example/referenced/not/found.yaml",
                  "source": "other/source/collection",
                  "fields": {
                    "recommended": true
                  }
                }
              ]
            },
            is_touch: 0,
        },
        DraftMaterialization {
            materialization: materialization/with-config,
            scope: test://example/catalog.yaml#/materializations/materialization~1with-config,
            expect_pub_id: NULL,
            model: {
              "endpoint": {
                "connector": {
                  "image": "materialization/another:image",
                  "config": {"referenced":"config that's fairly long and does not inline"}
                }
              },
              "bindings": [
                {
                  "resource": {"referenced":"resource that's fairly long and does not inline"},
                  "source": "some/source/collection",
                  "fields": {
                    "recommended": true
                  },
                  "backfill": 3
                }
              ]
            },
            is_touch: 0,
        },
        DraftMaterialization {
            materialization: materialization/with-config-fragment,
            scope: test://example/catalog.yaml#/materializations/materialization~1with-config-fragment,
            expect_pub_id: NULL,
            model: {
              "endpoint": {
                "connector": {
                  "image": "materialization/another:image",
                  "config": "test://example/referenced/config.yaml#/bad/fragment"
                }
              },
              "bindings": []
            },
            is_touch: 0,
        },
    ],
    imports: [
        Import {
            scope: test://example/catalog.yaml#/captures/capture~1config-missing/bindings/0/resource,
            to_resource: test://example/resource/not/found.yaml,
        },
        Import {
            scope: test://example/catalog.yaml#/captures/capture~1config-missing/endpoint/connector/config,
            to_resource: test://example/config/not/found.yaml,
        },
        Import {
            scope: test://example/catalog.yaml#/materializations/materialization~1missing-config/bindings/0/resource,
            to_resource: test://example/referenced/not/found.yaml,
        },
        Import {
            scope: test://example/catalog.yaml#/materializations/materialization~1missing-config/endpoint/connector/config,
            to_resource: test://example/config/not/found.yaml,
        },
        Import {
            scope: test://example/catalog.yaml#/materializations/materialization~1with-config-fragment/endpoint/connector/config,
            to_resource: test://example/referenced/config.yaml#/bad/fragment,
        },
    ],
}
