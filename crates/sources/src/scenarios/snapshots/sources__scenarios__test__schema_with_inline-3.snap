---
source: crates/sources/src/scenarios/mod.rs
expression: tables
---
DraftCatalog {
    captures: [],
    collections: [
        DraftCollection {
            catalog_name: test,
            scope: test://example/catalog.yaml#/collections/test,
            expect_build_id: NULL,
            spec: {
              "schema": "test.schema.yaml",
              "key": [
                "/some-key"
              ]
            },
        },
    ],
    errors: [],
    fetches: [],
    imports: [
        Import {
            scope: test://example/catalog.yaml#/collections/test/schema,
            to_resource: test://example/test.schema.yaml,
        },
    ],
    materializations: [],
    resources: [
        Resource {
            resource: test://example/catalog.yaml,
            content_type: "CATALOG",
            content: ".. binary ..",
            content_dom: {"collections":{"test":{"schema":"test.schema.yaml","key":["/some-key"]}}},
        },
        Resource {
            resource: test://example/test.schema.yaml,
            content_type: "JSON_SCHEMA",
            content: ".. binary ..",
            content_dom: {"$id":"test://example/catalog.yaml?ptr=/collections/test/schema","additionalProperties":true,"type":"object"},
        },
    ],
    storage_mappings: [],
    tests: [],
}
