---
source: crates/sources/src/scenarios/mod.rs
expression: tables
---
Sources {
    captures: [],
    collections: [
        Collection {
            scope: test://example/catalog.yaml#/collections/test,
            collection: test,
            spec: {
              "schema": "test://external/a#/$defs/a",
              "key": [
                "/a"
              ]
            },
        },
    ],
    errors: [],
    fetches: [
        Fetch {
            depth: 1,
            resource: test://example/catalog.yaml,
        },
        Fetch {
            depth: 2,
            resource: test://external/a,
        },
        Fetch {
            depth: 3,
            resource: test://external/b,
        },
        Fetch {
            depth: 4,
            resource: test://external/c,
        },
    ],
    imports: [
        Import {
            scope: test://example/catalog.yaml#/collections/test/schema,
            to_resource: test://external/a,
        },
        Import {
            scope: test://external/a#/$defs/a/$ref,
            to_resource: test://external/b,
        },
        Import {
            scope: test://external/b#/$defs/c/$ref,
            to_resource: test://external/c,
        },
    ],
    materializations: [],
    resources: [
        Resource {
            resource: test://example/catalog.yaml,
            content_type: "CATALOG",
            content: ".. binary ..",
            content_dom: {"collections":{"test":{"key":["/a"],"schema":"test://external/a#/$defs/a"}}},
        },
        Resource {
            resource: test://external/a,
            content_type: "JSON_SCHEMA",
            content: ".. binary ..",
            content_dom: {"$defs":{"a":{"$ref":"b#/$defs/c"}}},
        },
        Resource {
            resource: test://external/b,
            content_type: "JSON_SCHEMA",
            content: ".. binary ..",
            content_dom: {"$defs":{"c":{"$ref":"c"}}},
        },
        Resource {
            resource: test://external/c,
            content_type: "JSON_SCHEMA",
            content: ".. binary ..",
            content_dom: true,
        },
    ],
    storage_mappings: [],
    tests: [],
}
