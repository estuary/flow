---
source: crates/sources/src/scenarios/mod.rs
assertion_line: 27
expression: tables
---
Tables {
    capture_bindings: [],
    captures: [],
    collections: [],
    derivations: [],
    errors: [],
    fetches: [
        Fetch {
            depth: 1,
            resource: test://example/catalog.yaml,
        },
        Fetch {
            depth: 2,
            resource: test://example/catalog.ts,
        },
    ],
    imports: [
        Import {
            scope: test://example/catalog.yaml,
            from_resource: test://example/catalog.yaml,
            to_resource: test://example/catalog.ts,
        },
    ],
    materialization_bindings: [],
    materializations: [],
    named_schemas: [],
    npm_dependencies: [],
    projections: [],
    resources: [
        Resource {
            resource: test://example/catalog.yaml,
            content_type: "application/vnd.flow.catalog+yaml",
            content: ".. binary ..",
        },
    ],
    schema_docs: [],
    storage_mappings: [
        StorageMapping {
            scope: test://example/catalog.yaml#/storageMappings/,
            prefix: ,
            stores: [{"provider":"S3","bucket":"root-bucket","prefix":null}],
            foreign_build_id: NULL,
        },
        StorageMapping {
            scope: test://example/catalog.yaml#/storageMappings/foo~1bar~1baz~1,
            prefix: foo/bar/baz/,
            stores: [{"provider":"GCS","bucket":"a-bucket","prefix":"and-prefix/"},{"provider":"S3","bucket":"s3-bucket","prefix":null}],
            foreign_build_id: NULL,
        },
        StorageMapping {
            scope: test://example/catalog.yaml#/storageMappings/other~1thing~1,
            prefix: other/thing/,
            stores: [{"provider":"AZURE","bucket":"s3-bucket","prefix":null}],
            foreign_build_id: NULL,
        },
    ],
    test_steps: [],
    transforms: [],
}
