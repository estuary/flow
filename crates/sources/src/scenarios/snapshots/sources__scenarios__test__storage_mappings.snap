---
source: crates/sources/src/scenarios/mod.rs
expression: tables
---
Sources {
    capture_bindings: [],
    captures: [],
    collections: [],
    derivations: [],
    errors: [],
    fetches: [
        Fetch {
            depth: 1,
            resource: test://example/catalog.yaml,
        },
    ],
    imports: [],
    materialization_bindings: [],
    materializations: [],
    npm_dependencies: [],
    projections: [],
    resources: [
        Resource {
            resource: test://example/catalog.yaml,
            content_type: "CATALOG",
            content: ".. binary ..",
            content_dom: {"storageMappings":{"":{"stores":[{"bucket":"root-bucket","provider":"S3"}]},"foo/bar/baz/":{"stores":[{"bucket":"a-bucket","prefix":"and-prefix/","provider":"GCS"},{"bucket":"s3-bucket","provider":"S3"}]},"other/thing/":{"stores":[{"bucket":"s3-bucket","provider":"AZURE"}]}}},
        },
    ],
    schema_docs: [],
    storage_mappings: [
        StorageMapping {
            scope: test://example/catalog.yaml#/storageMappings/,
            prefix: ,
            stores: [
              {
                "provider": "S3",
                "bucket": "root-bucket",
                "prefix": null
              }
            ],
        },
        StorageMapping {
            scope: test://example/catalog.yaml#/storageMappings/foo~1bar~1baz~1,
            prefix: foo/bar/baz/,
            stores: [
              {
                "provider": "GCS",
                "bucket": "a-bucket",
                "prefix": "and-prefix/"
              },
              {
                "provider": "S3",
                "bucket": "s3-bucket",
                "prefix": null
              }
            ],
        },
        StorageMapping {
            scope: test://example/catalog.yaml#/storageMappings/other~1thing~1,
            prefix: other/thing/,
            stores: [
              {
                "provider": "AZURE",
                "bucket": "s3-bucket",
                "prefix": null
              }
            ],
        },
    ],
    test_steps: [],
    transforms: [],
}
