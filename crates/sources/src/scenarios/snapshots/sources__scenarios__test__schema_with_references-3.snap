---
source: crates/sources/src/scenarios/mod.rs
expression: tables
---
DraftCatalog {
    collections: [
        DraftCollection {
            collection: test,
            scope: test://example/catalog.yaml#/collections/test,
            expect_pub_id: NULL,
            model: {
              "schema": "test.schema.yaml",
              "key": [
                "/a"
              ]
            },
            is_touch: 0,
        },
    ],
    imports: [
        Import {
            scope: test://example/catalog.yaml#/collections/test/schema,
            to_resource: test://example/test.schema.yaml,
        },
    ],
    resources: [
        Resource {
            resource: test://example/catalog.yaml,
            content_type: "CATALOG",
            content: ".. binary ..",
            content_dom: {"collections":{"test":{"schema":"test.schema.yaml","key":["/a"]}}},
        },
        Resource {
            resource: test://example/test.schema.yaml,
            content_type: "JSON_SCHEMA",
            content: ".. binary ..",
            content_dom: {"$defs":{"__flowInline1":{"$defs":{"a":{"$ref":"b#/$defs/c"}},"$id":"test://external/a"},"__flowInline2":{"$defs":{"c":{"$ref":"c"}},"$id":"test://external/b"},"__flowInline3":{"$id":"test://external/c","allOf":[true]}},"$id":"test://example/catalog.yaml?ptr=/collections/test/schema","$ref":"test://external/a#/$defs/a"},
        },
    ],
}
