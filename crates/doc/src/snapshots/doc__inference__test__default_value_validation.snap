---
source: crates/doc/src/inference.rs
expression: obj.inspect()
---
[
    InvalidDefaultValue(
        "/array-wrong-items",
        FailedValidation {
            basic_output: Object {
                "errors": Array [
                    Object {
                        "absoluteKeywordLocation": String("http://example/schema#/properties/array-wrong-items/items"),
                        "error": String("Invalid: Must be of type \"integer\"."),
                        "instanceLocation": String("/0"),
                        "keywordLocation": String("#/items"),
                    },
                ],
                "valid": Bool(false),
            },
            document: Array [
                String("aString"),
            ],
        },
    ),
    InvalidDefaultValue(
        "/multi-type",
        FailedValidation {
            basic_output: Object {
                "errors": Array [
                    Object {
                        "absoluteKeywordLocation": String("http://example/schema#/properties/multi-type"),
                        "error": String("Invalid: Must be of type \"array\", \"string\"."),
                        "instanceLocation": String(""),
                        "keywordLocation": String("#"),
                    },
                ],
                "valid": Bool(false),
            },
            document: Number(1234),
        },
    ),
    InvalidDefaultValue(
        "/object-type-missing-prop",
        FailedValidation {
            basic_output: Object {
                "errors": Array [
                    Object {
                        "absoluteKeywordLocation": String("http://example/schema#/properties/object-type-missing-prop"),
                        "error": String("Invalid: Properties \"requiredProp\" are required."),
                        "instanceLocation": String(""),
                        "keywordLocation": String("#"),
                    },
                ],
                "valid": Bool(false),
            },
            document: Object {
                "otherProp": String("stringValue"),
            },
        },
    ),
    InvalidDefaultValue(
        "/object-type-prop-wrong-type",
        FailedValidation {
            basic_output: Object {
                "errors": Array [
                    Object {
                        "absoluteKeywordLocation": String("http://example/schema#/properties/object-type-prop-wrong-type/properties/requiredProp"),
                        "error": String("Invalid: Must be of type \"string\"."),
                        "instanceLocation": String("/requiredProp"),
                        "keywordLocation": String("#/properties/requiredProp"),
                    },
                ],
                "valid": Bool(false),
            },
            document: Object {
                "requiredProp": Number(1234),
            },
        },
    ),
    InvalidDefaultValue(
        "/scalar-type",
        FailedValidation {
            basic_output: Object {
                "errors": Array [
                    Object {
                        "absoluteKeywordLocation": String("http://example/schema#/properties/scalar-type"),
                        "error": String("Invalid: Must be of type \"string\"."),
                        "instanceLocation": String(""),
                        "keywordLocation": String("#"),
                    },
                ],
                "valid": Bool(false),
            },
            document: Number(1234),
        },
    ),
]
