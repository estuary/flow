---
source: crates/doc/src/shape/inference.rs
expression: obj.inspect()
---
[
    InvalidDefaultValue(
        "/array-wrong-items",
        FailedValidation {
            basic_output: Array [
                Object {
                    "absoluteKeywordLocation": String("http://example/schema#/properties/array-wrong-items/items"),
                    "detail": String("Type mismatch: expected a integer"),
                    "instanceLocation": String("/0"),
                    "instanceValue": String("aString"),
                },
            ],
            document: Array [
                String("aString"),
            ],
        },
    ),
    InvalidDefaultValue(
        "/multi-type",
        FailedValidation {
            basic_output: Array [
                Object {
                    "absoluteKeywordLocation": String("http://example/schema#/properties/multi-type"),
                    "detail": String("Type mismatch: expected a array or string"),
                    "instanceLocation": String(""),
                    "instanceValue": Number(1234),
                },
            ],
            document: Number(1234),
        },
    ),
    InvalidDefaultValue(
        "/object-type-missing-prop",
        FailedValidation {
            basic_output: Array [
                Object {
                    "absoluteKeywordLocation": String("http://example/schema#/properties/object-type-missing-prop"),
                    "detail": String("Missing required property: requiredProp"),
                    "instanceLocation": String(""),
                    "instanceValue": String("<object>"),
                },
            ],
            document: Object {
                "otherProp": String("stringValue"),
            },
        },
    ),
    InvalidDefaultValue(
        "/object-type-prop-wrong-type",
        FailedValidation {
            basic_output: Array [
                Object {
                    "absoluteKeywordLocation": String("http://example/schema#/properties/object-type-prop-wrong-type/properties/requiredProp"),
                    "detail": String("Type mismatch: expected a string"),
                    "instanceLocation": String("/requiredProp"),
                    "instanceValue": Number(1234),
                },
            ],
            document: Object {
                "requiredProp": Number(1234),
            },
        },
    ),
    InvalidDefaultValue(
        "/scalar-type",
        FailedValidation {
            basic_output: Array [
                Object {
                    "absoluteKeywordLocation": String("http://example/schema#/properties/scalar-type"),
                    "detail": String("Type mismatch: expected a string"),
                    "instanceLocation": String(""),
                    "instanceValue": Number(1234),
                },
            ],
            document: Number(1234),
        },
    ),
]
