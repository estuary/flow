/*
 * Flow Control Plane V0 API
 *
 * some description here
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct JobStatusOneOf1 {
    #[serde(rename = "evolution_id", skip_serializing_if = "Option::is_none")]
    pub evolution_id: Option<String>,
    #[serde(rename = "incompatible_collections", skip_serializing_if = "Option::is_none")]
    pub incompatible_collections: Option<Vec<models::IncompatibleCollection>>,
    #[serde(rename = "type")]
    pub r#type: Type,
}

impl JobStatusOneOf1 {
    pub fn new(r#type: Type) -> JobStatusOneOf1 {
        JobStatusOneOf1 {
            evolution_id: None,
            incompatible_collections: None,
            r#type,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "buildFailed")]
    BuildFailed,
}

impl Default for Type {
    fn default() -> Type {
        Self::BuildFailed
    }
}

