/*
 * Flow Control Plane V0 API
 *
 * some description here
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PublicationStatus : Information on the publications performed by the controller. This does not include any information on user-initiated publications.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PublicationStatus {
    #[serde(rename = "dependency_hash", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub dependency_hash: Option<Option<String>>,
    /// A limited history of publications performed by this controller
    #[serde(rename = "history")]
    pub history: Vec<models::PublicationInfo>,
    #[serde(rename = "max_observed_pub_id", skip_serializing_if = "Option::is_none")]
    pub max_observed_pub_id: Option<String>,
}

impl PublicationStatus {
    /// Information on the publications performed by the controller. This does not include any information on user-initiated publications.
    pub fn new(history: Vec<models::PublicationInfo>) -> PublicationStatus {
        PublicationStatus {
            dependency_hash: None,
            history,
            max_observed_pub_id: None,
        }
    }
}

