/*
 * Flow Control Plane V0 API
 *
 * some description here
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// StatusResponseControllerStatusOneOf2 : Status of a materialization controller
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StatusResponseControllerStatusOneOf2 {
    #[serde(rename = "activation", skip_serializing_if = "Option::is_none")]
    pub activation: Option<Box<models::ActivationStatus>>,
    #[serde(rename = "publications", skip_serializing_if = "Option::is_none")]
    pub publications: Option<Box<models::PublicationStatus>>,
    #[serde(rename = "source_capture", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub source_capture: Option<Option<Box<models::SourceCaptureStatus>>>,
    #[serde(rename = "type")]
    pub r#type: Type,
}

impl StatusResponseControllerStatusOneOf2 {
    /// Status of a materialization controller
    pub fn new(r#type: Type) -> StatusResponseControllerStatusOneOf2 {
        StatusResponseControllerStatusOneOf2 {
            activation: None,
            publications: None,
            source_capture: None,
            r#type,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "Materialization")]
    Materialization,
}

impl Default for Type {
    fn default() -> Type {
        Self::Materialization
    }
}

