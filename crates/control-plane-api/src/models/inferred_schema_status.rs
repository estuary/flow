/*
 * Flow Control Plane V0 API
 *
 * some description here
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// InferredSchemaStatus : Status of the inferred schema
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct InferredSchemaStatus {
    /// The time at which the inferred schema was last published. This will only be present if the inferred schema was published at least once.
    #[serde(rename = "schema_last_updated", skip_serializing_if = "Option::is_none")]
    pub schema_last_updated: Option<String>,
    /// The md5 sum of the inferred schema that was last published. Because the publications handler updates the model instead of the controller, it's technically possible for the published inferred schema to be more recent than the one corresponding to this hash. If that happens, we would expect a subsequent publication on the next controller run, which would update the hash but not actually modify the schema.
    #[serde(rename = "schema_md5", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub schema_md5: Option<Option<String>>,
}

impl InferredSchemaStatus {
    /// Status of the inferred schema
    pub fn new() -> InferredSchemaStatus {
        InferredSchemaStatus {
            schema_last_updated: None,
            schema_md5: None,
        }
    }
}

