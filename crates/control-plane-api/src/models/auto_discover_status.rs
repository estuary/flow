/*
 * Flow Control Plane V0 API
 *
 * some description here
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AutoDiscoverStatus {
    #[serde(rename = "failure", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub failure: Option<Option<Box<models::AutoDiscoverFailure>>>,
    /// The interval at which auto-discovery is run. This is normally unset, which uses the default interval.
    #[serde(rename = "interval", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub interval: Option<Option<String>>,
    #[serde(rename = "last_success", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub last_success: Option<Option<Box<models::AutoDiscoverOutcome>>>,
    /// Time at which the next auto-discover should be run.
    #[serde(rename = "next_at", skip_serializing_if = "Option::is_none")]
    pub next_at: Option<String>,
    #[serde(rename = "pending_publish", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub pending_publish: Option<Option<Box<models::AutoDiscoverOutcome>>>,
}

impl AutoDiscoverStatus {
    pub fn new() -> AutoDiscoverStatus {
        AutoDiscoverStatus {
            failure: None,
            interval: None,
            last_success: None,
            next_at: None,
            pending_publish: None,
        }
    }
}

