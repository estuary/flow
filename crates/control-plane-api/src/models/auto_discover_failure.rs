/*
 * Flow Control Plane V0 API
 *
 * some description here
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AutoDiscoverFailure {
    /// The number of consecutive failures that have been observed.
    #[serde(rename = "count")]
    pub count: i32,
    /// The timestamp of the first failure in the current sequence.
    #[serde(rename = "first_ts")]
    pub first_ts: String,
    /// The discover outcome corresponding to the most recent failure. This will be updated with the results of each retry until an auto-discover succeeds.
    #[serde(rename = "last_outcome")]
    pub last_outcome: Box<models::AutoDiscoverOutcome>,
}

impl AutoDiscoverFailure {
    pub fn new(count: i32, first_ts: String, last_outcome: models::AutoDiscoverOutcome) -> AutoDiscoverFailure {
        AutoDiscoverFailure {
            count,
            first_ts,
            last_outcome: Box::new(last_outcome),
        }
    }
}

