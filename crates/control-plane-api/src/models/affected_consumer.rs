/*
 * Flow Control Plane V0 API
 *
 * some description here
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AffectedConsumer {
    #[serde(rename = "fields")]
    pub fields: Vec<models::RejectedField>,
    #[serde(rename = "name")]
    pub name: String,
    /// Identifies the specific binding that is affected. This can be used to differentiate in cases there are multiple bindings with the same source.
    #[serde(rename = "resource_path", skip_serializing_if = "Option::is_none")]
    pub resource_path: Option<Vec<String>>,
}

impl AffectedConsumer {
    pub fn new(fields: Vec<models::RejectedField>, name: String) -> AffectedConsumer {
        AffectedConsumer {
            fields,
            name,
            resource_path: None,
        }
    }
}

