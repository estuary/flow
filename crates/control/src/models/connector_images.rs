use chrono::{DateTime, Utc};
use serde::{Deserialize, Serialize};
use sqlx::FromRow;

use crate::models::Id;

/// A ConnectorImage is a specific version of a Connector.
///
/// A `ConnectorImage` is a Rust representation of the Postgres database
/// metadata about a specific image.
#[derive(Debug, Deserialize, FromRow, Serialize)]
pub struct ConnectorImage {
    /// The Connector to which this image belongs to.
    pub connector_id: Id,
    /// When this record was created.
    pub created_at: DateTime<Utc>,
    /// Primary key for this record.
    pub id: Id,
    /// The path to this image. Eg. `ghcr.io/estuary/source-hello-world`.
    pub image: String,
    /// The full sha256 sum which uniquely identifies this image.
    pub sha256: String,
    /// The specific tag we are exposing as canonical for this image.
    pub tag: String,
    /// When this record was last updated.
    pub updated_at: DateTime<Utc>,
}

/// CreateConnectorImage represents the data required to insert a new
/// ConnectorImage, with remaining fields from `ConnectorImage` generated by
/// Postgres.
#[derive(Debug, Deserialize, FromRow, Serialize)]
pub struct CreateConnectorImage {
    pub connector_id: Id,
    pub image: String,
    pub sha256: String,
    pub tag: String,
}
