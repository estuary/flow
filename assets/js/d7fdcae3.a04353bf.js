"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[1462],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var s=t(96540);const a={},i=s.createContext(a);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:n},e.children)}},91411:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"reference/materialization-sync-schedule","title":"Materialization sync schedule","description":"For some systems you might prefer to have data sync\'d less frequently to reduce","source":"@site/docs/reference/materialization-sync-schedule.md","sourceDirName":"reference","slug":"/reference/materialization-sync-schedule","permalink":"/reference/materialization-sync-schedule","draft":false,"unlisted":false,"editUrl":"https://github.com/estuary/flow/edit/master/site/docs/reference/materialization-sync-schedule.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Handling Deletions in Estuary Flow","permalink":"/reference/deletions"},"next":{"title":"OpenMetrics API","permalink":"/reference/openmetrics-api"}}');var a=t(74848),i=t(28453);const r={},o="Materialization sync schedule",c={},d=[{value:"How transactions are used to sync data to a destination",id:"how-transactions-are-used-to-sync-data-to-a-destination",level:2},{value:"Configuring a sync schedule",id:"configuring-a-sync-schedule",level:2},{value:"Example: Sync data on a fixed schedule",id:"example-sync-data-on-a-fixed-schedule",level:4},{value:"Example: Sync data faster during certain times of the day",id:"example-sync-data-faster-during-certain-times-of-the-day",level:4},{value:"Example: Sync data faster only on certain days of the week",id:"example-sync-data-faster-only-on-certain-days-of-the-week",level:4},{value:"Timing of syncs",id:"timing-of-syncs",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"materialization-sync-schedule",children:"Materialization sync schedule"})}),"\n",(0,a.jsx)(n.p,{children:"For some systems you might prefer to have data sync'd less frequently to reduce\ncompute costs in the destination if some delay in new data is acceptable. For\nexample, if the destination system has a minimum compute charge per-query, you\ncould reduce your compute charges by running a single large query every 30\nminutes rather than many smaller queries every few seconds."}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["Syncing data less frequently to your destination system does ",(0,a.jsx)(n.em,{children:"not"})," affect the\ncost for running the materialization connector within Estuary Flow. But it can\nreduce the costs incurred in the destination from the actions the connector\ntakes to load data to it."]})}),"\n",(0,a.jsx)(n.p,{children:"These materialization connectors support configuring a sync schedule:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/reference/Connectors/materialization-connectors/BigQuery",children:"materialize-bigquery"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/reference/Connectors/materialization-connectors/databricks",children:"materialize-databricks"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/reference/Connectors/materialization-connectors/motherduck",children:"materialize-motherduck"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/reference/Connectors/materialization-connectors/amazon-redshift",children:"materialize-redshift"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/reference/Connectors/materialization-connectors/Snowflake",children:"materialize-snowflake"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/reference/Connectors/materialization-connectors/starburst",children:"materialize-starburst"})}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"how-transactions-are-used-to-sync-data-to-a-destination",children:"How transactions are used to sync data to a destination"}),"\n",(0,a.jsxs)(n.p,{children:["Estuary Flow processes data in\n",(0,a.jsx)(n.a,{href:"/concepts/advanced/shards#transactions",children:"transactions"}),". Materialization\nconnectors use the ",(0,a.jsx)(n.a,{href:"/reference/Connectors/materialization-protocol",children:"materialization\nprotocol"})," to process transactions and\nsync data to the destination."]}),"\n",(0,a.jsx)(n.p,{children:"When a materialization is caught up to its source collections, it runs frequent\nsmall transactions to keep the destination up to date. In this case every new\ntransaction contains the latest data that needs updated. But when a\nmaterialization is backfilling its source collections, it runs larger\ntransactions to efficiently load the data in bulk to the destination and catch\nup to the latest changes."}),"\n",(0,a.jsxs)(n.p,{children:["The sync schedule is configured in terms of these ",(0,a.jsx)(n.strong,{children:"transactions"}),": For less\nfrequent updates, processing of additional transactions is delayed by some\namount of time. This extra delay is only applied when the materialization is\nfully caught up - backfills always run as fast as possible. And while a\ntransaction is delayed, Estuary Flow will continue batching and combining new\ndocuments so that the next transaction contains all of the latest data."]}),"\n",(0,a.jsxs)(n.p,{children:["You can read about ",(0,a.jsx)(n.a,{href:"/concepts/materialization#how-continuous-materialization-works",children:"how continuous materialization\nworks"})," for\nmore background information."]}),"\n",(0,a.jsx)(n.h2,{id:"configuring-a-sync-schedule",children:"Configuring a sync schedule"}),"\n",(0,a.jsx)(n.p,{children:"A materialization can be configured to run on a fixed schedule 24/7 or it can\nhave a faster sync schedule during certain times of the day and on certain days\nof the week. The following options are available for configuring the sync\nschedule:"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Property"}),(0,a.jsx)(n.th,{children:"Title"}),(0,a.jsx)(n.th,{children:"Description"}),(0,a.jsx)(n.th,{children:"Type"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"/syncFrequency"})}),(0,a.jsx)(n.td,{children:"Sync Frequency"}),(0,a.jsx)(n.td,{children:"Frequency at which transactions are executed when the materialization is fully caught up and streaming changes. May be enabled only for certain time periods and days of the week if configured below; otherwise it is effective 24/7. Defaults to 30 minutes if unset."}),(0,a.jsx)(n.td,{children:"string"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"/timezone"})}),(0,a.jsx)(n.td,{children:"Timezone"}),(0,a.jsxs)(n.td,{children:["Timezone applicable to sync time windows and active days. Must be a valid IANA time zone name or +HH",":MM"," offset."]}),(0,a.jsx)(n.td,{children:"string"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"/fastSyncStartTime"})}),(0,a.jsx)(n.td,{children:"Fast Sync Start Time"}),(0,a.jsx)(n.td,{children:"Time of day that transactions begin executing at the configured Sync Frequency. Prior to this time transactions will be executed more slowly. Must be in the form of '09:00'."}),(0,a.jsx)(n.td,{children:"string"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"/fastSyncStopTime"})}),(0,a.jsx)(n.td,{children:"Fast Sync Stop Time"}),(0,a.jsx)(n.td,{children:"Time of day that transactions stop executing at the configured Sync Frequency. After this time transactions will be executed more slowly. Must be in the form of '17:00'."}),(0,a.jsx)(n.td,{children:"string"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"/fastSyncEnabledDays"})}),(0,a.jsx)(n.td,{children:"Fast Sync Enabled Days"}),(0,a.jsx)(n.td,{children:"Days of the week that the configured Sync Frequency is active. On days that are not enabled, transactions will be executed more slowly for the entire day. Examples: 'M-F' (Monday through Friday, inclusive), 'M,W,F' (Monday, Wednesday, and Friday), 'Su-T,Th-S' (Sunday through Tuesday, inclusive; Thursday through Saturday, inclusive). All days are enabled if unset."}),(0,a.jsx)(n.td,{children:"string"})]})]})]}),"\n",(0,a.jsxs)(n.admonition,{type:"warning",children:[(0,a.jsxs)(n.p,{children:["Changes to a ",(0,a.jsx)(n.a,{href:"/concepts/materialization#specification",children:"materialization's\nspecification"}),' are only applied\nafter the materialization task has completed and acknowledged all of its\noutstanding transactions. This means that if a task is running with a 4 hour\nsync frequency, it may take up to 8 hours for a change to the specification to\ntake effect: 4 hours for the "current" transaction to complete and be\nacknowledged, and another 4 hours for the next "pipelined" commit to complete\nand be acknowledged.']}),(0,a.jsxs)(n.p,{children:["If you are making changes to a materialization with a ",(0,a.jsx)(n.strong,{children:"Sync Schedule"}),"\nconfigured and would like those changes to take effect immediately, you can\ndisable and then re-enable the materialization."]})]}),"\n",(0,a.jsx)(n.h4,{id:"example-sync-data-on-a-fixed-schedule",children:"Example: Sync data on a fixed schedule"}),"\n",(0,a.jsxs)(n.p,{children:["To use the same schedule for syncing data 24/7, set the value of ",(0,a.jsx)(n.strong,{children:"Sync\nFrequency"})," only and leave the other inputs empty. For example, you might set a\n",(0,a.jsx)(n.strong,{children:"Sync Frequency"})," of ",(0,a.jsx)(n.code,{children:"15m"})," to always have your destination sync every 15 minutes\ninstead of the default 30 minutes."]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["If you want the materialization to always push updated data as fast as possible,\nuse a ",(0,a.jsx)(n.strong,{children:"Sync Frequency"})," of ",(0,a.jsx)(n.code,{children:"0s"}),"."]})}),"\n",(0,a.jsx)(n.h4,{id:"example-sync-data-faster-during-certain-times-of-the-day",children:"Example: Sync data faster during certain times of the day"}),"\n",(0,a.jsxs)(n.p,{children:["If you only care about having the most-up-to-date data possible during certain\ntimes of the day, you can set a start and stop time for that time period. The\nvalue you set for ",(0,a.jsx)(n.strong,{children:"Sync Frequency"})," will be used during that time period;\notherwise syncs will be performed every 4 hours."]}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.strong,{children:"Fast Sync Start Time"})," and ",(0,a.jsx)(n.strong,{children:"Fast Sync Stop Time"})," values must be set as\n24-hour times, and you must provide a value for ",(0,a.jsx)(n.strong,{children:"Timezone"})," that this time\nwindow should use. Timezones must either be ",(0,a.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones",children:"a valid IANA time zone\nname"})," or a +HH",":MM","\noffset. Providing a time zone name will ensure local factors like daylight\nsavings time are considered for the schedule, whereas an offset timezone is\nalways relative to UTC."]}),"\n",(0,a.jsx)(n.p,{children:"An example configuration data syncs data as fast as possible between the hours\nof 9:00AM and 5:00PM in the Eastern Time Zone (ET) would use these values:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Sync Frequency"}),": ",(0,a.jsx)(n.code,{children:"0s"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Timezone"}),": ",(0,a.jsx)(n.code,{children:"America/New_York"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Fast Sync Start Time"}),": ",(0,a.jsx)(n.code,{children:"09:00"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Fast Sync Stop Time"}),": ",(0,a.jsx)(n.code,{children:"17:00"})]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"example-sync-data-faster-only-on-certain-days-of-the-week",children:"Example: Sync data faster only on certain days of the week"}),"\n",(0,a.jsx)(n.p,{children:"You can also set certain days of the week that the fast sync is active. On all\nother days, data will be sync'd more slowly all day."}),"\n",(0,a.jsxs)(n.p,{children:["To enable this, set values for ",(0,a.jsx)(n.strong,{children:"Sync Frequency"}),", ",(0,a.jsx)(n.strong,{children:"Timezone"}),", ",(0,a.jsx)(n.strong,{children:"Fast Sync\nStart Time"}),", and ",(0,a.jsx)(n.strong,{children:"Fast Sync Stop Time"})," as you would for syncing data faster\nduring certain times of the day, and also provide a value for ",(0,a.jsx)(n.strong,{children:"Fast Sync\nEnabled Days"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Fast Sync Enabled Days"})," is a range of days, where the days of the week are\nabbreviated as ",(0,a.jsx)(n.code,{children:"(Su)nday"}),", ",(0,a.jsx)(n.code,{children:"(M)onday"}),", ",(0,a.jsx)(n.code,{children:"(T)uesday"}),", ",(0,a.jsx)(n.code,{children:"(W)ednesday"}),", ",(0,a.jsx)(n.code,{children:"(Th)ursday"}),",\n",(0,a.jsx)(n.code,{children:"(F)riday"}),", ",(0,a.jsx)(n.code,{children:"(S)aturday"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Here are some examples of valid inputs for ",(0,a.jsx)(n.strong,{children:"Fast Sync Enabled Days"}),":"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"M-F"})," to enable fast sync on Monday through Friday."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Su, T, Th, S"})," to enable fast sync on Sunday, Tuesday, Thursday, and Saturday."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Su-M,Th-S"})," to enable fast sync on Thursday through Monday. Note that the days\nof the week must be listed in order, so ",(0,a.jsx)(n.code,{children:"Th-M"})," will not work."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"timing-of-syncs",children:"Timing of syncs"}),"\n",(0,a.jsx)(n.p,{children:"In technical terms, timing of syncs is controlled by the materialization\nconnector sending a transaction acknowledgement to the Flow runtime at computed\ntimes. Practically this means that at these times the prior transaction will\ncomplete and have its statistics recorded, and the next transaction will begin."}),"\n",(0,a.jsxs)(n.p,{children:["This timing is computed so that it occurs at predictable instants in time. As a\nhypothetical example, if you have set a ",(0,a.jsx)(n.strong,{children:"Sync Frequency"})," of ",(0,a.jsx)(n.code,{children:"15m"}),", transaction\nacknowledgements might be sent at times like ",(0,a.jsx)(n.code,{children:"00:00"}),", ",(0,a.jsx)(n.code,{children:"00:15"}),", ",(0,a.jsx)(n.code,{children:"00:30"}),", ",(0,a.jsx)(n.code,{children:"00:45"}),"\nand so on, where each acknowledgement is sent at a multiple of the ",(0,a.jsx)(n.strong,{children:"Sync\nFrequency"})," relative to the hour. This means that if the materialization ",(0,a.jsx)(n.a,{href:"/concepts/advanced/shards",children:"task\nshard"})," restarts and completes its first\ntransaction at ",(0,a.jsx)(n.code,{children:"00:13"}),", it will run its next transaction at ",(0,a.jsx)(n.code,{children:"00:15"})," rather than\n",(0,a.jsx)(n.code,{children:"00:28"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["In actuality these computed points in time have some amount of\n",(0,a.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Jitter",children:"jitter"})," applied to them to avoid\noverwhelming the system at common intervals, so setting a ",(0,a.jsx)(n.strong,{children:"Sync Frequency"})," to\na specific value will ensure that transactions are predictably acknowledged that\noften, but makes no assumptions about precisely what time instants the\nacknowledgements will occur."]}),"\n",(0,a.jsxs)(n.admonition,{type:"info",children:[(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"jitter"})," value is deterministic based on the ",(0,a.jsx)(n.em,{children:"compute resource"})," for the\ndestination system from the materialization's endpoint configuration. How this\ncompute resource is identified varies for different systems, but is usually\nsomething like ",(0,a.jsx)(n.code,{children:'"account_name" + "warehouse_Name"'}),"."]}),(0,a.jsxs)(n.p,{children:["This means that separate materializations using the same compute resource will\nsynchronize their usage of that compute resource if they have the same ",(0,a.jsx)(n.strong,{children:"Sync\nSchedule"})," configured."]})]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);