"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[3011],{57607:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=t(74848),a=t(28453);const i={},o="Materialize",s={id:"reference/Connectors/dekaf/dekaf-materialize",title:"Materialize",description:"In this guide, you'll learn how to use Materialize to ingest data from Estuary Flow.",source:"@site/docs/reference/Connectors/dekaf/dekaf-materialize.md",sourceDirName:"reference/Connectors/dekaf",slug:"/reference/Connectors/dekaf/dekaf-materialize",permalink:"/reference/Connectors/dekaf/dekaf-materialize",draft:!1,unlisted:!1,editUrl:"https://github.com/estuary/flow/edit/master/site/docs/reference/Connectors/dekaf/dekaf-materialize.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Imply Polaris",permalink:"/reference/Connectors/dekaf/dekaf-imply"},next:{title:"SingleStore (Cloud)",permalink:"/reference/Connectors/dekaf/dekaf-singlestore"}},l={},c=[{value:"Connecting Estuary Flow to Materialize",id:"connecting-estuary-flow-to-materialize",level:2},{value:"Creating Real-Time Views",id:"creating-real-time-views",level:2},{value:"Final Steps",id:"final-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"materialize",children:"Materialize"}),"\n",(0,r.jsx)(n.p,{children:"In this guide, you'll learn how to use Materialize to ingest data from Estuary Flow."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://materialize.com/",children:"Materialize"})," is an operational data warehouse for real-time analytics that uses standard SQL\nfor defining transformations and queries."]}),"\n",(0,r.jsx)(n.h2,{id:"connecting-estuary-flow-to-materialize",children:"Connecting Estuary Flow to Materialize"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/guides/how_to_generate_refresh_token",children:"Generate a refresh token"})," to use for the Materialize connection. You can\ngenerate this token from the Estuary Admin Dashboard."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"In your Materialize dashboard, use the SQL shell to create a new secret and connection using the Kafka source\nconnector. Use the following SQL commands to configure the connection to Estuary Flow:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE\nSECRET estuary_refresh_token AS\n  'your_generated_token_here';\n\nCREATE\nCONNECTION estuary_connection TO KAFKA (\n    BROKER 'dekaf.estuary.dev',\n    SECURITY PROTOCOL = 'SASL_SSL',\n    SASL MECHANISMS = 'PLAIN',\n    SASL USERNAME = '{}',\n    SASL PASSWORD = SECRET estuary_refresh_token\n);\n\nCREATE\nCONNECTION csr_estuary_connection TO CONFLUENT SCHEMA REGISTRY (\n    URL 'https://dekaf.estuary.dev',\n    USERNAME = '{}',\n    PASSWORD = SECRET estuary_refresh_token\n);\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Create a source in Materialize"})," to read from the Kafka topic. Use the following SQL command,\nreplacing ",(0,r.jsx)(n.code,{children:"<name-of-your-flow-collection>"})," with the name of your collection in Estuary Flow:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE SOURCE materialize_source\nFROM KAFKA CONNECTION estuary_connection (TOPIC '<name-of-your-flow-collection>')\nFORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_estuary_connection\nENVELOPE UPSERT;\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"creating-real-time-views",children:"Creating Real-Time Views"}),"\n",(0,r.jsx)(n.p,{children:"To begin analyzing the data, create a real-time view using SQL in Materialize. Here is an example query to create a\nmaterialized view that tracks data changes:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE MATERIALIZED VIEW my_view AS\nSELECT *\nFROM materialize_source;\n"})}),"\n",(0,r.jsx)(n.h2,{id:"final-steps",children:"Final Steps"}),"\n",(0,r.jsx)(n.p,{children:"After configuring your source and creating the necessary views, the connection with Materialize is complete. New data\nfrom your Estuary Flow collection will now arrive in your Materialize source in real-time, enabling you to perform\nreal-time analytics on live data streams."}),"\n",(0,r.jsxs)(n.p,{children:["For more detailed information on creating materialized views and other advanced configurations, refer to\nthe ",(0,r.jsx)(n.a,{href:"https://materialize.com/docs/",children:"Materialize documentation"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"By following these steps, you can leverage the full potential of Estuary Flow and Materialize for real-time data\nprocessing and analytics."})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var r=t(96540);const a={},i=r.createContext(a);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);