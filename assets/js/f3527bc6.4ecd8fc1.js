"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[6351],{24580:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>j,frontMatter:()=>o,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"reference/Connectors/materialization-connectors/Dekaf/dekaf","title":"Dekaf","description":"This connector materializes Flow collections as Kafka-compatible messages that Kafka consumers can read.","source":"@site/docs/reference/Connectors/materialization-connectors/Dekaf/dekaf.md","sourceDirName":"reference/Connectors/materialization-connectors/Dekaf","slug":"/reference/Connectors/materialization-connectors/Dekaf/","permalink":"/reference/Connectors/materialization-connectors/Dekaf/","draft":false,"unlisted":false,"editUrl":"https://github.com/estuary/flow/edit/master/site/docs/reference/Connectors/materialization-connectors/Dekaf/dekaf.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Databricks","permalink":"/reference/Connectors/materialization-connectors/databricks"},"next":{"title":"Bytewax","permalink":"/reference/Connectors/materialization-connectors/Dekaf/bytewax"}}');var t=i(74848),s=i(28453),a=i(13554),c=i.n(a);const o={},l="Dekaf",d={},h=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Variants",id:"variants",level:2},{value:"Setup",id:"setup",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Properties",id:"properties",level:3},{value:"Endpoint",id:"endpoint",level:4},{value:"Bindings",id:"bindings",level:4},{value:"Sample",id:"sample",level:3}];function x(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"dekaf",children:"Dekaf"})}),"\n",(0,t.jsx)(n.p,{children:"This connector materializes Flow collections as Kafka-compatible messages that Kafka consumers can read."}),"\n",(0,t.jsxs)(n.p,{children:["If you want to send messages to your own Kafka broker, see the ",(0,t.jsx)(n.a,{href:"/reference/Connectors/materialization-connectors/apache-kafka",children:"Kafka"})," materialization connector instead."]}),"\n",(0,t.jsx)(c(),{controls:!0,url:"https://www.youtube.com/watch?v=Oil8yNHRrqQ"}),"\n",(0,t.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsx)(n.p,{children:"To use this connector, you'll need:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"At least one Flow collection"}),"\n",(0,t.jsx)(n.li,{children:"At least one Kafka consumer"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"variants",children:"Variants"}),"\n",(0,t.jsx)(n.p,{children:"Dekaf can be used with a number of systems that act as Kafka consumers. Specific instructions are provided for the following systems:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/reference/Connectors/materialization-connectors/Dekaf/bytewax",children:"Bytewax"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/reference/Connectors/materialization-connectors/Dekaf/clickhouse",children:"ClickHouse"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/reference/Connectors/materialization-connectors/Dekaf/imply-polaris",children:"Imply Polaris"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/reference/Connectors/materialization-connectors/Dekaf/materialize",children:"Materialize"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/reference/Connectors/materialization-connectors/Dekaf/singlestore",children:"SingleStore"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/reference/Connectors/materialization-connectors/Dekaf/startree",children:"Startree"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/reference/Connectors/materialization-connectors/Dekaf/tinybird",children:"Tinybird"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/reference/Connectors/materialization-connectors/Dekaf/risingwave",children:"RisingWave"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"For other use cases, continue with the setup details below for general instruction."}),"\n",(0,t.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,t.jsx)(n.p,{children:"Provide an auth token when setting up the Dekaf connector. This can be a password of your choosing and will be used to authenticate consumers to your Kafka topics."}),"\n",(0,t.jsxs)(n.p,{children:["Once the connector is created, note the full materialization name, such as ",(0,t.jsx)(n.code,{children:"YOUR-ORG/YOUR-PREFIX/YOUR-MATERIALIZATION"}),". You will use this as the username."]}),"\n",(0,t.jsx)(n.p,{children:"You may then connect to a Kafka consumer of your choice using the following details:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Broker Address"}),": ",(0,t.jsx)(n.code,{children:"dekaf.estuary-data.com:9092"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Schema Registry Address"}),": ",(0,t.jsx)(n.code,{children:"https://dekaf.estuary-data.com"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Security Protocol"}),": ",(0,t.jsx)(n.code,{children:"SASL_SSL"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"SASL Mechanism"}),": ",(0,t.jsx)(n.code,{children:"PLAIN"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"SASL Username"}),": The full name of your materialization"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"SASL Password"}),": The auth token you specified"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Schema Registry Username"}),": The full name of your materialization"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Schema Registry Password"}),": The auth token you specified"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"To subscribe to a particular topic, use a binding's topic name. By default, this will be the collection name."}),"\n",(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsx)(n.p,{children:"To use this connector, begin with data in one or more Flow collections.\nUse the below properties to configure a Dekaf materialization, which will direct one or more of your Flow collections to your desired topics."}),"\n",(0,t.jsx)(n.h3,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(n.h4,{id:"endpoint",children:"Endpoint"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Title"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Required/Default"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"/token"})}),(0,t.jsx)(n.td,{children:"Auth Token"}),(0,t.jsx)(n.td,{children:"The password that Kafka consumers can use to authenticate to this task."}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Required"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"/strict_topic_names"})}),(0,t.jsx)(n.td,{children:"Strict Topic Names"}),(0,t.jsx)(n.td,{children:"Whether or not to expose topic names in a strictly Kafka-compliant format."}),(0,t.jsx)(n.td,{children:"boolean"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"false"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"/deletions"})}),(0,t.jsx)(n.td,{children:"Deletion Mode"}),(0,t.jsxs)(n.td,{children:["Can choose between ",(0,t.jsx)(n.code,{children:"kafka"})," or ",(0,t.jsx)(n.code,{children:"cdc"})," deletion modes."]}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"kafka"})})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"bindings",children:"Bindings"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Title"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Required/Default"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"/topic_name"})}),(0,t.jsx)(n.td,{children:"Topic Name"}),(0,t.jsx)(n.td,{children:"Kafka topic name that Dekaf will publish under."}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"Required"})]})})]}),"\n",(0,t.jsx)(n.h3,{id:"sample",children:"Sample"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"materializations:\n  ${PREFIX}/${mat_name}:\n    endpoint:\n      dekaf:\n        config:\n          token: <auth-token>\n          strict_topic_names: false\n          deletions: kafka\n        variant: generic\n    bindings:\n      - resource:\n          topic_name: ${COLLECTION_NAME}\n        source: ${PREFIX}/${COLLECTION_NAME}\n"})})]})}function j(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(x,{...e})}):x(e)}}}]);