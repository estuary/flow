"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[5440],{28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>o});var r=n(96540);const s={},i=r.createContext(s);function c(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(i.Provider,{value:t},e.children)}},60590:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"reference/Connectors/materialization-connectors/apache-kafka","title":"Apache Kafka","description":"This connector materializes Flow collections into Apache Kafka topics.","source":"@site/docs/reference/Connectors/materialization-connectors/apache-kafka.md","sourceDirName":"reference/Connectors/materialization-connectors","slug":"/reference/Connectors/materialization-connectors/apache-kafka","permalink":"/reference/Connectors/materialization-connectors/apache-kafka","draft":false,"unlisted":false,"editUrl":"https://github.com/estuary/flow/edit/master/site/docs/reference/Connectors/materialization-connectors/apache-kafka.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Apache Iceberg","permalink":"/reference/Connectors/materialization-connectors/apache-iceberg"},"next":{"title":"Apache Parquet Files in Azure Blob Storage","permalink":"/reference/Connectors/materialization-connectors/azure-blob-parquet"}}');var s=n(74848),i=n(28453);const c={},o="Apache Kafka",a={},d=[{value:"Supported message formats",id:"supported-message-formats",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Authentication and connection security",id:"authentication-and-connection-security",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Properties",id:"properties",level:3},{value:"Endpoint",id:"endpoint",level:4},{value:"Bindings",id:"bindings",level:4},{value:"Sample",id:"sample",level:3},{value:"Delta updates",id:"delta-updates",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"apache-kafka",children:"Apache Kafka"})}),"\n",(0,s.jsx)(t.p,{children:"This connector materializes Flow collections into Apache Kafka topics."}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://ghcr.io/estuary/materialize-kafka:dev",children:(0,s.jsx)(t.code,{children:"ghcr.io/estuary/materialize-kafka:dev"})}),"\nprovides the latest connector image. You can also follow the link in your browser to see past image\nversions."]}),"\n",(0,s.jsxs)(t.p,{children:["Messages with this connector are currently delivered using an at-least-once non-transactional mode of operation rather than exactly-once. ",(0,s.jsx)(t.a,{href:"mailto:support@estuary.dev",children:"Let us know"})," if your use case requires transaction support."]}),"\n",(0,s.jsxs)(t.p,{children:["If you want to integrate with a Kafka consumer without managing your own broker and registry, see the ",(0,s.jsx)(t.a,{href:"/reference/Connectors/materialization-connectors/Dekaf/",children:"Dekaf"})," connector instead."]}),"\n",(0,s.jsx)(t.h2,{id:"supported-message-formats",children:"Supported message formats"}),"\n",(0,s.jsx)(t.p,{children:"This connectors supports materializing Kafka messages encoded in Avro or JSON\nformat."}),"\n",(0,s.jsxs)(t.p,{children:["For Avro messages, the connector must be configured to use a ",(0,s.jsx)(t.a,{href:"https://docs.confluent.io/platform/current/schema-registry/index.html",children:"schema\nregistry"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"JSON messages may be materialized without a schema registry."}),"\n",(0,s.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["A Kafka cluster with:","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://kafka.apache.org/documentation/#producerconfigs_bootstrap.servers",children:"bootstrap.servers"}),"\nconfigured so that clients may connect via the desired host and port"]}),"\n",(0,s.jsx)(t.li,{children:"An authentication mechanism of choice set up"}),"\n",(0,s.jsx)(t.li,{children:"Connection security enabled with TLS"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["If using Avro message format with schema registry:","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"The endpoint to use for connecting to the schema registry"}),"\n",(0,s.jsx)(t.li,{children:"Username for authentication"}),"\n",(0,s.jsx)(t.li,{children:"Password for authentication"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsxs)(t.p,{children:["If you are using the Confluent Cloud Schema Registry, your schema registry\nusername and password will be the ",(0,s.jsx)(t.strong,{children:"key"})," and ",(0,s.jsx)(t.strong,{children:"secret"})," from your schema\nregistry API key. See the ",(0,s.jsx)(t.a,{href:"https://docs.confluent.io/cloud/current/get-started/schema-registry.html#create-an-api-key-for-ccloud-sr",children:"Confluent Cloud Schema Registry\nDocumentation"}),"\nfor help setting up a schema registry API key."]})}),"\n",(0,s.jsx)(t.h3,{id:"authentication-and-connection-security",children:"Authentication and connection security"}),"\n",(0,s.jsxs)(t.p,{children:["A wide ",(0,s.jsx)(t.a,{href:"https://kafka.apache.org/documentation/#security_overview",children:"variety of authentication\nmethods"})," are\navailable for Kafka clusters. Flow supports SASL/SCRAM-SHA-256,\nSASL/SCRAM-SHA-512, and SASL/PLAIN. When authentication details are not\nprovided, the client connection will attempt to use PLAINTEXT (insecure)\nprotocol."]}),"\n",(0,s.jsxs)(t.p,{children:["If you don't already have authentication enabled on your cluster, Estuary\nrecommends either of the listed\n",(0,s.jsx)(t.a,{href:"https://kafka.apache.org/documentation/#security_sasl_scram",children:"SASL/SCRAM"}),"\nmethods. With SCRAM, you set up a username and password, making it analogous to\nthe traditional authentication mechanisms you use in other applications."]}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsxs)(t.p,{children:["If you are connecting to Kafka hosted on Confluent Cloud, select the ",(0,s.jsx)(t.strong,{children:"PLAIN"}),"\nSASL mechanism."]})}),"\n",(0,s.jsxs)(t.p,{children:['For connection security, Estuary recommends that you enable TLS encryption for\nyour SASL mechanism of choice, as well as all other components of your cluster.\nNote that because TLS replaced now-deprecated SSL encryption, Kafka still uses\nthe acronym "SSL" to refer to TLS encryption. See ',(0,s.jsx)(t.a,{href:"https://docs.confluent.io/platform/current/kafka/authentication_ssl.html",children:"Confluent's\ndocumentation"}),"\nfor details."]}),"\n",(0,s.jsx)(t.admonition,{title:"Beta",type:"info",children:(0,s.jsx)(t.p,{children:"TLS encryption is currently the only supported connection security mechanism for\nthis connector. Other connection security methods may be enabled in the future."})}),"\n",(0,s.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsx)(t.p,{children:"Use the below properties to configure the Apache Kafka materialization, which\nwill direct one or more of your Flow collections to your desired topics."}),"\n",(0,s.jsx)(t.p,{children:'Note that, by default, all top-level fields are recommended for materialization. You can also de-select unnecessary top-level fields or include additional nested fields in the "Field Selection" section of the resource configuration.'}),"\n",(0,s.jsx)(t.h3,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(t.h4,{id:"endpoint",children:"Endpoint"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Property"}),(0,s.jsx)(t.th,{children:"Title"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Required/Default"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"/bootstrap_servers"})})}),(0,s.jsx)(t.td,{children:"Bootstrap servers"}),(0,s.jsx)(t.td,{children:"The initial servers in the Kafka cluster to connect to, separated by commas."}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"Required"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"/message_format"})})}),(0,s.jsx)(t.td,{children:"Message Format"}),(0,s.jsx)(t.td,{children:"Format for materialized messages. Avro format requires a schema registry configuration. Messages in JSON format do not use a schema registry."}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"Required"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"/topic_partitions"})})}),(0,s.jsx)(t.td,{children:"Topic Partitions"}),(0,s.jsx)(t.td,{children:"The number of partitions to create new topics with."}),(0,s.jsx)(t.td,{children:"integer"}),(0,s.jsx)(t.td,{children:"6"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"/topic_replication_factor"})})}),(0,s.jsx)(t.td,{children:"Topic Replication Factor"}),(0,s.jsx)(t.td,{children:"The replication factor to create new topics with."}),(0,s.jsx)(t.td,{children:"integer"}),(0,s.jsx)(t.td,{children:"3"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"/credentials"})})}),(0,s.jsx)(t.td,{children:"Credentials"}),(0,s.jsx)(t.td,{children:"Connection details used to authenticate a client connection to Kafka via SASL."}),(0,s.jsx)(t.td,{children:"object"}),(0,s.jsx)(t.td,{children:"Required"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"/tls"})}),(0,s.jsx)(t.td,{children:"TLS"}),(0,s.jsx)(t.td,{children:"TLS connection settings."}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:'"system_certificates"'})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"/credentials/auth_type"})}),(0,s.jsx)(t.td,{children:"Authentication type"}),(0,s.jsxs)(t.td,{children:["The type of authentication to use. Currently supports ",(0,s.jsx)(t.code,{children:"UserPassword"}),"."]}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"/credentials/mechanism"})}),(0,s.jsx)(t.td,{children:"SASL Mechanism"}),(0,s.jsx)(t.td,{children:"SASL mechanism describing how to exchange and authenticate client servers."}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"/credentials/username"})}),(0,s.jsx)(t.td,{children:"Username"}),(0,s.jsx)(t.td,{children:"Username, if applicable for the authentication mechanism chosen."}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"/credentials/password"})}),(0,s.jsx)(t.td,{children:"Password"}),(0,s.jsx)(t.td,{children:"Password, if applicable for the authentication mechanism chosen."}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"/schema_registry"})}),(0,s.jsx)(t.td,{children:"Schema Registry"}),(0,s.jsx)(t.td,{children:"Connection details for interacting with a schema registry."}),(0,s.jsx)(t.td,{children:"object"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"/schema_registry/endpoint"})}),(0,s.jsx)(t.td,{children:"Schema Registry Endpoint"}),(0,s.jsxs)(t.td,{children:["Schema registry API endpoint. For example: ",(0,s.jsx)(t.a,{href:"https://registry-id.us-east-2.aws.confluent.cloud",children:"https://registry-id.us-east-2.aws.confluent.cloud"}),"."]}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"/schema_registry/username"})}),(0,s.jsx)(t.td,{children:"Schema Registry Username"}),(0,s.jsx)(t.td,{children:"Schema registry username to use for authentication. If you are using Confluent Cloud, this will be the 'Key' from your schema registry API key."}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"/schema_registry/password"})}),(0,s.jsx)(t.td,{children:"Schema Registry Password"}),(0,s.jsx)(t.td,{children:"Schema registry password to use for authentication. If you are using Confluent Cloud, this will be the 'Secret' from your schema registry API key."}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{})]})]})]}),"\n",(0,s.jsx)(t.h4,{id:"bindings",children:"Bindings"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Property"}),(0,s.jsx)(t.th,{children:"Title"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Required/Default"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"/topic"})})}),(0,s.jsx)(t.td,{children:"Topic"}),(0,s.jsx)(t.td,{children:"Name of the Kafka topic to materialize to."}),(0,s.jsx)(t.td,{children:"string"}),(0,s.jsx)(t.td,{children:"Required"})]})})]}),"\n",(0,s.jsx)(t.h3,{id:"sample",children:"Sample"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"materializations:\n  ${PREFIX}/${mat_name}:\n    endpoint:\n      connector:\n          bootstrap_servers: server1:9092,server2:9092\n          tls: system_certificates\n          credentials:\n            auth_type: UserPassword\n            mechanism: SCRAM-SHA-512\n            username: bruce.wayne\n            password: definitely-not-batman\n          schema_registry:\n            endpoint: https://schema.registry.com\n            username: schemaregistry.username\n            password: schemaregistry.password\n    bindings:\n      - resource:\n          topic: ${TOPIC_NAME}\n        source: ${PREFIX}/${COLLECTION_NAME}\n"})}),"\n",(0,s.jsx)(t.h2,{id:"delta-updates",children:"Delta updates"}),"\n",(0,s.jsxs)(t.p,{children:["This connector supports ",(0,s.jsx)(t.a,{href:"/concepts/materialization#delta-updates",children:"delta\nupdates"})," for materializing\ndocuments."]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);