"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[6846],{28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var t=r(96540);const i={},s=t.createContext(i);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(s.Provider,{value:n},e.children)}},61734:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"reference/Connectors/capture-connectors/MariaDB/amazon-rds-mariadb","title":"Amazon RDS for MariaDB","description":"This is a change data capture (CDC) connector that captures change events from a MariaDB database via the Binary Log.","source":"@site/docs/reference/Connectors/capture-connectors/MariaDB/amazon-rds-mariadb.md","sourceDirName":"reference/Connectors/capture-connectors/MariaDB","slug":"/reference/Connectors/capture-connectors/MariaDB/amazon-rds-mariadb","permalink":"/reference/Connectors/capture-connectors/MariaDB/amazon-rds-mariadb","draft":false,"unlisted":false,"editUrl":"https://github.com/estuary/flow/edit/master/site/docs/reference/Connectors/capture-connectors/MariaDB/amazon-rds-mariadb.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"MariaDB","permalink":"/reference/Connectors/capture-connectors/MariaDB/"},"next":{"title":"Marketo","permalink":"/reference/Connectors/capture-connectors/marketo"}}');var i=r(74848),s=r(28453);const a={sidebar_position:3},o="Amazon RDS for MariaDB",d={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setup",id:"setup",level:3},{value:"Capturing from Read Replicas",id:"capturing-from-read-replicas",level:2},{value:"Backfills and performance considerations",id:"backfills-and-performance-considerations",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Properties",id:"properties",level:3},{value:"Endpoint",id:"endpoint",level:4},{value:"Bindings",id:"bindings",level:4},{value:"Sample",id:"sample",level:3},{value:"Troubleshooting Capture Errors",id:"troubleshooting-capture-errors",level:2},{value:"Unsupported Operations",id:"unsupported-operations",level:3},{value:"Data Manipulation Queries",id:"data-manipulation-queries",level:3},{value:"Unhandled Queries",id:"unhandled-queries",level:3},{value:"Metadata Errors",id:"metadata-errors",level:3},{value:"Insufficient Binlog Retention",id:"insufficient-binlog-retention",level:3}];function l(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"amazon-rds-for-mariadb",children:"Amazon RDS for MariaDB"})}),"\n",(0,i.jsxs)(n.p,{children:["This is a change data capture (CDC) connector that captures change events from a MariaDB database via the ",(0,i.jsx)(n.a,{href:"https://mariadb.com/kb/en/overview-of-the-binary-log/",children:"Binary Log"}),".\nIt's derived from the ",(0,i.jsx)(n.a,{href:"/reference/Connectors/capture-connectors/MySQL/",children:"MySQL capture connector"}),",\nso the same configuration applies, but the setup steps look somewhat different."]}),"\n",(0,i.jsxs)(n.p,{children:["This connector is available for use in the Flow web application. For local development or open-source workflows, ",(0,i.jsx)(n.a,{href:"https://github.com/estuary/connectors/pkgs/container/source-mariadb",children:(0,i.jsx)(n.code,{children:"ghcr.io/estuary/source-mariadb:dev"})})," provides the latest version of the connector as a Docker image. You can also follow the link in your browser to see past image versions."]}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsx)(n.p,{children:"To use this connector, you'll need a MariaDB database setup with the following."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.a,{href:"https://mariadb.com/kb/en/binary-log-formats/",children:(0,i.jsx)(n.code,{children:"binlog_format"})}),"\nsystem variable must be set to ",(0,i.jsx)(n.code,{children:"ROW"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.a,{href:"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/mysql-stored-proc-configuring.html#mysql_rds_set_configuration-usage-notes.binlog-retention-hours",children:"binary log retention"}),"\nperiod should be set to 168 hours (the maximum allowed by RDS).","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["This value may be set lower if necessary, but we ",(0,i.jsx)(n.a,{href:"#insufficient-binlog-retention",children:"discourage"})," doing so as this may increase the likelihood of unrecoverable failures."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["A database user with appropriate permissions:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"REPLICATION CLIENT"})," and ",(0,i.jsx)(n.code,{children:"REPLICATION SLAVE"})," ",(0,i.jsx)(n.a,{href:"https://mariadb.com/docs/skysql/ref/es10.6/privileges/",children:"privileges"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Permission to read the tables being captured."}),"\n",(0,i.jsxs)(n.li,{children:["Permission to read from ",(0,i.jsx)(n.code,{children:"information_schema"})," tables, if automatic discovery is used."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["If the table(s) to be captured include columns of type ",(0,i.jsx)(n.code,{children:"DATETIME"}),", the ",(0,i.jsx)(n.code,{children:"time_zone"})," system variable\nmust be set to an IANA zone name or numerical offset or the capture configured with a ",(0,i.jsx)(n.code,{children:"timezone"})," to use by default."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"setup",children:"Setup"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Allow connections to the database from the Estuary Flow IP address."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html",children:"Modify the database"}),", setting ",(0,i.jsx)(n.strong,{children:"Public accessibility"})," to ",(0,i.jsx)(n.strong,{children:"Yes"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Edit the VPC security group associated with your database, or create a new VPC security group and associate it with the database.\nRefer to the ",(0,i.jsx)(n.a,{href:"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.RDSSecurityGroups.html#Overview.RDSSecurityGroups.Create",children:"steps in the Amazon documentation"}),".\nCreate a new inbound rule and a new outbound rule that allow all traffic from the ",(0,i.jsx)(n.a,{href:"/reference/allow-ip-addresses",children:"Estuary Flow IP addresses"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsx)(n.p,{children:"Alternatively, you can allow secure connections via SSH tunneling. To do so:"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Follow the guide to ",(0,i.jsx)(n.a,{href:"/guides/connect-network/",children:"configure an SSH server for tunneling"})]}),"\n",(0,i.jsxs)(n.li,{children:["When you configure your connector as described in the ",(0,i.jsx)(n.a,{href:"#configuration",children:"configuration"})," section above,\nincluding the additional ",(0,i.jsx)(n.code,{children:"networkTunnel"})," configuration to enable the SSH tunnel.\nSee ",(0,i.jsx)(n.a,{href:"/concepts/connectors#connecting-to-endpoints-on-secure-networks",children:"Connecting to endpoints on secure networks"}),"\nfor additional details and a sample."]}),"\n"]})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Create a RDS parameter group to enable replication in MariaDB."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithParamGroups.Creating.html",children:"Create a parameter group"}),".\nCreate a unique name and description and set the following properties:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Family"}),": mariadb10.6"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Type"}),": DB Parameter group"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithParamGroups.Modifying.html",children:"Modify the new parameter group"})," and update the following parameters:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"binlog_format: ROW"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithParamGroups.Associating.html",children:"Associate the parameter group"}),"\nwith the database and set ",(0,i.jsx)(n.a,{href:"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.Enabling.html",children:"Backup Retention Period"})," to 7 days.\nReboot the database to allow the changes to take effect."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Switch to your MariaDB client. Run the following commands to create a new user for the capture with appropriate permissions:"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"CREATE USER IF NOT EXISTS flow_capture IDENTIFIED BY 'secret'\nGRANT REPLICATION CLIENT, REPLICATION SLAVE ON *.* TO 'flow_capture';\nGRANT SELECT ON *.* TO 'flow_capture';\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsx)(n.li,{children:"Run the following command to set the binary log retention to 7 days, the maximum value which RDS MariaDB permits:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"CALL mysql.rds_set_configuration('binlog retention hours', 168);\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"5",children:["\n",(0,i.jsxs)(n.li,{children:["In the ",(0,i.jsx)(n.a,{href:"https://console.aws.amazon.com/rds/",children:"RDS console"}),", note the instance's Endpoint and Port. You'll need these for the ",(0,i.jsx)(n.code,{children:"address"})," property when you configure the connector."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"capturing-from-read-replicas",children:"Capturing from Read Replicas"}),"\n",(0,i.jsx)(n.p,{children:"This connector supports capturing from a read replica of your database, provided that\nbinary logging is enabled on the replica and all other requirements are met. To create\na read replica:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Follow RDS instructions to ",(0,i.jsx)(n.a,{href:"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReadRepl.Create.html",children:"create a read replica"}),"\nof your MariaDB database."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html",children:"Modify the replica"}),"\nand set the following:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"DB parameter group"}),": the parameter group you created previously"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Backup retention period"}),": 7 days"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Public access"}),": Publicly accessible"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Reboot the replica to allow the changes to take effect."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"backfills-and-performance-considerations",children:"Backfills and performance considerations"}),"\n",(0,i.jsxs)(n.p,{children:["When the MariaDB capture is initiated, by default, the connector first ",(0,i.jsx)(n.em,{children:"backfills"}),", or captures the targeted tables in their current state. It then transitions to capturing change events on an ongoing basis."]}),"\n",(0,i.jsx)(n.p,{children:"This is desirable in most cases, as it ensures that a complete view of your tables is captured into Flow.\nHowever, you may find it appropriate to skip the backfill, especially for extremely large tables."}),"\n",(0,i.jsxs)(n.p,{children:["In this case, you may turn off backfilling on a per-table basis. See ",(0,i.jsx)(n.a,{href:"#properties",children:"properties"})," for details."]}),"\n",(0,i.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsxs)(n.p,{children:["You configure connectors either in the Flow web app, or by directly editing the catalog specification file.\nSee ",(0,i.jsx)(n.a,{href:"/concepts/connectors#using-connectors",children:"connectors"})," to learn more about using connectors. The values and specification sample below provide configuration details specific to the MariaDB source connector."]}),"\n",(0,i.jsx)(n.h3,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(n.h4,{id:"endpoint",children:"Endpoint"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Property"}),(0,i.jsx)(n.th,{children:"Title"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Required/Default"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"/address"})})}),(0,i.jsx)(n.td,{children:"Server Address"}),(0,i.jsxs)(n.td,{children:["The host or host",":port"," at which the database can be reached."]}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"Required"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"/user"})})}),(0,i.jsx)(n.td,{children:"Login User"}),(0,i.jsx)(n.td,{children:"The database user to authenticate as."}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsxs)(n.td,{children:["Required, ",(0,i.jsx)(n.code,{children:'"flow_capture"'})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"/password"})})}),(0,i.jsx)(n.td,{children:"Login Password"}),(0,i.jsx)(n.td,{children:"Password for the specified database user."}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"Required"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"/timezone"})}),(0,i.jsx)(n.td,{children:"Timezone"}),(0,i.jsxs)(n.td,{children:["Timezone to use when capturing datetime columns. Should normally be left blank to use the database's ",(0,i.jsx)(n.code,{children:"'time_zone'"})," system variable. Only required if the ",(0,i.jsx)(n.code,{children:"'time_zone'"})," system variable cannot be read and columns with type datetime are being captured. Must be a valid IANA time zone name or +HH",":MM"," offset. Takes precedence over the ",(0,i.jsx)(n.code,{children:"'time_zone'"})," system variable if both are set."]}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"/advanced/dbname"})}),(0,i.jsx)(n.td,{children:"Database Name"}),(0,i.jsx)(n.td,{children:"The name of database to connect to. In general this shouldn't matter. The connector can discover and capture from all databases it's authorized to access."}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"mysql"'})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"/advanced/node_id"})}),(0,i.jsx)(n.td,{children:"Node ID"}),(0,i.jsx)(n.td,{children:"Node ID for the capture. Each node in a replication cluster must have a unique 32-bit ID. The specific value doesn't matter so long as it is unique. If unset or zero the connector will pick a value."}),(0,i.jsx)(n.td,{children:"integer"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"/advanced/skip_backfills"})}),(0,i.jsx)(n.td,{children:"Skip Backfills"}),(0,i.jsx)(n.td,{children:"A comma-separated list of fully-qualified table names which should not be backfilled."}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"/advanced/backfill_chunk_size"})}),(0,i.jsx)(n.td,{children:"Backfill Chunk Size"}),(0,i.jsx)(n.td,{children:"The number of rows which should be fetched from the database in a single backfill query."}),(0,i.jsx)(n.td,{children:"integer"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"131072"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"/advanced/skip_binlog_retention_check"})}),(0,i.jsx)(n.td,{children:"Skip Binlog Retention Sanity Check"}),(0,i.jsx)(n.td,{children:"Bypasses the 'dangerously short binlog retention' sanity check at startup. Only do this if you understand the danger and have a specific need."}),(0,i.jsx)(n.td,{children:"boolean"}),(0,i.jsx)(n.td,{})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"bindings",children:"Bindings"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Property"}),(0,i.jsx)(n.th,{children:"Title"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Required/Default"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"/namespace"})})}),(0,i.jsx)(n.td,{children:"Namespace"}),(0,i.jsxs)(n.td,{children:["The ",(0,i.jsx)(n.a,{href:"https://mariadb.com/kb/en/understanding-mariadb-architecture/#databases",children:"database"})," in which the table resides."]}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"Required"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"/stream"})})}),(0,i.jsx)(n.td,{children:"Stream"}),(0,i.jsx)(n.td,{children:"Name of the table to be captured from the database."}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"Required"})]})]})]}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsxs)(n.p,{children:["When you configure this connector in the web application, the automatic ",(0,i.jsx)(n.strong,{children:"discovery"})," process sets up a binding for ",(0,i.jsx)(n.em,{children:"most"})," tables it finds in your database, but there are exceptions."]}),(0,i.jsxs)(n.p,{children:["Tables in the MariaDB system databases ",(0,i.jsx)(n.code,{children:"information_schema"}),", ",(0,i.jsx)(n.code,{children:"mysql"}),", and ",(0,i.jsx)(n.code,{children:"performance_schema"})," will not be discovered.\nYou can add bindings for such tables manually."]})]}),"\n",(0,i.jsx)(n.h3,{id:"sample",children:"Sample"}),"\n",(0,i.jsx)(n.p,{children:"A minimal capture definition will look like the following:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'captures:\n  ${PREFIX}/${CAPTURE_NAME}:\n    endpoint:\n      connector:\n        image: ghcr.io/estuary/source-mariadb:dev\n        config:\n          address: "127.0.0.1:3306"\n          user: "flow_capture"\n          password: "secret"\n    bindings:\n      - resource:\n          namespace: ${TABLE_NAMESPACE}\n          stream: ${TABLE_NAME}\n        target: ${PREFIX}/${COLLECTION_NAME}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Your capture definition will likely be more complex, with additional bindings for each table in the source database."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"/concepts/captures",children:"Learn more about capture definitions."})}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting-capture-errors",children:"Troubleshooting Capture Errors"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"source-amazon-rds-mariadb"})," connector is designed to halt immediately if something wrong or unexpected happens, instead of continuing on and potentially outputting incorrect data. What follows is a non-exhaustive list of some potential failure modes, and what action should be taken to fix these situations:"]}),"\n",(0,i.jsx)(n.h3,{id:"unsupported-operations",children:"Unsupported Operations"}),"\n",(0,i.jsxs)(n.p,{children:["If your capture is failing with an ",(0,i.jsx)(n.code,{children:'"unsupported operation {ALTER,DROP,TRUNCATE,etc} TABLE"'})," error, this indicates that such an operation has taken place impacting a table which is currently being captured."]}),"\n",(0,i.jsxs)(n.p,{children:["In the case of ",(0,i.jsx)(n.code,{children:"DROP TABLE"})," and other destructive operations this is not supported, and can only be resolved by removing the offending table(s) from the capture bindings list, after which you may recreate the capture if desired (causing the latest state of the table to be recaptured in its entirety)."]}),"\n",(0,i.jsxs)(n.p,{children:["In the case of ",(0,i.jsx)(n.code,{children:"ALTER TABLE"})," we currently support table alterations to add or drop columns from a table. This error indicates that whatever alteration took place is not currently supported. Practically speaking the immediate resolution is the same as for a ",(0,i.jsx)(n.code,{children:"DROP"})," or ",(0,i.jsx)(n.code,{children:"TRUNCATE TABLE"}),", but if you frequently perform schema migrations it may be worth reaching out to see if we can add support for whatever table alteration you just did."]}),"\n",(0,i.jsx)(n.h3,{id:"data-manipulation-queries",children:"Data Manipulation Queries"}),"\n",(0,i.jsxs)(n.p,{children:["If your capture is failing with an ",(0,i.jsx)(n.code,{children:'"unsupported DML query"'})," error, this means that an ",(0,i.jsx)(n.code,{children:"INSERT"}),", ",(0,i.jsx)(n.code,{children:"UPDATE"}),", ",(0,i.jsx)(n.code,{children:"DELETE"})," or other data manipulation query is present in the binlog. This should generally not happen if ",(0,i.jsx)(n.code,{children:"binlog_format = 'ROW'"})," as described in the ",(0,i.jsx)(n.a,{href:"#prerequisites",children:"Prerequisites"})," section."]}),"\n",(0,i.jsxs)(n.p,{children:["Resolving this error requires fixing the ",(0,i.jsx)(n.code,{children:"binlog_format"})," system variable, and then either tearing down and recreating the entire capture so that it restarts at a later point in the binlog, or in the case of an ",(0,i.jsx)(n.code,{children:"INSERT"}),"/",(0,i.jsx)(n.code,{children:"DELETE"})," query it may suffice to remove the capture binding for the offending table and then re-add it."]}),"\n",(0,i.jsx)(n.h3,{id:"unhandled-queries",children:"Unhandled Queries"}),"\n",(0,i.jsxs)(n.p,{children:["If your capture is failing with an ",(0,i.jsx)(n.code,{children:'"unhandled query"'})," error, some SQL query is present in the binlog which the connector does not (currently) understand."]}),"\n",(0,i.jsxs)(n.p,{children:["In general, this error suggests that the connector should be modified to at least recognize this type of query, and most likely categorize it as either an unsupported ",(0,i.jsx)(n.a,{href:"#data-manipulation-queries",children:"DML Query"}),", an unsupported ",(0,i.jsx)(n.a,{href:"#unsupported-operations",children:"Table Operation"}),", or something that can safely be ignored. Until such a fix is made the capture cannot proceed, and you will need to backfill all collections to allow the capture to jump ahead to a later point in the binlog."]}),"\n",(0,i.jsx)(n.h3,{id:"metadata-errors",children:"Metadata Errors"}),"\n",(0,i.jsxs)(n.p,{children:["If your capture is failing with a ",(0,i.jsx)(n.code,{children:'"metadata error"'})," then something has gone badly wrong with the capture's tracking of table metadata, such as column names or datatypes."]}),"\n",(0,i.jsx)(n.p,{children:"This should never happen, and most likely means that the binlog itself is corrupt in some way. If this occurs, it can be resolved by backfilling all collections from the source."}),"\n",(0,i.jsx)(n.h3,{id:"insufficient-binlog-retention",children:"Insufficient Binlog Retention"}),"\n",(0,i.jsxs)(n.p,{children:["If your capture fails with a ",(0,i.jsx)(n.code,{children:'"binlog retention period is too short"'})," error, it is informing you that the MariaDB binlog retention period is set to a dangerously low value."]}),"\n",(0,i.jsx)(n.p,{children:"The concern is that if a capture is disabled or the server becomes unreachable for longer than the binlog retention period, the database might delete a binlog segment which the capture isn't yet done with. If this happens then change events have been permanently lost, and the only way to get the capture running again is to skip ahead to a portion of the binlog which still exists. For correctness this requires backfilling the current contents of all tables from the source, and so we prefer to avoid it as much as possible. It's much easier to just set up your binlog retention with enough wiggle room to recover from temporary failures."}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:'"binlog retention period is too short"'})," error should normally be fixed by setting a longer retention period as described in these setup instructions. However, advanced users who understand the risks can use the ",(0,i.jsx)(n.code,{children:"skip_binlog_retention_check"})," configuration option to disable this safety."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);