{
  "db_name": "PostgreSQL",
  "query": "\n        with collections(id) as (\n            select ls.id\n            from unnest($2::text[]) as names(catalog_name)\n            join live_specs ls on ls.catalog_name = names.catalog_name\n        ),\n        exp(id) as (\n            select lsf.source_id as id\n            from collections c\n            join live_spec_flows lsf on c.id = lsf.target_id\n            union\n            select lsf.target_id as id\n            from collections c\n            join live_spec_flows lsf on c.id = lsf.source_id\n        )\n        select\n            ls.id as \"id: Id\",\n            ls.last_pub_id as \"last_pub_id: Id\",\n            ls.last_build_id as \"last_build_id: Id\",\n            ls.data_plane_id as \"data_plane_id: Id\",\n            ls.catalog_name,\n            ls.spec_type as \"spec_type?: CatalogType\",\n            ls.spec as \"spec: TextJson<Box<RawValue>>\",\n            ls.built_spec as \"built_spec: TextJson<Box<RawValue>>\",\n            ls.inferred_schema_md5,\n            (\n                select max(capability) from internal.user_roles($1) r\n                where starts_with(ls.catalog_name, r.role_prefix)\n            ) as \"user_capability: Capability\",\n            coalesce(\n                (select json_agg(row_to_json(role_grants))\n                from role_grants\n                where starts_with(ls.catalog_name, subject_role)),\n                '[]'\n            ) as \"spec_capabilities!: Json<Vec<RoleGrant>>\",\n            ls.dependency_hash\n        from exp\n        join live_specs ls on ls.id = exp.id\n        where ls.spec is not null and not ls.catalog_name = any($3);\n        ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id: Id",
        "type_info": "Macaddr8"
      },
      {
        "ordinal": 1,
        "name": "last_pub_id: Id",
        "type_info": "Macaddr8"
      },
      {
        "ordinal": 2,
        "name": "last_build_id: Id",
        "type_info": "Macaddr8"
      },
      {
        "ordinal": 3,
        "name": "data_plane_id: Id",
        "type_info": "Macaddr8"
      },
      {
        "ordinal": 4,
        "name": "catalog_name",
        "type_info": "Text"
      },
      {
        "ordinal": 5,
        "name": "spec_type?: CatalogType",
        "type_info": {
          "Custom": {
            "name": "catalog_spec_type",
            "kind": {
              "Enum": [
                "capture",
                "collection",
                "materialization",
                "test"
              ]
            }
          }
        }
      },
      {
        "ordinal": 6,
        "name": "spec: TextJson<Box<RawValue>>",
        "type_info": "Json"
      },
      {
        "ordinal": 7,
        "name": "built_spec: TextJson<Box<RawValue>>",
        "type_info": "Json"
      },
      {
        "ordinal": 8,
        "name": "inferred_schema_md5",
        "type_info": "Text"
      },
      {
        "ordinal": 9,
        "name": "user_capability: Capability",
        "type_info": {
          "Custom": {
            "name": "grant_capability",
            "kind": {
              "Enum": [
                "x_00",
                "x_01",
                "x_02",
                "x_03",
                "x_04",
                "x_05",
                "x_06",
                "x_07",
                "x_08",
                "x_09",
                "read",
                "x_11",
                "x_12",
                "x_13",
                "x_14",
                "x_15",
                "x_16",
                "x_17",
                "x_18",
                "x_19",
                "write",
                "x_21",
                "x_22",
                "x_23",
                "x_24",
                "x_25",
                "x_26",
                "x_27",
                "x_28",
                "x_29",
                "admin"
              ]
            }
          }
        }
      },
      {
        "ordinal": 10,
        "name": "spec_capabilities!: Json<Vec<RoleGrant>>",
        "type_info": "Json"
      },
      {
        "ordinal": 11,
        "name": "dependency_hash",
        "type_info": "Text"
      }
    ],
    "parameters": {
      "Left": [
        "Uuid",
        "TextArray",
        "TextArray"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      true,
      true,
      null,
      null,
      true
    ]
  },
  "hash": "6bc21fd940535409a6b59d230fed417ff92af5cb2f6c11a35944288b14fde343"
}
